{"version":3,"file":"mdast-util-gfm-footnote-B3y08S0o.js","sources":["../../node_modules/mdast-util-gfm-footnote/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n"],"names":["footnoteReference","footnoteReferencePeek","gfmFootnoteFromMarkdown","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","enterFootnoteCall","enterFootnoteCallString","exitFootnoteDefinition","exitFootnoteDefinitionLabelString","exitFootnoteCall","exitFootnoteCallString","gfmFootnoteToMarkdown","footnoteDefinition","token","label","node","assert","normalizeIdentifier","_","state","info","tracker","value","exit","subexit","map","line","index","blank"],"mappings":"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","x_google_ignoreList":[0]}