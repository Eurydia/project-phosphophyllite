{"version":3,"file":"rehype-document-Bflo6tOM.js","sources":["../../node_modules/rehype-document/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hastscript').Properties} Properties\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Array<string> | string | null | undefined} [css]\n *   URLs to stylesheets to use in `<link>`s (optional).\n * @property {'auto' | 'ltr' | 'rtl' | null | undefined} [dir]\n *   Direction of the document (optional).\n * @property {Array<string> | string | null | undefined} [js]\n *   URLs to scripts to use as `src` on `<script>`s (optional).\n * @property {string | null | undefined} [language='en']\n *   Language of document (default: `'en'`); should be a\n *   [BCP 47](https://tools.ietf.org/html/bcp47) language tag.\n * @property {Array<Properties> | Properties | null | undefined} [link]\n *   Generate extra `<link>`s with these properties (optional); passed as\n *   `properties` to [`hastscript`](https://github.com/syntax-tree/hastscript)\n *   with `'link'`.\n * @property {Array<Properties> | Properties | null | undefined} [meta]\n *   Generate extra `<meta>`s with these properties (optional); passed as\n *   `properties` to [`hastscript`](https://github.com/syntax-tree/hastscript)\n *   with `'meta'`.\n * @property {boolean | null | undefined} [responsive=true]\n *   Generate a `meta[viewport]` (default: `true`).\n * @property {Array<string> | string | null | undefined} [script]\n *   JavaScript source code of `<script>`s to add at end of `body` (optional).\n * @property {Array<string> | string | null | undefined} [style]\n *   CSS source code of `<style>`s to add (optional).\n * @property {string | null | undefined} [title]\n *   Text to use as title (optional); defaults to the file name (if any); can\n *   bet set with `file.data.matter.title` (`vfile-matter`) and\n *   `file.data.meta.title` (`rehype-infer-title-meta`), which are preferred.\n */\n\nimport {h} from 'hastscript'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Wrap a fragment in a document.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeDocument(options) {\n  const settings = options || emptyOptions\n  const css = toList(settings.css)\n  const dir = settings.dir\n  const js = toList(settings.js)\n  const language = settings.language || 'en'\n  const link = toList(settings.link)\n  let meta = toList(settings.meta)\n  const script = toList(settings.script)\n  const style = toList(settings.style)\n  const title = settings.title\n\n  if (settings.responsive !== false) {\n    meta = [\n      {content: 'width=device-width, initial-scale=1', name: 'viewport'},\n      ...meta\n    ]\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    const titleText =\n      file.data.meta?.title || file.data.matter?.title || title || file.stem\n    /** @type {Array<Nodes>} */\n    const contents = tree.type === 'root' ? [...tree.children] : [tree]\n    /** @type {Array<ElementContent>} */\n    const head = [{type: 'text', value: '\\n'}, h('meta', {charSet: 'utf-8'})]\n    let index = -1\n\n    if (contents.length > 0) {\n      contents.unshift({type: 'text', value: '\\n'})\n    }\n\n    if (titleText) {\n      head.push({type: 'text', value: '\\n'}, h('title', titleText))\n    }\n\n    while (++index < meta.length) {\n      head.push({type: 'text', value: '\\n'}, h('meta', meta[index]))\n    }\n\n    index = -1\n\n    while (++index < link.length) {\n      head.push({type: 'text', value: '\\n'}, h('link', link[index]))\n    }\n\n    // Inject style tags after linked CSS\n    index = -1\n\n    while (++index < style.length) {\n      head.push({type: 'text', value: '\\n'}, h('style', style[index]))\n    }\n\n    index = -1\n\n    while (++index < css.length) {\n      head.push(\n        {type: 'text', value: '\\n'},\n        h('link', {href: css[index], rel: 'stylesheet'})\n      )\n    }\n\n    head.push({type: 'text', value: '\\n'})\n\n    // Inject script tags before linked JS\n    index = -1\n\n    while (++index < script.length) {\n      contents.push({type: 'text', value: '\\n'}, h('script', script[index]))\n    }\n\n    index = -1\n\n    while (++index < js.length) {\n      contents.push({type: 'text', value: '\\n'}, h('script', {src: js[index]}))\n    }\n\n    contents.push({type: 'text', value: '\\n'})\n\n    return {\n      type: 'root',\n      children: [\n        {type: 'doctype'},\n        {type: 'text', value: '\\n'},\n        h('html', {dir, lang: language}, [\n          {type: 'text', value: '\\n'},\n          h('head', head),\n          {type: 'text', value: '\\n'},\n          h('body', contents),\n          {type: 'text', value: '\\n'}\n        ]),\n        {type: 'text', value: '\\n'}\n      ]\n    }\n  }\n}\n\n/**\n * Cast `value` to a list.\n *\n * @template Thing\n *   Value kind.\n * @param {Array<Thing> | Thing | null | undefined} value\n *   Value to cast.\n * @returns {Array<Thing>}\n *   List.\n */\nfunction toList(value) {\n  return value === null || value === undefined\n    ? []\n    : Array.isArray(value)\n      ? value\n      : [value]\n}\n"],"names":["emptyOptions","rehypeDocument","options","settings","css","toList","dir","js","language","link","meta","script","style","title","tree","file","titleText","contents","head","h","index","value"],"mappings":"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","x_google_ignoreList":[0]}