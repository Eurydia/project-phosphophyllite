{"version":3,"file":"react-hotkeys-hook-dnq5CXFg.js","sources":["../../node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js"],"sourcesContent":["import { useContext, createContext, useState, useCallback, useRef, useLayoutEffect, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod', 'ctrl'];\nvar mappedKeys = {\n  esc: 'escape',\n  \"return\": 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '`': 'backquote',\n  '#': 'backslash',\n  '+': 'bracketright',\n  ShiftLeft: 'shift',\n  ShiftRight: 'shift',\n  AltLeft: 'alt',\n  AltRight: 'alt',\n  MetaLeft: 'meta',\n  MetaRight: 'meta',\n  OSLeft: 'meta',\n  OSRight: 'meta',\n  ControlLeft: 'ctrl',\n  ControlRight: 'ctrl'\n};\nfunction mapKey(key) {\n  return (mappedKeys[key] || key).trim().toLowerCase().replace(/key|digit|numpad|arrow/, '');\n}\nfunction isHotkeyModifier(key) {\n  return reservedModifierKeywords.includes(key);\n}\nfunction parseKeysHookInput(keys, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  return keys.split(splitKey);\n}\nfunction parseHotkey(hotkey, combinationKey, description) {\n  if (combinationKey === void 0) {\n    combinationKey = '+';\n  }\n  var keys = hotkey.toLocaleLowerCase().split(combinationKey).map(function (k) {\n    return mapKey(k);\n  });\n  var modifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl') || keys.includes('control'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod')\n  };\n  var singleCharKeys = keys.filter(function (k) {\n    return !reservedModifierKeywords.includes(k);\n  });\n  return _extends({}, modifiers, {\n    keys: singleCharKeys,\n    description: description\n  });\n}\n\n(function () {\n  if (typeof document !== 'undefined') {\n    document.addEventListener('keydown', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n    document.addEventListener('keyup', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n  }\n  if (typeof window !== 'undefined') {\n    window.addEventListener('blur', function () {\n      currentlyPressedKeys.clear();\n    });\n  }\n})();\nvar currentlyPressedKeys = /*#__PURE__*/new Set();\n// https://github.com/microsoft/TypeScript/issues/17002\nfunction isReadonlyArray(value) {\n  return Array.isArray(value);\n}\nfunction isHotkeyPressed(key, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  var hotkeyArray = isReadonlyArray(key) ? key : key.split(splitKey);\n  return hotkeyArray.every(function (hotkey) {\n    return currentlyPressedKeys.has(hotkey.trim().toLowerCase());\n  });\n}\nfunction pushToCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (currentlyPressedKeys.has('meta')) {\n    currentlyPressedKeys.forEach(function (key) {\n      return !isHotkeyModifier(key) && currentlyPressedKeys[\"delete\"](key.toLowerCase());\n    });\n  }\n  hotkeyArray.forEach(function (hotkey) {\n    return currentlyPressedKeys.add(hotkey.toLowerCase());\n  });\n}\nfunction removeFromCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (key === 'meta') {\n    currentlyPressedKeys.clear();\n  } else {\n    hotkeyArray.forEach(function (hotkey) {\n      return currentlyPressedKeys[\"delete\"](hotkey.toLowerCase());\n    });\n  }\n}\n\nfunction maybePreventDefault(e, hotkey, preventDefault) {\n  if (typeof preventDefault === 'function' && preventDefault(e, hotkey) || preventDefault === true) {\n    e.preventDefault();\n  }\n}\nfunction isHotkeyEnabled(e, hotkey, enabled) {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey);\n  }\n  return enabled === true || enabled === undefined;\n}\nfunction isKeyboardEventTriggeredByInput(ev) {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select']);\n}\nfunction isHotkeyEnabledOnTag(_ref, enabledOnTags) {\n  var target = _ref.target;\n  if (enabledOnTags === void 0) {\n    enabledOnTags = false;\n  }\n  var targetTagName = target && target.tagName;\n  if (isReadonlyArray(enabledOnTags)) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(function (tag) {\n      return tag.toLowerCase() === targetTagName.toLowerCase();\n    }));\n  }\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true);\n}\nfunction isScopeActive(activeScopes, scopes) {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn('A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>');\n    return true;\n  }\n  if (!scopes) {\n    return true;\n  }\n  return activeScopes.some(function (scope) {\n    return scopes.includes(scope);\n  }) || activeScopes.includes('*');\n}\nvar isHotkeyMatchingKeyboardEvent = function isHotkeyMatchingKeyboardEvent(e, hotkey, ignoreModifiers) {\n  if (ignoreModifiers === void 0) {\n    ignoreModifiers = false;\n  }\n  var alt = hotkey.alt,\n    meta = hotkey.meta,\n    mod = hotkey.mod,\n    shift = hotkey.shift,\n    ctrl = hotkey.ctrl,\n    keys = hotkey.keys;\n  var pressedKeyUppercase = e.key,\n    code = e.code,\n    ctrlKey = e.ctrlKey,\n    metaKey = e.metaKey,\n    shiftKey = e.shiftKey,\n    altKey = e.altKey;\n  var keyCode = mapKey(code);\n  var pressedKey = pressedKeyUppercase.toLowerCase();\n  if (!(keys != null && keys.includes(keyCode)) && !(keys != null && keys.includes(pressedKey)) && !['ctrl', 'control', 'unknown', 'meta', 'alt', 'shift', 'os'].includes(keyCode)) {\n    return false;\n  }\n  if (!ignoreModifiers) {\n    // We check the pressed keys for compatibility with the keyup event. In keyup events the modifier flags are not set.\n    if (alt === !altKey && pressedKey !== 'alt') {\n      return false;\n    }\n    if (shift === !shiftKey && pressedKey !== 'shift') {\n      return false;\n    }\n    // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n    if (mod) {\n      if (!metaKey && !ctrlKey) {\n        return false;\n      }\n    } else {\n      if (meta === !metaKey && pressedKey !== 'meta' && pressedKey !== 'os') {\n        return false;\n      }\n      if (ctrl === !ctrlKey && pressedKey !== 'ctrl' && pressedKey !== 'control') {\n        return false;\n      }\n    }\n  }\n  // All modifiers are correct, now check the key\n  // If the key is set, we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true;\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return isHotkeyPressed(keys);\n  } else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true;\n  }\n  // There is nothing that matches.\n  return false;\n};\n\nvar BoundHotkeysProxyProvider = /*#__PURE__*/createContext(undefined);\nvar useBoundHotkeysProxy = function useBoundHotkeysProxy() {\n  return useContext(BoundHotkeysProxyProvider);\n};\nfunction BoundHotkeysProxyProviderProvider(_ref) {\n  var addHotkey = _ref.addHotkey,\n    removeHotkey = _ref.removeHotkey,\n    children = _ref.children;\n  return /*#__PURE__*/jsx(BoundHotkeysProxyProvider.Provider, {\n    value: {\n      addHotkey: addHotkey,\n      removeHotkey: removeHotkey\n    },\n    children: children\n  });\n}\n\nfunction deepEqual(x, y) {\n  //@ts-ignore\n  return x && y && typeof x === 'object' && typeof y === 'object' ? Object.keys(x).length === Object.keys(y).length &&\n  //@ts-ignore\n  Object.keys(x).reduce(function (isEqual, key) {\n    return isEqual && deepEqual(x[key], y[key]);\n  }, true) : x === y;\n}\n\nvar HotkeysContext = /*#__PURE__*/createContext({\n  hotkeys: [],\n  enabledScopes: [],\n  toggleScope: function toggleScope() {},\n  enableScope: function enableScope() {},\n  disableScope: function disableScope() {}\n});\nvar useHotkeysContext = function useHotkeysContext() {\n  return useContext(HotkeysContext);\n};\nvar HotkeysProvider = function HotkeysProvider(_ref) {\n  var _ref$initiallyActiveS = _ref.initiallyActiveScopes,\n    initiallyActiveScopes = _ref$initiallyActiveS === void 0 ? ['*'] : _ref$initiallyActiveS,\n    children = _ref.children;\n  var _useState = useState((initiallyActiveScopes == null ? void 0 : initiallyActiveScopes.length) > 0 ? initiallyActiveScopes : ['*']),\n    internalActiveScopes = _useState[0],\n    setInternalActiveScopes = _useState[1];\n  var _useState2 = useState([]),\n    boundHotkeys = _useState2[0],\n    setBoundHotkeys = _useState2[1];\n  var enableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes('*')) {\n        return [scope];\n      }\n      return Array.from(new Set([].concat(prev, [scope])));\n    });\n  }, []);\n  var disableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.filter(function (s) {\n        return s !== scope;\n      }).length === 0) {\n        return ['*'];\n      } else {\n        return prev.filter(function (s) {\n          return s !== scope;\n        });\n      }\n    });\n  }, []);\n  var toggleScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes(scope)) {\n        if (prev.filter(function (s) {\n          return s !== scope;\n        }).length === 0) {\n          return ['*'];\n        } else {\n          return prev.filter(function (s) {\n            return s !== scope;\n          });\n        }\n      } else {\n        if (prev.includes('*')) {\n          return [scope];\n        }\n        return Array.from(new Set([].concat(prev, [scope])));\n      }\n    });\n  }, []);\n  var addBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return [].concat(prev, [hotkey]);\n    });\n  }, []);\n  var removeBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return prev.filter(function (h) {\n        return !deepEqual(h, hotkey);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/jsx(HotkeysContext.Provider, {\n    value: {\n      enabledScopes: internalActiveScopes,\n      hotkeys: boundHotkeys,\n      enableScope: enableScope,\n      disableScope: disableScope,\n      toggleScope: toggleScope\n    },\n    children: /*#__PURE__*/jsx(BoundHotkeysProxyProviderProvider, {\n      addHotkey: addBoundHotkey,\n      removeHotkey: removeBoundHotkey,\n      children: children\n    })\n  });\n};\n\nfunction useDeepEqualMemo(value) {\n  var ref = useRef(undefined);\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value;\n  }\n  return ref.current;\n}\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.stopImmediatePropagation();\n};\nvar useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nfunction useHotkeys(keys, callback, options, dependencies) {\n  var ref = useRef(null);\n  var hasTriggeredRef = useRef(false);\n  var _options = !(options instanceof Array) ? options : !(dependencies instanceof Array) ? dependencies : undefined;\n  var _keys = isReadonlyArray(keys) ? keys.join(_options == null ? void 0 : _options.splitKey) : keys;\n  var _deps = options instanceof Array ? options : dependencies instanceof Array ? dependencies : undefined;\n  var memoisedCB = useCallback(callback, _deps != null ? _deps : []);\n  var cbRef = useRef(memoisedCB);\n  if (_deps) {\n    cbRef.current = memoisedCB;\n  } else {\n    cbRef.current = callback;\n  }\n  var memoisedOptions = useDeepEqualMemo(_options);\n  var _useHotkeysContext = useHotkeysContext(),\n    enabledScopes = _useHotkeysContext.enabledScopes;\n  var proxy = useBoundHotkeysProxy();\n  useSafeLayoutEffect(function () {\n    if ((memoisedOptions == null ? void 0 : memoisedOptions.enabled) === false || !isScopeActive(enabledScopes, memoisedOptions == null ? void 0 : memoisedOptions.scopes)) {\n      return;\n    }\n    var listener = function listener(e, isKeyUp) {\n      var _e$target;\n      if (isKeyUp === void 0) {\n        isKeyUp = false;\n      }\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions == null ? void 0 : memoisedOptions.enableOnFormTags)) {\n        return;\n      }\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WON'T TRIGGER THE HOTKEY.\n      if (ref.current !== null) {\n        var rootNode = ref.current.getRootNode();\n        if ((rootNode instanceof Document || rootNode instanceof ShadowRoot) && rootNode.activeElement !== ref.current && !ref.current.contains(rootNode.activeElement)) {\n          stopPropagation(e);\n          return;\n        }\n      }\n      if ((_e$target = e.target) != null && _e$target.isContentEditable && !(memoisedOptions != null && memoisedOptions.enableOnContentEditable)) {\n        return;\n      }\n      parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        var _hotkey$keys;\n        var hotkey = parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey);\n        if (isHotkeyMatchingKeyboardEvent(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.ignoreModifiers) || (_hotkey$keys = hotkey.keys) != null && _hotkey$keys.includes('*')) {\n          if (memoisedOptions != null && memoisedOptions.ignoreEventWhen != null && memoisedOptions.ignoreEventWhen(e)) {\n            return;\n          }\n          if (isKeyUp && hasTriggeredRef.current) {\n            return;\n          }\n          maybePreventDefault(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.preventDefault);\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.enabled)) {\n            stopPropagation(e);\n            return;\n          }\n          // Execute the user callback for that hotkey\n          cbRef.current(e, hotkey);\n          if (!isKeyUp) {\n            hasTriggeredRef.current = true;\n          }\n        }\n      });\n    };\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys(mapKey(event.code));\n      if ((memoisedOptions == null ? void 0 : memoisedOptions.keydown) === undefined && (memoisedOptions == null ? void 0 : memoisedOptions.keyup) !== true || memoisedOptions != null && memoisedOptions.keydown) {\n        listener(event);\n      }\n    };\n    var handleKeyUp = function handleKeyUp(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys(mapKey(event.code));\n      hasTriggeredRef.current = false;\n      if (memoisedOptions != null && memoisedOptions.keyup) {\n        listener(event, true);\n      }\n    };\n    var domNode = ref.current || (_options == null ? void 0 : _options.document) || document;\n    // @ts-ignore\n    domNode.addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    domNode.addEventListener('keydown', handleKeyDown);\n    if (proxy) {\n      parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        return proxy.addHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey, memoisedOptions == null ? void 0 : memoisedOptions.description));\n      });\n    }\n    return function () {\n      // @ts-ignore\n      domNode.removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      domNode.removeEventListener('keydown', handleKeyDown);\n      if (proxy) {\n        parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n          return proxy.removeHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey, memoisedOptions == null ? void 0 : memoisedOptions.description));\n        });\n      }\n    };\n  }, [_keys, memoisedOptions, enabledScopes]);\n  return ref;\n}\n\nfunction useRecordHotkeys() {\n  var _useState = useState(new Set()),\n    keys = _useState[0],\n    setKeys = _useState[1];\n  var _useState2 = useState(false),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var handler = useCallback(function (event) {\n    if (event.key === undefined) {\n      // Synthetic event (e.g., Chrome autofill).  Ignore.\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    setKeys(function (prev) {\n      var newKeys = new Set(prev);\n      newKeys.add(mapKey(event.code));\n      return newKeys;\n    });\n  }, []);\n  var stop = useCallback(function () {\n    if (typeof document !== 'undefined') {\n      document.removeEventListener('keydown', handler);\n      setIsRecording(false);\n    }\n  }, [handler]);\n  var start = useCallback(function () {\n    setKeys(new Set());\n    if (typeof document !== 'undefined') {\n      stop();\n      document.addEventListener('keydown', handler);\n      setIsRecording(true);\n    }\n  }, [handler, stop]);\n  var resetKeys = useCallback(function () {\n    setKeys(new Set());\n  }, []);\n  return [keys, {\n    start: start,\n    stop: stop,\n    resetKeys: resetKeys,\n    isRecording: isRecording\n  }];\n}\n\nexport { HotkeysProvider, isHotkeyPressed, useHotkeys, useHotkeysContext, useRecordHotkeys };\n//# sourceMappingURL=react-hotkeys-hook.esm.js.map\n"],"names":["_extends","target","i","source","key","reservedModifierKeywords","mappedKeys","mapKey","isHotkeyModifier","parseKeysHookInput","keys","splitKey","parseHotkey","hotkey","combinationKey","description","k","modifiers","singleCharKeys","pushToCurrentlyPressedKeys","removeFromCurrentlyPressedKeys","currentlyPressedKeys","isReadonlyArray","value","isHotkeyPressed","hotkeyArray","maybePreventDefault","preventDefault","isHotkeyEnabled","enabled","isKeyboardEventTriggeredByInput","ev","isHotkeyEnabledOnTag","_ref","enabledOnTags","targetTagName","tag","isScopeActive","activeScopes","scopes","scope","isHotkeyMatchingKeyboardEvent","e","ignoreModifiers","alt","meta","mod","shift","ctrl","pressedKeyUppercase","code","ctrlKey","metaKey","shiftKey","altKey","keyCode","pressedKey","BoundHotkeysProxyProvider","createContext","useBoundHotkeysProxy","useContext","deepEqual","x","y","isEqual","HotkeysContext","useHotkeysContext","useDeepEqualMemo","ref","useRef","stopPropagation","useSafeLayoutEffect","useLayoutEffect","useEffect","useHotkeys","callback","options","dependencies","hasTriggeredRef","_options","_keys","_deps","memoisedCB","useCallback","cbRef","memoisedOptions","_useHotkeysContext","enabledScopes","proxy","listener","isKeyUp","_e$target","rootNode","_hotkey$keys","handleKeyDown","event","handleKeyUp","domNode"],"mappings":"wCAGA,SAASA,GAAW,CAClB,OAAAA,EAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIC,EAAS,UAAUD,CAAC,EACxB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAClDH,EAAOG,CAAG,EAAID,EAAOC,CAAG,EAG7B,CACD,OAAOH,CACX,EACSD,EAAS,MAAM,KAAM,SAAS,CACvC,CAEA,IAAIK,EAA2B,CAAC,QAAS,MAAO,OAAQ,MAAO,MAAM,EACjEC,EAAa,CACf,IAAK,SACL,OAAU,QACV,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,YACL,IAAK,YACL,IAAK,eACL,UAAW,QACX,WAAY,QACZ,QAAS,MACT,SAAU,MACV,SAAU,OACV,UAAW,OACX,OAAQ,OACR,QAAS,OACT,YAAa,OACb,aAAc,MAChB,EACA,SAASC,EAAOH,EAAK,CACnB,OAAQE,EAAWF,CAAG,GAAKA,GAAK,OAAO,cAAc,QAAQ,yBAA0B,EAAE,CAC3F,CACA,SAASI,EAAiBJ,EAAK,CAC7B,OAAOC,EAAyB,SAASD,CAAG,CAC9C,CACA,SAASK,EAAmBC,EAAMC,EAAU,CAC1C,OAAIA,IAAa,SACfA,EAAW,KAEND,EAAK,MAAMC,CAAQ,CAC5B,CACA,SAASC,EAAYC,EAAQC,EAAgBC,EAAa,CACpDD,IAAmB,SACrBA,EAAiB,KAEnB,IAAIJ,EAAOG,EAAO,kBAAmB,EAAC,MAAMC,CAAc,EAAE,IAAI,SAAUE,EAAG,CAC3E,OAAOT,EAAOS,CAAC,CACnB,CAAG,EACGC,EAAY,CACd,IAAKP,EAAK,SAAS,KAAK,EACxB,KAAMA,EAAK,SAAS,MAAM,GAAKA,EAAK,SAAS,SAAS,EACtD,MAAOA,EAAK,SAAS,OAAO,EAC5B,KAAMA,EAAK,SAAS,MAAM,EAC1B,IAAKA,EAAK,SAAS,KAAK,CAC5B,EACMQ,EAAiBR,EAAK,OAAO,SAAUM,EAAG,CAC5C,MAAO,CAACX,EAAyB,SAASW,CAAC,CAC/C,CAAG,EACD,OAAOhB,EAAS,CAAE,EAAEiB,EAAW,CAC7B,KAAMC,EACN,YAAaH,CACjB,CAAG,CACH,EAEC,UAAY,CACP,OAAO,SAAa,MACtB,SAAS,iBAAiB,UAAW,SAAU,EAAG,CAC5C,EAAE,MAAQ,QAIdI,EAA2B,CAACZ,EAAO,EAAE,GAAG,EAAGA,EAAO,EAAE,IAAI,CAAC,CAAC,CAChE,CAAK,EACD,SAAS,iBAAiB,QAAS,SAAU,EAAG,CAC1C,EAAE,MAAQ,QAIda,EAA+B,CAACb,EAAO,EAAE,GAAG,EAAGA,EAAO,EAAE,IAAI,CAAC,CAAC,CACpE,CAAK,GAEC,OAAO,OAAW,KACpB,OAAO,iBAAiB,OAAQ,UAAY,CAC1Cc,EAAqB,MAAK,CAChC,CAAK,CAEL,KACA,IAAIA,EAAoC,IAAI,IAE5C,SAASC,EAAgBC,EAAO,CAC9B,OAAO,MAAM,QAAQA,CAAK,CAC5B,CACA,SAASC,EAAgBpB,EAAKO,EAAU,CAClCA,IAAa,SACfA,EAAW,KAEb,IAAIc,EAAcH,EAAgBlB,CAAG,EAAIA,EAAMA,EAAI,MAAMO,CAAQ,EACjE,OAAOc,EAAY,MAAM,SAAUZ,EAAQ,CACzC,OAAOQ,EAAqB,IAAIR,EAAO,KAAM,EAAC,YAAW,CAAE,CAC/D,CAAG,CACH,CACA,SAASM,EAA2Bf,EAAK,CACvC,IAAIqB,EAAc,MAAM,QAAQrB,CAAG,EAAIA,EAAM,CAACA,CAAG,EAM7CiB,EAAqB,IAAI,MAAM,GACjCA,EAAqB,QAAQ,SAAUjB,EAAK,CAC1C,MAAO,CAACI,EAAiBJ,CAAG,GAAKiB,EAAqB,OAAUjB,EAAI,YAAW,CAAE,CACvF,CAAK,EAEHqB,EAAY,QAAQ,SAAUZ,EAAQ,CACpC,OAAOQ,EAAqB,IAAIR,EAAO,YAAa,CAAA,CACxD,CAAG,CACH,CACA,SAASO,EAA+BhB,EAAK,CAC3C,IAAIqB,EAAc,MAAM,QAAQrB,CAAG,EAAIA,EAAM,CAACA,CAAG,EAM7CA,IAAQ,OACViB,EAAqB,MAAK,EAE1BI,EAAY,QAAQ,SAAUZ,EAAQ,CACpC,OAAOQ,EAAqB,OAAUR,EAAO,YAAa,CAAA,CAChE,CAAK,CAEL,CAEA,SAASa,EAAoB,EAAGb,EAAQc,EAAgB,EAClD,OAAOA,GAAmB,YAAcA,EAAe,EAAGd,CAAM,GAAKc,IAAmB,KAC1F,EAAE,eAAc,CAEpB,CACA,SAASC,EAAgB,EAAGf,EAAQgB,EAAS,CAC3C,OAAI,OAAOA,GAAY,WACdA,EAAQ,EAAGhB,CAAM,EAEnBgB,IAAY,IAAQA,IAAY,MACzC,CACA,SAASC,EAAgCC,EAAI,CAC3C,OAAOC,EAAqBD,EAAI,CAAC,QAAS,WAAY,QAAQ,CAAC,CACjE,CACA,SAASC,EAAqBC,EAAMC,EAAe,CACjD,IAAIjC,EAASgC,EAAK,OACdC,IAAkB,SACpBA,EAAgB,IAElB,IAAIC,EAAgBlC,GAAUA,EAAO,QACrC,OAAIqB,EAAgBY,CAAa,EACxB,GAAQC,GAAiBD,GAAiBA,EAAc,KAAK,SAAUE,EAAK,CACjF,OAAOA,EAAI,YAAW,IAAOD,EAAc,YAAW,CACvD,CAAA,GAEI,GAAQA,GAAiBD,GAAiBA,IAAkB,GACrE,CACA,SAASG,EAAcC,EAAcC,EAAQ,CAC3C,OAAID,EAAa,SAAW,GAAKC,GAC/B,QAAQ,KAAK,2KAA2K,EACjL,IAEJA,EAGED,EAAa,KAAK,SAAUE,EAAO,CACxC,OAAOD,EAAO,SAASC,CAAK,CAC7B,CAAA,GAAKF,EAAa,SAAS,GAAG,EAJtB,EAKX,CACA,IAAIG,EAAgC,SAAuCC,EAAG7B,EAAQ8B,EAAiB,CACjGA,IAAoB,SACtBA,EAAkB,IAEpB,IAAIC,EAAM/B,EAAO,IACfgC,EAAOhC,EAAO,KACdiC,EAAMjC,EAAO,IACbkC,EAAQlC,EAAO,MACfmC,EAAOnC,EAAO,KACdH,EAAOG,EAAO,KACZoC,EAAsBP,EAAE,IAC1BQ,EAAOR,EAAE,KACTS,EAAUT,EAAE,QACZU,EAAUV,EAAE,QACZW,EAAWX,EAAE,SACbY,EAASZ,EAAE,OACTa,EAAUhD,EAAO2C,CAAI,EACrBM,EAAaP,EAAoB,cACrC,GAAI,EAAEvC,GAAQ,MAAQA,EAAK,SAAS6C,CAAO,IAAM,EAAE7C,GAAQ,MAAQA,EAAK,SAAS8C,CAAU,IAAM,CAAC,CAAC,OAAQ,UAAW,UAAW,OAAQ,MAAO,QAAS,IAAI,EAAE,SAASD,CAAO,EAC7K,MAAO,GAET,GAAI,CAACZ,EAAiB,CAKpB,GAHIC,IAAQ,CAACU,GAAUE,IAAe,OAGlCT,IAAU,CAACM,GAAYG,IAAe,QACxC,MAAO,GAGT,GAAIV,GACF,GAAI,CAACM,GAAW,CAACD,EACf,MAAO,WAGLN,IAAS,CAACO,GAAWI,IAAe,QAAUA,IAAe,MAG7DR,IAAS,CAACG,GAAWK,IAAe,QAAUA,IAAe,UAC/D,MAAO,EAGZ,CAGD,OAAI9C,GAAQA,EAAK,SAAW,IAAMA,EAAK,SAAS8C,CAAU,GAAK9C,EAAK,SAAS6C,CAAO,GAC3E,GACE7C,EAEFc,EAAgBd,CAAI,EACjB,CAAAA,CAMd,EAEI+C,EAAyCC,EAAAA,cAAc,MAAS,EAChEC,EAAuB,UAAgC,CACzD,OAAOC,EAAAA,WAAWH,CAAyB,CAC7C,EAcA,SAASI,EAAUC,EAAGC,EAAG,CAEvB,OAAOD,GAAKC,GAAK,OAAOD,GAAM,UAAY,OAAOC,GAAM,SAAW,OAAO,KAAKD,CAAC,EAAE,SAAW,OAAO,KAAKC,CAAC,EAAE,QAE3G,OAAO,KAAKD,CAAC,EAAE,OAAO,SAAUE,EAAS5D,EAAK,CAC5C,OAAO4D,GAAWH,EAAUC,EAAE1D,CAAG,EAAG2D,EAAE3D,CAAG,CAAC,CAC9C,EAAK,EAAI,EAAI0D,IAAMC,CACnB,CAEA,IAAIE,EAA8BP,EAAAA,cAAc,CAC9C,QAAS,CAAE,EACX,cAAe,CAAE,EACjB,YAAa,UAAuB,CAAE,EACtC,YAAa,UAAuB,CAAE,EACtC,aAAc,UAAwB,CAAE,CAC1C,CAAC,EACGQ,EAAoB,UAA6B,CACnD,OAAON,EAAAA,WAAWK,CAAc,CAClC,EAgFA,SAASE,EAAiB5C,EAAO,CAC/B,IAAI6C,EAAMC,SAAO,MAAS,EAC1B,OAAKR,EAAUO,EAAI,QAAS7C,CAAK,IAC/B6C,EAAI,QAAU7C,GAET6C,EAAI,OACb,CAEA,IAAIE,EAAkB,SAAyB5B,EAAG,CAChDA,EAAE,gBAAe,EACjBA,EAAE,eAAc,EAChBA,EAAE,yBAAwB,CAC5B,EACI6B,EAAsB,OAAO,OAAW,IAAcC,EAAAA,gBAAkBC,EAAAA,UAC5E,SAASC,GAAWhE,EAAMiE,EAAUC,EAASC,EAAc,CACzD,IAAIT,EAAMC,SAAO,IAAI,EACjBS,EAAkBT,SAAO,EAAK,EAC9BU,EAAaH,aAAmB,MAAqBC,aAAwB,MAAwB,OAAfA,EAA7CD,EACzCI,EAAQ1D,EAAgBZ,CAAI,EAAIA,EAAK,KAAiCqE,GAAS,QAAQ,EAAIrE,EAC3FuE,EAAQL,aAAmB,MAAQA,EAAUC,aAAwB,MAAQA,EAAe,OAC5FK,EAAaC,EAAAA,YAAYR,EAAUM,GAAwB,CAAA,CAAE,EAC7DG,EAAQf,SAAOa,CAAU,EACzBD,EACFG,EAAM,QAAUF,EAEhBE,EAAM,QAAUT,EAElB,IAAIU,EAAkBlB,EAAiBY,CAAQ,EAC3CO,EAAqBpB,EAAmB,EAC1CqB,EAAgBD,EAAmB,cACjCE,EAAQ7B,IACZ,OAAAY,EAAoB,UAAY,CAC9B,GAAK,EAAmCc,GAAgB,UAAa,IAAS,CAAChD,EAAckD,EAAkDF,GAAgB,MAAM,GAGrK,KAAII,EAAW,SAAkB/C,EAAGgD,EAAS,CAC3C,IAAIC,EAIJ,GAHID,IAAY,SACdA,EAAU,IAER,EAAA5D,EAAgCY,CAAC,GAAK,CAACV,EAAqBU,EAAsC2C,GAAgB,gBAAgB,GAKtI,IAAIjB,EAAI,UAAY,KAAM,CACxB,IAAIwB,EAAWxB,EAAI,QAAQ,YAAW,EACtC,IAAKwB,aAAoB,UAAYA,aAAoB,aAAeA,EAAS,gBAAkBxB,EAAI,SAAW,CAACA,EAAI,QAAQ,SAASwB,EAAS,aAAa,EAAG,CAC/JtB,EAAgB5B,CAAC,EACjB,MACD,CACF,EACIiD,EAAYjD,EAAE,SAAW,MAAQiD,EAAU,mBAAqB,EAAEN,GAAmB,MAAQA,EAAgB,0BAGlH5E,EAAmBuE,EAA0CK,GAAgB,QAAQ,EAAE,QAAQ,SAAUjF,EAAK,CAC5G,IAAIyF,EACAhF,EAASD,EAAYR,EAAwCiF,GAAgB,cAAc,EAC/F,GAAI5C,EAA8BC,EAAG7B,EAA2CwE,GAAgB,eAAe,IAAMQ,EAAehF,EAAO,OAAS,MAAQgF,EAAa,SAAS,GAAG,EAAG,CAItL,GAHIR,GAAmB,MAAQA,EAAgB,iBAAmB,MAAQA,EAAgB,gBAAgB3C,CAAC,GAGvGgD,GAAWZ,EAAgB,QAC7B,OAGF,GADApD,EAAoBgB,EAAG7B,EAA2CwE,GAAgB,cAAc,EAC5F,CAACzD,EAAgBc,EAAG7B,EAA2CwE,GAAgB,OAAO,EAAG,CAC3Ff,EAAgB5B,CAAC,EACjB,MACD,CAED0C,EAAM,QAAQ1C,EAAG7B,CAAM,EAClB6E,IACHZ,EAAgB,QAAU,GAE7B,CACT,CAAO,EACP,EACQgB,EAAgB,SAAuBC,EAAO,CAC5CA,EAAM,MAAQ,SAIlB5E,EAA2BZ,EAAOwF,EAAM,IAAI,CAAC,GACLV,GAAgB,UAAa,QAAiDA,GAAgB,QAAW,IAAQA,GAAmB,MAAQA,EAAgB,UAClMI,EAASM,CAAK,EAEtB,EACQC,EAAc,SAAqBD,EAAO,CACxCA,EAAM,MAAQ,SAIlB3E,EAA+Bb,EAAOwF,EAAM,IAAI,CAAC,EACjDjB,EAAgB,QAAU,GACtBO,GAAmB,MAAQA,EAAgB,OAC7CI,EAASM,EAAO,EAAI,EAE5B,EACQE,EAAU7B,EAAI,SAAwCW,GAAS,UAAa,SAEhF,OAAAkB,EAAQ,iBAAiB,QAASD,CAAW,EAE7CC,EAAQ,iBAAiB,UAAWH,CAAa,EAC7CN,GACF/E,EAAmBuE,EAA0CK,GAAgB,QAAQ,EAAE,QAAQ,SAAUjF,EAAK,CAC5G,OAAOoF,EAAM,UAAU5E,EAAYR,EAAwCiF,GAAgB,eAAmDA,GAAgB,WAAW,CAAC,CAClL,CAAO,EAEI,UAAY,CAEjBY,EAAQ,oBAAoB,QAASD,CAAW,EAEhDC,EAAQ,oBAAoB,UAAWH,CAAa,EAChDN,GACF/E,EAAmBuE,EAA0CK,GAAgB,QAAQ,EAAE,QAAQ,SAAUjF,EAAK,CAC5G,OAAOoF,EAAM,aAAa5E,EAAYR,EAAwCiF,GAAgB,eAAmDA,GAAgB,WAAW,CAAC,CACvL,CAAS,CAET,EACG,EAAE,CAACL,EAAOK,EAAiBE,CAAa,CAAC,EACnCnB,CACT","x_google_ignoreList":[0]}