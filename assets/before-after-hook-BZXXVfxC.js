var a={exports:{}},H=g;function g(e,r,n,o){if(typeof n!="function")throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(r)?r.reverse().reduce(function(i,u){return g.bind(null,e,u,i,o)},n)():Promise.resolve().then(function(){return e.registry[r]?e.registry[r].reduce(function(i,u){return u.hook.bind(null,i,o)},n)():n(o)})}var h=k;function k(e,r,n,o){var i=o;e.registry[n]||(e.registry[n]=[]),r==="before"&&(o=function(u,t){return Promise.resolve().then(i.bind(null,t)).then(u.bind(null,t))}),r==="after"&&(o=function(u,t){var f;return Promise.resolve().then(u.bind(null,t)).then(function(y){return f=y,i(f,t)}).then(function(){return f})}),r==="error"&&(o=function(u,t){return Promise.resolve().then(u.bind(null,t)).catch(function(f){return i(f,t)})}),e.registry[n].push({hook:o,orig:i})}var x=C;function C(e,r,n){if(e.registry[r]){var o=e.registry[r].map(function(i){return i.orig}).indexOf(n);o!==-1&&e.registry[r].splice(o,1)}}var b=H,w=h,S=x,c=Function.bind,v=c.bind(c);function d(e,r,n){var o=v(S,null).apply(null,n?[r,n]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(function(i){var u=n?[r,i,n]:[r,i];e[i]=e.api[i]=v(w,null).apply(null,u)})}function A(){var e="h",r={registry:{}},n=b.bind(null,r,e);return d(n,r,e),n}function p(){var e={registry:{}},r=b.bind(null,e);return d(r,e),r}var s=!1;function l(){return s||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),s=!0),p()}l.Singular=A.bind();l.Collection=p.bind();a.exports=l;a.exports.Hook=l;a.exports.Singular=l.Singular;var P=a.exports.Collection=l.Collection;export{P as C};
