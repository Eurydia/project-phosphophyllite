var g={exports:{}},b,h;function q(){if(h)return b;h=1,b=a;function a(n,e,o,r){if(typeof o!="function")throw new Error("method for before hook must be a function");return r||(r={}),Array.isArray(e)?e.reverse().reduce(function(i,u){return a.bind(null,n,u,i,r)},o)():Promise.resolve().then(function(){return n.registry[e]?n.registry[e].reduce(function(i,u){return u.hook.bind(null,i,r)},o)():o(r)})}return b}var p,k;function w(){if(k)return p;k=1,p=a;function a(n,e,o,r){var i=r;n.registry[o]||(n.registry[o]=[]),e==="before"&&(r=function(u,t){return Promise.resolve().then(i.bind(null,t)).then(u.bind(null,t))}),e==="after"&&(r=function(u,t){var c;return Promise.resolve().then(u.bind(null,t)).then(function(s){return c=s,i(c,t)}).then(function(){return c})}),e==="error"&&(r=function(u,t){return Promise.resolve().then(u.bind(null,t)).catch(function(c){return i(c,t)})}),n.registry[o].push({hook:r,orig:i})}return p}var H,x;function C(){if(x)return H;x=1,H=a;function a(n,e,o){if(n.registry[e]){var r=n.registry[e].map(function(i){return i.orig}).indexOf(o);r!==-1&&n.registry[e].splice(r,1)}}return H}var R;function S(){if(R)return g.exports;R=1;var a=q(),n=w(),e=C(),o=Function.bind,r=o.bind(o);function i(f,l,v){var y=r(e,null).apply(null,v?[l,v]:[l]);f.api={remove:y},f.remove=y,["before","error","after","wrap"].forEach(function(d){var A=v?[l,d,v]:[l,d];f[d]=f.api[d]=r(n,null).apply(null,A)})}function u(){var f="h",l={registry:{}},v=a.bind(null,l,f);return i(v,l,f),v}function t(){var f={registry:{}},l=a.bind(null,f);return i(l,f),l}var c=!1;function s(){return c||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),c=!0),t()}return s.Singular=u.bind(),s.Collection=t.bind(),g.exports=s,g.exports.Hook=s,g.exports.Singular=s.Singular,g.exports.Collection=s.Collection,g.exports}var m=S();export{m as b};
//# sourceMappingURL=before-after-hook-D6paO4wq.js.map
