{"version":3,"file":"index-DeRnqzgi.js","sources":["../../src/views/WithAppBar.tsx","../../src/pages/ErrorBoundary.tsx","../../src/components/StyledBreadcrumbs.tsx","../../src/pages/HomePage/HomePage.tsx","../../src/database/api.ts","../../src/database/migration.ts","../../src/database/cached.ts","../../src/pages/HomePage/loader.ts","../../src/core/markdown.ts","../../src/components/Markdown.tsx","../../src/core/time.ts","../../src/pages/IssueDetailsPage/IssueDetailsPage.tsx","../../src/pages/IssueDetailsPage/loader.tsx","../../src/constants/ISSUE_FILTER_OPTIONS.ts","../../src/constants/REPO_FILTER_OPTIONS.ts","../../src/core/sorting.ts","../../src/database/preferences.ts","../../src/components/StyledDataTable.tsx","../../src/components/StyledSelect.tsx","../../src/components/StyledSelectMultiple.tsx","../../src/components/StyledTextField.tsx","../../src/components/IssueDataTable.tsx","../../src/pages/IssueListPage/IssueListPage.tsx","../../src/core/filtering.ts","../../src/pages/IssueListPage/loader.ts","../../src/core/query.ts","../../src/pages/RepoDetailsPage/RepoDetailsPage.tsx","../../src/pages/RepoDetailsPage/loader.tsx","../../src/components/RepoDataTable.tsx","../../src/pages/RepoListPage/RepoListPage.tsx","../../src/pages/RepoListPage/loader.ts","../../src/pages/SettingsPage/SettingRegions/WrappableListItem.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionAPI.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionIssueFilterPref.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionRepoFilterPref.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionSync.tsx","../../src/pages/SettingsPage/SettingsPage.tsx","../../src/theme.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import {\r\n\tCloseRounded,\r\n\tListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tAppBar,\r\n\tBox,\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemButton,\r\n\tListItemText,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport {\r\n\tFC,\r\n\tFragment,\r\n\tReactNode,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { useSubmit } from \"react-router-dom\";\r\n\r\nconst nav: { label: string; path: string }[] = [\r\n\t{ label: \"~\", path: \"/\" },\r\n\t{\r\n\t\tlabel: \"Repositories\",\r\n\t\tpath: \"/repositories\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Issues\",\r\n\t\tpath: \"/issues\",\r\n\t},\r\n\t{ label: \"Settings\", path: \"/settings\" },\r\n];\r\n\r\ntype WithAppBarProps = {\r\n\tlocation: ReactNode;\r\n\tchildren: ReactNode;\r\n\tseconadaryAction?: ReactNode;\r\n};\r\nexport const WithAppBar: FC<WithAppBarProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { location, children, seconadaryAction } =\r\n\t\tprops;\r\n\tconst submit = useSubmit();\r\n\tconst [drawerOpen, setDrawerOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleDrawer = () => {\r\n\t\tsetDrawerOpen(!drawerOpen);\r\n\t};\r\n\tconst appBarRef = useRef<HTMLElement | null>(\r\n\t\tnull,\r\n\t);\r\n\tconst [contentHeight, setContentHeight] =\r\n\t\tuseState(\"0vh\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tappBarRef === null ||\r\n\t\t\tappBarRef.current === null\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst appBarHeight =\r\n\t\t\tappBarRef.current.getBoundingClientRect()\r\n\t\t\t\t.height;\r\n\r\n\t\tsetContentHeight(\r\n\t\t\t`calc(100svh - ${appBarHeight}px)`,\r\n\t\t);\r\n\t}, [appBarRef]);\r\n\r\n\tconst redirectPath = (path: string) => {\r\n\t\tsubmit({}, { action: path, method: \"get\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Box maxWidth=\"100vw\">\r\n\t\t\t\t<AppBar\r\n\t\t\t\t\tref={appBarRef}\r\n\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\tvariant=\"elevation\"\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Toolbar\r\n\t\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\tflexWrap: \"nowrap\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\t\t\tsx={{ flexGrow: 0 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t{location}\r\n\t\t\t\t\t\t{seconadaryAction}\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t<Divider\r\n\t\t\t\t\t\tflexItem\r\n\t\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Box\r\n\t\t\t\t\theight={contentHeight}\r\n\t\t\t\t\toverflow=\"auto\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Drawer\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={toggleDrawer}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tsquare: true,\r\n\t\t\t\t\tvariant: \"outlined\",\r\n\t\t\t\t\televation: 0,\r\n\t\t\t\t\tsx: {\r\n\t\t\t\t\t\twidth: 240,\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\tborderTopWidth: 0,\r\n\t\t\t\t\t\tborderLeftWidth: 0,\r\n\t\t\t\t\t\tborderBottomWidth: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography fontWeight=\"bold\">\r\n\t\t\t\t\t\tNavigation\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List\r\n\t\t\t\t\tdisablePadding\r\n\t\t\t\t\tdense\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\t\t\twhiteSpace: \"wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{nav.map(({ label, path }) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\tkey={path}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemButton\r\n\t\t\t\t\t\t\t\tonClick={() => redirectPath(path)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import {\r\n\tBox,\r\n\tContainer,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useRouteError } from \"react-router\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\n\r\nexport const ErrorBoundry: FC = () => {\r\n\tconst { status, statusText } =\r\n\t\tuseRouteError() as {\r\n\t\t\tstatus: string;\r\n\t\t\tstatusText: string;\r\n\t\t};\r\n\treturn (\r\n\t\t<WithAppBar location={status}>\r\n\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t<Box padding={4}>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tcomponent=\"h1\"\r\n\t\t\t\t\t\tvariant=\"h1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tparagraph\r\n\t\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t\t\tvariant=\"body1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statusText}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import {\r\n\tBreadcrumbs,\r\n\tBreadcrumbsProps,\r\n\tTypography,\r\n\tTypographyProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\ntype StyledBreadcrumbs = {\r\n\tpaths: string;\r\n\tbreadcrumbsProps?: BreadcrumbsProps;\r\n\ttypographyProps?: Omit<TypographyProps, \"ref\">;\r\n};\r\nexport const StyledBreadcrumbs: FC<\r\n\tStyledBreadcrumbs\r\n> = (props) => {\r\n\tconst {\r\n\t\tpaths,\r\n\t\tbreadcrumbsProps,\r\n\t\ttypographyProps,\r\n\t} = props;\r\n\r\n\tconst paths_ = paths.split(\"/\");\r\n\r\n\treturn (\r\n\t\t<Breadcrumbs {...breadcrumbsProps}>\r\n\t\t\t{paths_.map((path, index) => (\r\n\t\t\t\t<Typography\r\n\t\t\t\t\t{...typographyProps}\r\n\t\t\t\t\tkey={`${index}-${path}`}\r\n\t\t\t\t\twhiteSpace=\"nowrap\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{path}\r\n\t\t\t\t</Typography>\r\n\t\t\t))}\r\n\t\t</Breadcrumbs>\r\n\t);\r\n};\r\n","import { Typography } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\n\r\nexport const HomePage: FC = () => {\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={<StyledBreadcrumbs paths=\"~\" />}\r\n\t\t>\r\n\t\t\t<Typography>\r\n\t\t\t\tNothing to see here.\r\n\t\t\t</Typography>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { Octokit } from \"octokit\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nconst getToken = () => {\r\n\tconst token = localStorage.getItem(\r\n\t\t\"personal-access-token\",\r\n\t);\r\n\tif (token === null) {\r\n\t\treturn \"-1\";\r\n\t}\r\n\treturn token;\r\n};\r\n\r\nconst getOctokit = () => {\r\n\tconst token = getToken();\r\n\treturn new Octokit({ auth: token });\r\n};\r\n\r\nexport const getRepo = async (\r\n\tfullName: string,\r\n) => {\r\n\tconst repos = await getRepos();\r\n\tfor (const repo of repos) {\r\n\t\tif (repo.full_name === fullName) {\r\n\t\t\treturn repo;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getRepos = async () => {\r\n\tconst octokit = getOctokit();\r\n\tconst pages = await octokit.paginate(\r\n\t\t\"GET /user/repos\",\r\n\t);\r\n\tconst repos: RepoSchema[] = await Promise.all(\r\n\t\tpages.map(\r\n\t\t\tasync ({\r\n\t\t\t\tname,\r\n\t\t\t\tfull_name,\r\n\t\t\t\ttopics,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tdescription,\r\n\t\t\t\tid,\r\n\t\t\t\thtml_url,\r\n\t\t\t\thomepage,\r\n\t\t\t\tpushed_at,\r\n\t\t\t\tarchived: is_archived,\r\n\t\t\t\tprivate: is_private,\r\n\t\t\t}) => ({\r\n\t\t\t\tid,\r\n\t\t\t\topened_at: null,\r\n\t\t\t\thtml_url,\r\n\t\t\t\thomepage,\r\n\t\t\t\tpushed_at,\r\n\t\t\t\tname,\r\n\t\t\t\tfull_name,\r\n\t\t\t\tdescription,\r\n\t\t\t\ttopics,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tis_archived,\r\n\t\t\t\tis_private,\r\n\t\t\t\treadme: await getRepoReadMe(\r\n\t\t\t\t\tfull_name,\r\n\t\t\t\t).catch((err) => {\r\n\t\t\t\t\tif (err.status === 404) {\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow err;\r\n\t\t\t\t}),\r\n\t\t\t}),\r\n\t\t),\r\n\t);\r\n\r\n\treturn repos;\r\n};\r\n\r\nconst getRepoReadMe = async (\r\n\tfullName: string,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst res = await ocktokit.request(\r\n\t\t\"GET /repos/{owner}/{repo}/readme\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t},\r\n\t);\r\n\treturn res.data.content;\r\n};\r\n\r\nexport const getRepoIssues = async (\r\n\tfullName: string,\r\n\trepoId: number,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst response = await ocktokit.paginate(\r\n\t\t\"GET /repos/{owner}/{repo}/issues\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t\tstate: \"all\",\r\n\t\t},\r\n\t);\r\n\tconst issues: RepoIssueSchema[] = response.map(\r\n\t\t({\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\tnumber: issue_number,\r\n\t\t\ttitle,\r\n\t\t\tstate,\r\n\t\t\tlocked,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tclosed_at,\r\n\t\t\tbody,\r\n\t\t\tuser,\r\n\t\t}) => ({\r\n\t\t\topened_at: \"\",\r\n\t\t\towner_type:\r\n\t\t\t\tuser === null ? null : user.type,\r\n\t\t\trepo_id: repoId,\r\n\t\t\trepo_full_name: fullName,\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\tissue_number,\r\n\t\t\ttitle,\r\n\t\t\tstate,\r\n\t\t\tlocked,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tclosed_at,\r\n\t\t\tbody,\r\n\t\t}),\r\n\t);\r\n\treturn issues;\r\n};\r\n\r\nexport const getRepoIssueComment = async (\r\n\tfullName: string,\r\n\tissueNumber: number,\r\n\tissueId: number,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst response = await ocktokit.paginate(\r\n\t\t\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t\tissue_number: issueNumber,\r\n\t\t},\r\n\t);\r\n\tconst comments: RepoIssueCommentSchema[] =\r\n\t\tresponse.map(\r\n\t\t\t({\r\n\t\t\t\tid,\r\n\t\t\t\thtml_url,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tbody,\r\n\t\t\t}) => ({\r\n\t\t\t\tissue_id: issueId,\r\n\t\t\t\thtml_url,\r\n\t\t\t\tid,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\treturn comments;\r\n};\r\n","import { DBSchema, openDB } from \"idb\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\ninterface Database extends DBSchema {\r\n\trepos: {\r\n\t\tkey: string;\r\n\t\tvalue: RepoSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-full_name\": string;\r\n\t\t\t\"by-id\": number;\r\n\t\t};\r\n\t};\r\n\tissues: {\r\n\t\tkey: number;\r\n\t\tvalue: RepoIssueSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-repo_id\": number;\r\n\t\t};\r\n\t};\r\n\tissueComments: {\r\n\t\tkey: number;\r\n\t\tvalue: RepoIssueCommentSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-issue_id\": number;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nexport const dbPromise = openDB<Database>(\r\n\t\"primary\",\r\n\t1,\r\n\t{\r\n\t\tupgrade(db, oldVersion) {\r\n\t\t\tif (oldVersion <= 0) {\r\n\t\t\t\tdb.deleteObjectStore(\"repos\");\r\n\t\t\t\tdb.deleteObjectStore(\"issues\");\r\n\t\t\t\tdb.deleteObjectStore(\"issueComments\");\r\n\t\t\t\tconst repoStore = db.createObjectStore(\r\n\t\t\t\t\t\"repos\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkeyPath: \"id\",\r\n\t\t\t\t\t\tautoIncrement: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\trepoStore.createIndex(\r\n\t\t\t\t\t\"by-full_name\",\r\n\t\t\t\t\t\"full_name\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tunique: true,\r\n\t\t\t\t\t\tmultiEntry: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\trepoStore.createIndex(\"by-id\", \"id\", {\r\n\t\t\t\t\tunique: true,\r\n\t\t\t\t\tmultiEntry: false,\r\n\t\t\t\t});\r\n\t\t\t\tconst issueStore = db.createObjectStore(\r\n\t\t\t\t\t\"issues\",\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkeyPath: \"id\",\r\n\t\t\t\t\t\tautoIncrement: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t\tissueStore.createIndex(\r\n\t\t\t\t\t\"by-repo_id\",\r\n\t\t\t\t\t\"repo_id\",\r\n\t\t\t\t\t{ multiEntry: true, unique: false },\r\n\t\t\t\t);\r\n\t\t\t\tconst issueCommentStore =\r\n\t\t\t\t\tdb.createObjectStore(\"issueComments\", {\r\n\t\t\t\t\t\tkeyPath: \"id\",\r\n\t\t\t\t\t\tautoIncrement: false,\r\n\t\t\t\t\t});\r\n\t\t\t\tissueCommentStore.createIndex(\r\n\t\t\t\t\t\"by-issue_id\",\r\n\t\t\t\t\t\"issue_id\",\r\n\t\t\t\t\t{ multiEntry: true, unique: false },\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n);\r\n","import { dbPromise } from \"~database/migration\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\nimport {\r\n\tgetRepoIssueComment,\r\n\tgetRepoIssues,\r\n\tgetRepos,\r\n} from \"./api\";\r\n\r\nexport const getCachedRepos = async () => {\r\n\treturn (await dbPromise).getAll(\"repos\");\r\n};\r\n\r\nexport const getCachedRepo = async (\r\n\tfullName: string,\r\n) => {\r\n\treturn (await dbPromise).getFromIndex(\r\n\t\t\"repos\",\r\n\t\t\"by-full_name\",\r\n\t\tfullName,\r\n\t);\r\n};\r\n\r\nexport const getCachedTopics = async () => {\r\n\tconst repos = await getCachedRepos();\r\n\tconst uniqueTopics = new Set<string>();\r\n\tfor (const repo of repos) {\r\n\t\tif (repo.topics === undefined) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (const topic of repo.topics) {\r\n\t\t\tuniqueTopics.add(topic);\r\n\t\t}\r\n\t}\r\n\tconst topics = [...uniqueTopics];\r\n\ttopics.sort();\r\n\treturn topics;\r\n};\r\n\r\nexport const getCachedIssues = async () => {\r\n\treturn dbPromise.then((db) =>\r\n\t\tdb.getAll(\"issues\"),\r\n\t);\r\n};\r\n\r\nexport const getCachedRepoIssues = async (\r\n\trepoFullName: string,\r\n) => {\r\n\tconst repo = await getCachedRepo(repoFullName);\r\n\tif (repo === undefined) {\r\n\t\treturn [];\r\n\t}\r\n\treturn (await dbPromise).getAllFromIndex(\r\n\t\t\"issues\",\r\n\t\t\"by-repo_id\",\r\n\t\trepo.id,\r\n\t);\r\n};\r\n\r\nexport const getCachedRepoIssue = async (\r\n\trepoFullName: string,\r\n\tissueNumber: number,\r\n) => {\r\n\tconst issues = await getCachedRepoIssues(\r\n\t\trepoFullName,\r\n\t);\r\n\tfor (const issue of issues) {\r\n\t\tif (issue.issue_number === issueNumber) {\r\n\t\t\treturn issue;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getCachedIssueComments = async (\r\n\tissueId: number,\r\n) => {\r\n\treturn (await dbPromise).getAllFromIndex(\r\n\t\t\"issueComments\",\r\n\t\t\"by-issue_id\",\r\n\t\tissueId,\r\n\t);\r\n};\r\n\r\nconst updateCachedRepos = async (\r\n\trepos: RepoSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\tconst req = repos.map(async (repo) => {\r\n\t\tconst cachedRepo = await db.get(\r\n\t\t\t\"repos\",\r\n\t\t\trepo.full_name,\r\n\t\t);\r\n\t\tlet opened_at: string | null = null;\r\n\t\tif (cachedRepo !== undefined) {\r\n\t\t\topened_at = cachedRepo.opened_at;\r\n\t\t}\r\n\t\tconst repo_ = { ...repo, opened_at };\r\n\t\treturn db.put(\"repos\", repo_);\r\n\t});\r\n\tconst res = await Promise.all(req);\r\n\treturn res;\r\n};\r\n\r\nconst updateCachedRepoIssues = async (\r\n\tissues: RepoIssueSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\tconst req = issues.map(async (issue) => {\r\n\t\tconst cachedIssue = await db.get(\r\n\t\t\t\"issues\",\r\n\t\t\tissue.id,\r\n\t\t);\r\n\t\tlet opened_at: string = \"\";\r\n\t\tif (cachedIssue !== undefined) {\r\n\t\t\topened_at = cachedIssue.opened_at;\r\n\t\t}\r\n\t\tconst issue_ = { ...issue, opened_at };\r\n\t\treturn db.put(\"issues\", issue_);\r\n\t});\r\n\tconst res = await Promise.all(req);\r\n\treturn res;\r\n};\r\n\r\nconst updateCachedRepoIssueComments = async (\r\n\tissueComments: RepoIssueCommentSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\treturn await Promise.all(\r\n\t\tissueComments.map((comment) =>\r\n\t\t\tdb.put(\"issueComments\", comment),\r\n\t\t),\r\n\t);\r\n};\r\n\r\nexport const syncCachedRepos = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\treturn await getRepos().then(\r\n\t\t(res) => {\r\n\t\t\tupdateCachedRepos(res);\r\n\t\t\treturn [true];\r\n\t\t},\r\n\t\t(err) => {\r\n\t\t\tonFailure(err);\r\n\t\t\treturn [false];\r\n\t\t},\r\n\t);\r\n};\r\nexport const syncCachedRepoIssues = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\tconst cachedRepos = await getCachedRepos();\r\n\treturn await Promise.all(\r\n\t\tcachedRepos.map(async (repo) => {\r\n\t\t\treturn await getRepoIssues(\r\n\t\t\t\trepo.full_name,\r\n\t\t\t\trepo.id,\r\n\t\t\t).then(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tupdateCachedRepoIssues(res);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tonFailure(err);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}),\r\n\t);\r\n};\r\nexport const syncCachedRepoIssueComments = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\tconst cachedIssues = await getCachedIssues();\r\n\treturn await Promise.all(\r\n\t\tcachedIssues.map(async (issue) => {\r\n\t\t\treturn await getRepoIssueComment(\r\n\t\t\t\tissue.repo_full_name,\r\n\t\t\t\tissue.issue_number,\r\n\t\t\t\tissue.id,\r\n\t\t\t).then(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tupdateCachedRepoIssueComments(res);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tonFailure(err);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}),\r\n\t);\r\n};\r\n","import { matchSorter } from \"match-sorter\";\r\nimport { LoaderFunction } from \"react-router-dom\";\r\nimport {\r\n\tgetCachedRepos,\r\n\tgetCachedTopics,\r\n\tgetRepos,\r\n} from \"~database/index\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tname: string;\r\n\trepos: RepoSchema[];\r\n\ttopics: string[];\r\n\ttopicOptions: string[];\r\n};\r\nexport const loaderHome: LoaderFunction = async ({\r\n\trequest,\r\n}): Promise<LoaderData> => {\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\r\n\tconst topicParam = searchParams.get(\"topics\");\r\n\tlet topics: string[] = [];\r\n\tif (topicParam !== null && topicParam !== \"\") {\r\n\t\ttopics = topicParam\r\n\t\t\t.split(\",\")\r\n\t\t\t.filter((topic) => topic.length > 0);\r\n\t}\r\n\r\n\tconst nameParam = searchParams.get(\"name\");\r\n\tlet name = \"\";\r\n\tif (nameParam !== null) {\r\n\t\tname = nameParam;\r\n\t}\r\n\r\n\tdocument.title = \"Repositories\";\r\n\tconst topicOptions = await getCachedTopics();\r\n\tlet repos =\r\n\t\t(await getCachedRepos()) ||\r\n\t\t(await getRepos());\r\n\trepos = matchSorter(repos, name, {\r\n\t\tkeys: [\"full_name\"],\r\n\t});\r\n\tif (topics.length > 0) {\r\n\t\trepos = repos.filter((repo) => {\r\n\t\t\tconst { topics: rTopics } = repo;\r\n\t\t\tif (rTopics === undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn topics.every((topic) =>\r\n\t\t\t\trTopics.includes(topic),\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\treturn {\r\n\t\tname,\r\n\t\ttopicOptions,\r\n\t\trepos,\r\n\t\ttopics,\r\n\t};\r\n};\r\n","import rehypeDocument from \"rehype-document\";\r\nimport rehypeKatex from \"rehype-katex\";\r\nimport rehypeSanitize from \"rehype-sanitize\";\r\nimport rehypeStringify from \"rehype-stringify\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport remarkMath from \"remark-math\";\r\nimport remarkParse from \"remark-parse\";\r\nimport remarkRehype from \"remark-rehype\";\r\nimport { unified } from \"unified\";\r\n\r\nexport const parseMarkdown = (\r\n\tcontent: string,\r\n) => {\r\n\treturn unified()\r\n\t\t.use(remarkParse, {\r\n\t\t\tfragment: true,\r\n\t\t})\r\n\t\t.use(remarkGfm)\r\n\t\t.use(remarkMath)\r\n\t\t.use(remarkRehype)\r\n\t\t.use(rehypeSanitize)\r\n\t\t.use(rehypeKatex)\r\n\t\t.use(rehypeDocument, {\r\n\t\t\tcss: \"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css\",\r\n\t\t})\r\n\t\t.use(rehypeStringify)\r\n\t\t.processSync(content.normalize())\r\n\t\t.toString()\r\n\t\t.replace(\r\n\t\t\t`<table`,\r\n\t\t\t`<div style='display: block; width: 100%; overflow-x: auto'><table`,\r\n\t\t)\r\n\t\t.replace(`</table>`, `</table></div>`);\r\n};\r\n","import {\r\n\tTypography,\r\n\tTypographyProps,\r\n} from \"@mui/material\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\nimport { parseMarkdown } from \"~core/markdown\";\r\n\r\ntype MarkdownProps = Omit<\r\n\tTypographyProps,\r\n\t\"ref\"\r\n> & {\r\n\tmarkdownContent: string | undefined | null;\r\n\temptyText: string | undefined;\r\n};\r\nexport const Markdown: FC<MarkdownProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\tmarkdownContent: content,\r\n\t\temptyText,\r\n\t\tsx,\r\n\t\t...rest\r\n\t} = props;\r\n\r\n\tconst contentRef =\r\n\t\tuseRef<HTMLDivElement | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tcontent === undefined ||\r\n\t\t\tcontent === null ||\r\n\t\t\tcontentRef === null ||\r\n\t\t\tcontentRef.current === null\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst innerHtml = parseMarkdown(content);\r\n\t\tcontentRef.current.innerHTML = innerHtml;\r\n\t}, [content]);\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\t{...rest}\r\n\t\t\tref={contentRef}\r\n\t\t\tcomponent=\"div\"\r\n\t\t\tdisplay=\"block\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\tsx={{\r\n\t\t\t\t...sx,\r\n\t\t\t\toverflowX: \"auto\",\r\n\t\t\t\tfontFamily: \"IBM Plex Serif\",\r\n\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\twordWrap: \"break-word\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{emptyText}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const timeSince = (\r\n\tdateString: string | undefined | null,\r\n\tfallback: string = \"-\",\r\n) => {\r\n\tif (\r\n\t\tdateString === undefined ||\r\n\t\tdateString === null ||\r\n\t\tdateString === \"\"\r\n\t) {\r\n\t\treturn fallback;\r\n\t}\r\n\r\n\treturn moment(dateString).fromNow();\r\n};\r\n\r\nexport const normalizeDateString = (\r\n\tdateString: string | undefined | null,\r\n\tfallback: string = \"-\",\r\n) => {\r\n\tif (\r\n\t\tdateString === undefined ||\r\n\t\tdateString === null ||\r\n\t\tdateString === \"\"\r\n\t) {\r\n\t\treturn fallback;\r\n\t}\r\n\r\n\treturn moment(dateString).format(\r\n\t\t\"MMMM Do YYYY\",\r\n\t);\r\n};\r\n\r\nexport const toTimeStamp = (\r\n\tdateString: string,\r\n) => {\r\n\tconst timeAt = normalizeDateString(dateString);\r\n\tconst delta = timeSince(dateString);\r\n\treturn `${timeAt} (${delta})`;\r\n};\r\n","import {\r\n\tChevronLeftRounded,\r\n\tClearRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tContainer,\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tPaper,\r\n\tStack,\r\n\tToolbar,\r\n\tTypography,\r\n\tcapitalize,\r\n} from \"@mui/material\";\r\nimport { FC, Fragment, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nimport { ReactNode } from \"react\";\r\nimport { Markdown } from \"~components/Markdown\";\r\nimport {\r\n\tnormalizeDateString,\r\n\ttoTimeStamp,\r\n} from \"~core/time\";\r\nimport { RepoIssueSchema } from \"~types/schemas\";\r\n\r\nconst METADATA_DEFINITIONS: {\r\n\tlabel: string;\r\n\trender: (repo: RepoIssueSchema) => ReactNode;\r\n}[] = [\r\n\t{\r\n\t\tlabel: \"Title\",\r\n\t\trender: (issue) => issue.title,\r\n\t},\r\n\t{\r\n\t\tlabel: \"State\",\r\n\t\trender: (issue) => capitalize(issue.state),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Owner type\",\r\n\t\trender: (issue) =>\r\n\t\t\tissue.owner_type ?? \"Unknown\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Last modified\",\r\n\t\trender: (issue) =>\r\n\t\t\tissue.updated_at\r\n\t\t\t\t? toTimeStamp(issue.updated_at)\r\n\t\t\t\t: \"Never\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Closed\",\r\n\t\trender: (issue) =>\r\n\t\t\tissue.closed_at\r\n\t\t\t\t? toTimeStamp(issue.closed_at)\r\n\t\t\t\t: \"Not closed\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Created\",\r\n\t\trender: (issue) =>\r\n\t\t\tissue.created_at\r\n\t\t\t\t? toTimeStamp(issue.created_at)\r\n\t\t\t\t: \"Unknown\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Links\",\r\n\t\trender: (issue) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\thref={issue.html_url}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t>\r\n\t\t\t\tGithub issue\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n];\r\n\r\nexport const IssueDetailsPage: FC = () => {\r\n\tconst { issue, comments } =\r\n\t\tuseLoaderData() as LoaderData;\r\n\r\n\tconst [drawerOpen, setDrawerOpen] =\r\n\t\tuseState(false);\r\n\r\n\tconst toggleDrawer = () => {\r\n\t\tsetDrawerOpen(!drawerOpen);\r\n\t};\r\n\tconst closeDrawer = () => {\r\n\t\tsetDrawerOpen(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<WithAppBar\r\n\t\t\t\tlocation={\r\n\t\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\t\tpaths={`~/repositories/${issue.repo_full_name}/issues/${issue.issue_number}`}\r\n\t\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\t\t\t\tflexGrow: { xs: 0, sm: 1 },\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tseconadaryAction={\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ChevronLeftRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tspacing={2}\r\n\t\t\t\t\t\tpadding={2}\r\n\t\t\t\t\t\tdivider={\r\n\t\t\t\t\t\t\t<Divider\r\n\t\t\t\t\t\t\t\tflexItem\r\n\t\t\t\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Paper\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsx={{ padding: 2 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Markdown\r\n\t\t\t\t\t\t\t\tmarkdownContent={\r\n\t\t\t\t\t\t\t\t\tissue.body ?? undefined\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\temptyText=\"This issue does not have a body or its body not cached.\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t{comments.map((comment) => (\r\n\t\t\t\t\t\t\t<Box key={`comment-${comment.id}`}>\r\n\t\t\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\t\t\tdense\r\n\t\t\t\t\t\t\t\t\tdisablePadding\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<ListItem disablePadding>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tprimary=\"Created\"\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t(normalizeDateString(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomment.created_at,\r\n\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"Unknown\")\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t<ListItem>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tprimary=\"Last updated\"\r\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\r\n\t\t\t\t\t\t\t\t\t\t\t\t(normalizeDateString(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcomment.updated_at,\r\n\t\t\t\t\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\"Never\")\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t\t<Markdown\r\n\t\t\t\t\t\t\t\t\tmarkdownContent={\r\n\t\t\t\t\t\t\t\t\t\tcomment.body ?? undefined\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\temptyText=\"This issue does not have a body or its body not cached.\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Container>\r\n\t\t\t</WithAppBar>\r\n\t\t\t<Drawer\r\n\t\t\t\televation={0}\r\n\t\t\t\tanchor=\"right\"\r\n\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={closeDrawer}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography fontWeight=\"bold\">\r\n\t\t\t\t\t\tMetadata\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={closeDrawer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Divider\r\n\t\t\t\t\tflexItem\r\n\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t/>\r\n\t\t\t\t<List\r\n\t\t\t\t\tdisablePadding\r\n\t\t\t\t\tdense\r\n\t\t\t\t>\r\n\t\t\t\t\t{METADATA_DEFINITIONS.map(\r\n\t\t\t\t\t\t({ label, render }) => (\r\n\t\t\t\t\t\t\t<ListItem key={label}>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tsecondary={render(issue)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router\";\r\nimport {\r\n\tgetCachedIssueComments,\r\n\tgetCachedRepoIssue,\r\n} from \"~database/cached\";\r\nimport { dbPromise } from \"~database/migration\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tissue: RepoIssueSchema;\r\n\tcomments: RepoIssueCommentSchema[];\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\tparams,\r\n}) => {\r\n\tconst owner = params.owner;\r\n\tconst repoName = params.repo;\r\n\tconst issueNumber = params.issueNumber;\r\n\tif (\r\n\t\towner === undefined ||\r\n\t\trepoName === undefined ||\r\n\t\tissueNumber === undefined\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\tif (\r\n\t\t!Number.isSafeInteger(\r\n\t\t\tNumber.parseInt(issueNumber),\r\n\t\t)\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\r\n\tconst fullName = `${owner}/${repoName}`;\r\n\tconst issue = await getCachedRepoIssue(\r\n\t\tfullName,\r\n\t\tNumber.parseInt(issueNumber),\r\n\t);\r\n\tif (issue === undefined) {\r\n\t\tthrow new Response(\"Not found\", {\r\n\t\t\tstatus: 404,\r\n\t\t\tstatusText:\r\n\t\t\t\t\"Issue does not exist or it is not cached.\",\r\n\t\t});\r\n\t}\r\n\tconst db = await dbPromise;\r\n\tconst opened_at = new Date(\r\n\t\tDate.now(),\r\n\t).toISOString();\r\n\tconst cachedRepo = await db.get(\r\n\t\t\"repos\",\r\n\t\tfullName,\r\n\t);\r\n\tawait db.put(\"repos\", {\r\n\t\t...cachedRepo!,\r\n\t\topened_at,\r\n\t});\r\n\tawait db.put(\"issues\", {\r\n\t\t...issue,\r\n\t\topened_at,\r\n\t});\r\n\r\n\tdocument.title = issue.title;\r\n\tconst loaderData: LoaderData = {\r\n\t\tissue,\r\n\t\tcomments: await getCachedIssueComments(\r\n\t\t\tissue.id,\r\n\t\t),\r\n\t};\r\n\r\n\treturn loaderData;\r\n};\r\n","import { GenericSelectOptions } from \"~types/generics\";\r\n\r\nexport const ISSUE_FILTER_PREF_STATE_KEY =\r\n\t\"issue-filter-pref-state\";\r\n\r\nexport const ISSUE_FILTER_PREF_OWNER_TYPE_KEY =\r\n\t\"issue-filter-pref-owner-type\";\r\n\r\nexport const ISSUE_FILTER_STATE_OPTIONS: GenericSelectOptions<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Open\",\r\n\t\t\tvalue: \"open\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Closed\",\r\n\t\t\tvalue: \"closed\",\r\n\t\t},\r\n\t];\r\n\r\nexport const ISSUE_FILTER_OWNER_TYPE_OPTIONS: GenericSelectOptions<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Bot\",\r\n\t\t\tvalue: \"Bot\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"User\",\r\n\t\t\tvalue: \"User\",\r\n\t\t},\r\n\t];\r\n","import { GenericSelectOptions } from \"~types/generics\";\r\n\r\nexport const REPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY =\r\n\t\"repo-filter-pref-topic-match-strategy\";\r\nexport const REPO_FILTER_PREF_VISIBILITY_KEY =\r\n\t\"repo-filter-pref-visibility\";\r\nexport const REPO_FILTER_PREF_STATUS_KEY =\r\n\t\"repo-filter-pref-status\";\r\n\r\nexport const REPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS: GenericSelectOptions<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"Match all\",\r\n\t\t\tvalue: \"Match all\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Match any\",\r\n\t\t\tvalue: \"Match any\",\r\n\t\t},\r\n\t];\r\n\r\nexport const REPO_FILTER_VISIBILITY_OPTIONS: GenericSelectOptions<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Private\",\r\n\t\t\tvalue: \"Private\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Public\",\r\n\t\t\tvalue: \"Public\",\r\n\t\t},\r\n\t];\r\n\r\nexport const REPO_FILTER_STATUS_OPTIONS: GenericSelectOptions<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Active\",\r\n\t\t\tvalue: \"Active\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Archived\",\r\n\t\t\tvalue: \"Archived\",\r\n\t\t},\r\n\t];\r\n","export const orderByString = (\r\n\ta: string | null | undefined,\r\n\tb: string | null | undefined,\r\n): number => {\r\n\t// moves nullish values to the end\r\n\r\n\tconst a_ = a ?? false;\r\n\tconst b_ = b ?? false;\r\n\tif (!a_ && b_) {\r\n\t\treturn 1;\r\n\t}\r\n\tif (!a_ && !b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\treturn b!.localeCompare(a!);\r\n};\r\n\r\nexport const orderByBoolean = (\r\n\ta: boolean | null | undefined,\r\n\tb: boolean | null | undefined,\r\n) => {\r\n\tconst a_ = Boolean(a);\r\n\tconst b_ = Boolean(b);\r\n\tif (a_ === b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\treturn 1;\r\n};\r\n\r\nexport const orderByNumber = (\r\n\ta: number | null | undefined,\r\n\tb: number | null | undefined,\r\n) => {\r\n\tconst a_ = a ?? false;\r\n\tconst b_ = b ?? false;\r\n\tif (!a_ && b_) {\r\n\t\treturn 1;\r\n\t}\r\n\tif (!a_ && !b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\treturn b! - a!;\r\n};\r\n","import {\r\n\tISSUE_FILTER_PREF_OWNER_TYPE_KEY,\r\n\tISSUE_FILTER_PREF_STATE_KEY,\r\n\tREPO_FILTER_PREF_STATUS_KEY,\r\n\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n} from \"~constants\";\r\n\r\n/////////////////////////////////////////////\r\n// Repo filter preferences\r\nexport const getRepoFilterPrefVisibility =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setRepoFilterPrefVisibility = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getRepoFilterPrefStatus =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_STATUS_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setRepoFilterPrefStatus = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tREPO_FILTER_PREF_STATUS_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getRepoFilterPrefTopicMatchStrategy =\r\n\t() => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"Match all\";\r\n\t};\r\nexport const setRepoFilterPrefTopicMatchStrategy =\r\n\t(value: string) => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\t\t\tvalue,\r\n\t\t);\r\n\t};\r\n/////////////////////////////////////////////\r\n// Issues filter preferences\r\nexport const getIssueFilterPrefState =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tISSUE_FILTER_PREF_STATE_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setIssueFilterPrefState = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tISSUE_FILTER_PREF_STATE_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getIssueFilterPrefOwnerType =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\t\"issue-filter-pref-owner-type\",\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"User\";\r\n\t};\r\nexport const setIssueFilterPrefOwnerType = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tISSUE_FILTER_PREF_OWNER_TYPE_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\n","import {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTableSortLabel,\r\n} from \"@mui/material\";\r\nimport {\r\n\tMouseEvent,\r\n\tReactNode,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\n\r\ntype DataCell<T> = {\r\n\tid: keyof T;\r\n\tlabel: string;\r\n\trender: (item: T) => ReactNode;\r\n};\r\n\r\ntype StyledTableHeadProps<T> = {\r\n\torder: \"asc\" | \"desc\";\r\n\torderBy: keyof T;\r\n\tonRequestSort: (value: keyof T) => void;\r\n\tcolumnDefinition: DataCell<T>[];\r\n};\r\nconst StyledTableHead = <T,>(\r\n\tprops: StyledTableHeadProps<T>,\r\n) => {\r\n\tconst {\r\n\t\torder,\r\n\t\torderBy,\r\n\t\tonRequestSort,\r\n\t\tcolumnDefinition,\r\n\t} = props;\r\n\r\n\tconst createSortHandler =\r\n\t\t(property: keyof T) =>\r\n\t\t(_: MouseEvent<unknown>) => {\r\n\t\t\tonRequestSort(property);\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t{columnDefinition.map(\r\n\t\t\t\t\t({ id, label }, index) => (\r\n\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\tkey={`cell-${index}`}\r\n\t\t\t\t\t\t\tsortDirection={\r\n\t\t\t\t\t\t\t\torderBy === id ? order : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\tactive={orderBy === id}\r\n\t\t\t\t\t\t\t\tdirection={\r\n\t\t\t\t\t\t\t\t\torderBy === id ? order : \"asc\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={createSortHandler(id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t),\r\n\t\t\t\t)}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n};\r\n\r\ntype StyledTableRowProps<T> = {\r\n\titem: T;\r\n\tcolumnDefinition: DataCell<T>[];\r\n};\r\nconst StyledTableRow = <T,>(\r\n\tprops: StyledTableRowProps<T>,\r\n) => {\r\n\tconst { item, columnDefinition } = props;\r\n\r\n\treturn (\r\n\t\t<TableRow>\r\n\t\t\t{columnDefinition.map(\r\n\t\t\t\t({ render }, index) => (\r\n\t\t\t\t\t<TableCell key={`data-cell-${index}`}>\r\n\t\t\t\t\t\t{render(item)}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t),\r\n\t\t\t)}\r\n\t\t</TableRow>\r\n\t);\r\n};\r\n\r\ntype StyledDataTableProps<T> = {\r\n\titems: T[];\r\n\tcolumnDefinition: DataCell<T>[];\r\n\tdefaultOrderBy: keyof T;\r\n\torderingFn: (\r\n\t\tproperty: keyof T,\r\n\t) => ((a: T, b: T) => number) | undefined;\r\n};\r\nexport const StyledDataTable = <T,>(\r\n\tprops: StyledDataTableProps<T>,\r\n) => {\r\n\tconst {\r\n\t\torderingFn,\r\n\t\titems,\r\n\t\tcolumnDefinition,\r\n\t\tdefaultOrderBy: orderBy,\r\n\t} = props;\r\n\r\n\tconst [order, setOrder] = useState<\r\n\t\t\"asc\" | \"desc\"\r\n\t>(\"desc\");\r\n\tconst [orderBy_, setOrderBy] =\r\n\t\tuseState(orderBy);\r\n\r\n\tconst handleRequestSort = (\r\n\t\tproperty: keyof T,\r\n\t) => {\r\n\t\tconst isAsc =\r\n\t\t\torderBy_ === property && order === \"asc\";\r\n\t\tsetOrder(isAsc ? \"desc\" : \"asc\");\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst items_ = useMemo(() => {\r\n\t\tconst orderFn:\r\n\t\t\t| ((a: T, b: T) => number)\r\n\t\t\t| undefined = orderingFn(orderBy_);\r\n\r\n\t\tif (orderFn === undefined) {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tconst orderedItems_ = [...items];\r\n\t\torderedItems_.sort(orderFn);\r\n\t\tif (order === \"asc\") {\r\n\t\t\torderedItems_.reverse();\r\n\t\t}\r\n\t\treturn orderedItems_;\r\n\t}, [order, orderBy_, items]);\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<Table>\r\n\t\t\t\t<StyledTableHead\r\n\t\t\t\t\tcolumnDefinition={columnDefinition}\r\n\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\torder={order}\r\n\t\t\t\t\torderBy={orderBy_}\r\n\t\t\t\t/>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{items_.map((item, index) => (\r\n\t\t\t\t\t\t<StyledTableRow\r\n\t\t\t\t\t\t\tkey={`data-cell-item-${index}`}\r\n\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\tcolumnDefinition={columnDefinition}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n","import {\r\n\tListSubheader,\r\n\tMenuItem,\r\n\tSelect,\r\n\tSelectProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\ntype StyledSelectProps = SelectProps<string> & {\r\n\toptions?: { label: string; value: string }[];\r\n\tsubheader?: string;\r\n};\r\nexport const StyledSelect: FC<\r\n\tStyledSelectProps\r\n> = (props) => {\r\n\tconst { options, subheader, ...rest } = props;\r\n\tconst options_ = options ?? [];\r\n\treturn (\r\n\t\t<Select {...rest}>\r\n\t\t\t{subheader !== \"\" &&\r\n\t\t\t\tsubheader !== undefined && (\r\n\t\t\t\t\t<ListSubheader disableSticky>\r\n\t\t\t\t\t\t{subheader}\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t)}\r\n\t\t\t{options_.map(({ value, label }, index) => (\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tkey={`${value}-${index}`}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n};\r\n","import {\r\n\tListSubheader,\r\n\tMenuItem,\r\n\tSelect,\r\n\tSelectProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\ntype StyledSelectMultipleProps = Omit<\r\n\tSelectProps<string[]>,\r\n\t\"multiple\"\r\n> & {\r\n\toptions?: { label: string; value: string }[];\r\n\tsubheader?: string;\r\n};\r\nexport const StyledSelectMultiple: FC<\r\n\tStyledSelectMultipleProps\r\n> = (props) => {\r\n\tconst { options, subheader, ...rest } = props;\r\n\tconst options_ = options ?? [];\r\n\treturn (\r\n\t\t<Select\r\n\t\t\t{...rest}\r\n\t\t\tmultiple\r\n\t\t>\r\n\t\t\t{subheader !== \"\" &&\r\n\t\t\t\tsubheader !== undefined && (\r\n\t\t\t\t\t<ListSubheader disableSticky>\r\n\t\t\t\t\t\t{subheader}\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t)}\r\n\t\t\t{options_.map(({ value, label }, index) => (\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tkey={`${value}-${index}`}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n};\r\n","import {\r\n\tTextField,\r\n\tTextFieldProps,\r\n} from \"@mui/material\";\r\nimport {\r\n\tChangeEvent,\r\n\tFC,\r\n\tKeyboardEvent,\r\n} from \"react\";\r\n\r\ntype StyledTextFieldProps = Omit<\r\n\tTextFieldProps,\r\n\t\"onChange\"\r\n> & {\r\n\tonEnter?: () => void;\r\n\tonChange?: (v: string) => void;\r\n};\r\nexport const StyledTextField: FC<\r\n\tStyledTextFieldProps\r\n> = (props) => {\r\n\tconst { onEnter, onChange, ...rest } = props;\r\n\r\n\tconst handleKeyUp = (\r\n\t\te: KeyboardEvent<HTMLDivElement>,\r\n\t) => {\r\n\t\tif (\r\n\t\t\te.key === \"Enter\" &&\r\n\t\t\tonEnter !== undefined\r\n\t\t) {\r\n\t\t\tconsole.log(\"entered\");\r\n\t\t\tonEnter();\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\tconst handleChange = (\r\n\t\te: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tif (onChange !== undefined) {\r\n\t\t\tonChange(e.target.value.normalize());\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...rest}\r\n\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n","import {\r\n\tClearRounded,\r\n\tFilterListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tCollapse,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tSelectChangeEvent,\r\n\tStack,\r\n\tToolbar,\r\n\tTypography,\r\n\tcapitalize,\r\n} from \"@mui/material\";\r\nimport { FC, ReactNode, useState } from \"react\";\r\nimport {\r\n\tLink,\r\n\tuseSubmit,\r\n} from \"react-router-dom\";\r\nimport {\r\n\tISSUE_FILTER_OWNER_TYPE_OPTIONS,\r\n\tISSUE_FILTER_STATE_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\torderByNumber,\r\n\torderByString,\r\n} from \"~core/sorting\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOptions } from \"~types/generics\";\r\nimport { RepoIssueSchema } from \"~types/schemas\";\r\nimport { StyledDataTable } from \"./StyledDataTable\";\r\nimport { StyledSelect } from \"./StyledSelect\";\r\nimport { StyledSelectMultiple } from \"./StyledSelectMultiple\";\r\nimport { StyledTextField } from \"./StyledTextField\";\r\n\r\ntype HeadCell = {\r\n\tid: keyof RepoIssueSchema;\r\n\tlabel: string;\r\n\trender: (issue: RepoIssueSchema) => ReactNode;\r\n};\r\nconst COLUMN_DEFINITION: HeadCell[] = [\r\n\t{\r\n\t\tid: \"issue_number\",\r\n\t\tlabel: \"Issue number\",\r\n\t\trender: (issue) => issue.issue_number,\r\n\t},\r\n\t{\r\n\t\tid: \"title\",\r\n\t\tlabel: \"Title\",\r\n\t\trender: (issue) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: `/repositories/${issue.repo_full_name}/issues/${issue.issue_number}`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{issue.title}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"repo_full_name\",\r\n\t\tlabel: \"Repository\",\r\n\t\trender: (issue) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={{\r\n\t\t\t\t\tpathname: `/repositories/${issue.repo_full_name}`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{issue.repo_full_name}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"opened_at\",\r\n\t\tlabel: \"Last opened\",\r\n\t\trender: (issue) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\tissue.opened_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"owner_type\",\r\n\t\tlabel: \"Type\",\r\n\t\trender: (issue) => issue.owner_type,\r\n\t},\r\n\t{\r\n\t\tid: \"state\",\r\n\t\tlabel: \"State\",\r\n\t\trender: (issue) => capitalize(issue.state),\r\n\t},\r\n\t{\r\n\t\tid: \"updated_at\",\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (issue) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\tissue.updated_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"created_at\",\r\n\t\tlabel: \"Created\",\r\n\t\trender: (issue) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\tissue.created_at,\r\n\t\t\t\t\"Unknown\",\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\nconst getOrderingFn = (\r\n\tproperty: keyof RepoIssueSchema,\r\n) => {\r\n\tlet orderFn:\r\n\t\t| ((\r\n\t\t\t\ta: RepoIssueSchema,\r\n\t\t\t\tb: RepoIssueSchema,\r\n\t\t  ) => number)\r\n\t\t| undefined;\r\n\tswitch (property) {\r\n\t\tcase \"issue_number\":\r\n\t\t\torderFn = (a, b) => {\r\n\t\t\t\treturn orderByNumber(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| number\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| number\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase \"title\":\r\n\t\tcase \"repo_full_name\":\r\n\t\tcase \"owner_type\":\r\n\t\tcase \"state\":\r\n\t\tcase \"created_at\":\r\n\t\tcase \"updated_at\":\r\n\t\t\torderFn = (a, b) => {\r\n\t\t\t\treturn orderByString(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t}\r\n\treturn orderFn;\r\n};\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren: ReactNode;\r\n\ttext: string;\r\n};\r\nconst WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { text, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\ntype IssueDataTableProps = {\r\n\tissues: RepoIssueSchema[];\r\n\ttitle?: string;\r\n\townerType?: string;\r\n\trepoFullNames?: string[];\r\n\tstate?: string;\r\n\trepoOptions: GenericSelectOptions<string>[];\r\n};\r\nexport const IssueDataTable: React.FC<\r\n\tIssueDataTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\trepoOptions,\r\n\t\tissues,\r\n\t\ttitle: title_,\r\n\t\trepoFullNames: repoFullNames_,\r\n\t\townerType: ownerType_,\r\n\t\tstate: state_,\r\n\t} = props;\r\n\tconst submit = useSubmit();\r\n\tconst [title, setTitle] = useState(\r\n\t\ttitle_ ?? \"\",\r\n\t);\r\n\tconst repoFullNames = repoFullNames_ ?? [];\r\n\tconst ownerType =\r\n\t\townerType_ ?? getIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tstate_ ?? getIssueFilterPrefState();\r\n\tconst handleOwnerTypeChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tstate,\r\n\t\t\t\townerType: value,\r\n\t\t\t\trepoFullNames,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleStateChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tstate: value,\r\n\t\t\t\townerType,\r\n\t\t\t\trepoFullNames,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleRepoFullNamesChange = (\r\n\t\tevent: SelectChangeEvent<string[]>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tstate,\r\n\t\t\t\townerType,\r\n\t\t\t\trepoFullNames: value,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleRepoFullNamesReset = () => {\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tstate,\r\n\t\t\t\townerType,\r\n\t\t\t\trepoFullNames: [],\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleTitleSubmit = () => {\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\ttitle,\r\n\t\t\t\tstate,\r\n\t\t\t\townerType,\r\n\t\t\t\trepoFullNames,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\r\n\tconst [filterOpen, setFilterOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleFilter = () => {\r\n\t\tsetFilterOpen(!filterOpen);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\tgap: 1,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\tShowing {issues.length}{\" \"}\r\n\t\t\t\t\t{issues.length === 1\r\n\t\t\t\t\t\t? \"issue\"\r\n\t\t\t\t\t\t: \"issues\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\"Search issue\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={setTitle}\r\n\t\t\t\t\t\tonEnter={handleTitleSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleFilter}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FilterListRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Collapse in={filterOpen}>\r\n\t\t\t\t<List disablePadding>\r\n\t\t\t\t\t<WrappableListItem text=\"Repositories\">\r\n\t\t\t\t\t\t<StyledSelectMultiple\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Repositories\"\r\n\t\t\t\t\t\t\trenderValue={(value) =>\r\n\t\t\t\t\t\t\t\t`${value.length} selected`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={repoFullNames}\r\n\t\t\t\t\t\t\toptions={repoOptions}\r\n\t\t\t\t\t\t\tonChange={handleRepoFullNamesChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={handleRepoFullNamesReset}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"State\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"State\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={state}\r\n\t\t\t\t\t\t\toptions={ISSUE_FILTER_STATE_OPTIONS}\r\n\t\t\t\t\t\t\tonChange={handleStateChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"State\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Type\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={ownerType}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tISSUE_FILTER_OWNER_TYPE_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={handleOwnerTypeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Collapse>\r\n\t\t\t<StyledDataTable\r\n\t\t\t\titems={issues}\r\n\t\t\t\tcolumnDefinition={COLUMN_DEFINITION}\r\n\t\t\t\tdefaultOrderBy=\"updated_at\"\r\n\t\t\t\torderingFn={getOrderingFn}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { Box } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { IssueDataTable } from \"~components/IssueDataTable\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nexport const IssueListPage: FC = () => {\r\n\tconst {\r\n\t\tissues,\r\n\t\trepoOptions,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpaths=\"~/issues\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Box\r\n\t\t\t\tpaddingTop={2}\r\n\t\t\t\tpaddingX={2}\r\n\t\t\t>\r\n\t\t\t\t<IssueDataTable\r\n\t\t\t\t\tissues={issues}\r\n\t\t\t\t\trepoOptions={repoOptions}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\townerType={ownerType}\r\n\t\t\t\t\trepoFullNames={repoFullNames}\r\n\t\t\t\t\tstate={state}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { matchSorter } from \"match-sorter\";\r\nimport {\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport const filterRepos = (\r\n\trepos: RepoSchema[],\r\n\tname: string,\r\n\ttopics: string[],\r\n\tvisibility: string,\r\n\tstatus: string,\r\n\ttopicFilterMode: string,\r\n) => {\r\n\tlet items = [...repos];\r\n\r\n\tif (visibility === \"Private\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.is_private,\r\n\t\t);\r\n\t}\r\n\tif (visibility === \"Public\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => !item.is_private,\r\n\t\t);\r\n\t}\r\n\r\n\tif (status === \"Archived\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.is_archived,\r\n\t\t);\r\n\t}\r\n\tif (status === \"Active\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => !item.is_archived,\r\n\t\t);\r\n\t}\r\n\r\n\tif (\r\n\t\ttopics.length > 0 &&\r\n\t\ttopicFilterMode === \"Match all\"\r\n\t) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\ttopics.every((topic) => {\r\n\t\t\t\tif (item.topics === undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn item.topics.includes(topic);\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\tif (\r\n\t\ttopics.length > 0 &&\r\n\t\ttopicFilterMode === \"Match any\"\r\n\t) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\ttopics.some((topic) => {\r\n\t\t\t\tif (item.topics === undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn item.topics.includes(topic);\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\titems = matchSorter(items, name, {\r\n\t\tkeys: [\"full_name\"],\r\n\t});\r\n\treturn items;\r\n};\r\n\r\nexport const filterIssues = (\r\n\tissues: RepoIssueSchema[],\r\n\ttitle: string,\r\n\townerType: string,\r\n\trepoFullNames: string[],\r\n\tstate: string,\r\n) => {\r\n\tlet items = [...issues];\r\n\r\n\tif (ownerType !== \"All\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.owner_type === ownerType,\r\n\t\t);\r\n\t}\r\n\tif (repoFullNames.length > 0) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\trepoFullNames.includes(item.repo_full_name),\r\n\t\t);\r\n\t}\r\n\tif (state !== \"All\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.state === state,\r\n\t\t);\r\n\t}\r\n\r\n\titems = matchSorter(items, title, {\r\n\t\tkeys: [\"title\"],\r\n\t});\r\n\treturn items;\r\n};\r\n","import { LoaderFunction } from \"react-router-dom\";\r\nimport { filterIssues } from \"~core/filtering\";\r\nimport { getCachedIssues } from \"~database/index\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOptions } from \"~types/generics\";\r\nimport { RepoIssueSchema } from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tissues: RepoIssueSchema[];\r\n\trepoOptions: GenericSelectOptions<string>[];\r\n\ttitle: string;\r\n\townerType: string;\r\n\trepoFullNames: string[];\r\n\tstate: string;\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\trequest,\r\n}): Promise<LoaderData> => {\r\n\tdocument.title = \"issues\";\r\n\tlet issues = await getCachedIssues();\r\n\r\n\tconst uniqueRepoOptions = new Set(\r\n\t\tissues\r\n\t\t\t.map(({ repo_full_name }) => repo_full_name)\r\n\t\t\t.filter((value) => value.length > 0),\r\n\t);\r\n\tconst options = [...uniqueRepoOptions];\r\n\toptions.sort();\r\n\tconst repoOptions: GenericSelectOptions<string>[] =\r\n\t\toptions.map((value) => ({\r\n\t\t\tlabel: value,\r\n\t\t\tvalue,\r\n\t\t}));\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\r\n\tconst repoFullNamesParam = searchParams.get(\r\n\t\t\"repoFullNames\",\r\n\t);\r\n\tlet repoFullNames: string[] = [];\r\n\tif (repoFullNamesParam !== null) {\r\n\t\trepoFullNames = repoFullNamesParam\r\n\t\t\t.normalize()\r\n\t\t\t.trim()\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((item) => item.trim())\r\n\t\t\t.filter((item) => item.length > 0);\r\n\t}\r\n\r\n\tconst title = searchParams.get(\"title\") || \"\";\r\n\r\n\tconst ownerType =\r\n\t\tsearchParams.get(\"ownerType\") ||\r\n\t\tgetIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tsearchParams.get(\"state\") ||\r\n\t\tgetIssueFilterPrefState();\r\n\r\n\tissues = filterIssues(\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t);\r\n\r\n\treturn {\r\n\t\tissues,\r\n\t\trepoOptions,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t};\r\n};\r\n","import {\r\n\tURLSearchParamsInit,\r\n\tcreateSearchParams,\r\n} from \"react-router-dom\";\r\nimport { SortRule } from \"~types/generics\";\r\n\r\nexport const sortItems = <T>(\r\n\trule: string | null,\r\n\tsortRules: SortRule<T>[],\r\n\titems: T[],\r\n) => {\r\n\tif (sortRules.length <= 0) {\r\n\t\treturn;\r\n\t}\r\n\tlet compareFn = sortRules[0].compareFn;\r\n\tif (!rule) {\r\n\t\tfor (const sortRule of sortRules) {\r\n\t\t\tif (sortRule.value === rule) {\r\n\t\t\t\tcompareFn = sortRule.compareFn;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\titems.sort(compareFn);\r\n};\r\n\r\nexport const extractFilterTags = (\r\n\tqueryString: string | null,\r\n): string[] => {\r\n\tlet filterTags: string[] = [];\r\n\tif (queryString) {\r\n\t\tfilterTags = queryString\r\n\t\t\t.normalize()\r\n\t\t\t.split(\",\");\r\n\t}\r\n\treturn filterTags;\r\n};\r\n\r\nexport const toSearchParam = (\r\n\tquery: URLSearchParamsInit,\r\n) => {\r\n\treturn createSearchParams(query).toString();\r\n};\r\n","import {\r\n\tChevronLeftRounded,\r\n\tClearRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tContainer,\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tStack,\r\n\tTab,\r\n\tTabs,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { Buffer } from \"buffer\";\r\nimport { FC, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { IssueDataTable } from \"~components/IssueDataTable\";\r\nimport { Markdown } from \"~components/Markdown\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nimport { ReactNode } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toSearchParam } from \"~core/query\";\r\nimport { toTimeStamp } from \"~core/time\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\n\r\nconst REPO_METADATA_DEFINITIONS: {\r\n\tlabel: string;\r\n\trender: (repo: RepoSchema) => ReactNode;\r\n}[] = [\r\n\t{\r\n\t\tlabel: \"Description\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.description ?? \"No description\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Last pushed\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.pushed_at\r\n\t\t\t\t? toTimeStamp(repo.pushed_at)\r\n\t\t\t\t: \"Never\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.updated_at\r\n\t\t\t\t? toTimeStamp(repo.updated_at)\r\n\t\t\t\t: \"Never\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Created\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.created_at\r\n\t\t\t\t? toTimeStamp(repo.created_at)\r\n\t\t\t\t: \"Unknown\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Visibility\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Private\" : \"Public\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Status\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Archived\" : \"Active\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Links\",\r\n\t\trender: (repo) => (\r\n\t\t\t<Stack\r\n\t\t\t\tcomponent=\"span\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\tgap={1}\r\n\t\t\t>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\thref={repo.html_url}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGitHub repository\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\thref={repo.homepage ?? undefined}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHomepage\r\n\t\t\t\t</Typography>\r\n\t\t\t</Stack>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Topics\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.topics && repo.topics.length > 0 ? (\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\tgap={1}\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{repo.topics.map((topic) => (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tkey={topic}\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/repositories\",\r\n\t\t\t\t\t\t\t\tsearch: toSearchParam({\r\n\t\t\t\t\t\t\t\t\ttopics: topic,\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{topic}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t) : (\r\n\t\t\t\t\"No topic assigned\"\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\nexport const RepoDetailsPage: FC = () => {\r\n\tconst {\r\n\t\trepoOptions,\r\n\t\trepo,\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\tconst [tab, setTab] = useState(0);\r\n\tconst [drawerOpen, setDrawerOpen] =\r\n\t\tuseState(false);\r\n\r\n\tconst toggleDrawer = () => {\r\n\t\tsetDrawerOpen(!drawerOpen);\r\n\t};\r\n\tconst closeDrawer = () => {\r\n\t\tsetDrawerOpen(false);\r\n\t};\r\n\r\n\tlet decodedReadme: string | undefined;\r\n\tif (repo.readme !== undefined) {\r\n\t\tdecodedReadme = Buffer.from(\r\n\t\t\trepo.readme,\r\n\t\t\t\"base64\",\r\n\t\t).toString();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpaths={`~/repositories/${repo.full_name}`}\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\t\t\tflexGrow: { xs: 0, sm: 1 },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tseconadaryAction={\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tflexGrow: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronLeftRounded />\r\n\t\t\t\t</IconButton>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={tab}\r\n\t\t\t\t\tonChange={(_, tab) => setTab(tab)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\tlabel=\"Readme\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tvalue={1}\r\n\t\t\t\t\t\tlabel=\"Issues\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Divider />\r\n\t\t\t{tab === 0 && (\r\n\t\t\t\t<Container maxWidth=\"sm\">\r\n\t\t\t\t\t<Markdown\r\n\t\t\t\t\t\temptyText=\"This repository does not contain a readme.\"\r\n\t\t\t\t\t\tmarkdownContent={decodedReadme}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Container>\r\n\t\t\t)}\r\n\t\t\t{tab === 1 && (\r\n\t\t\t\t<Box padding={2}>\r\n\t\t\t\t\t<IssueDataTable\r\n\t\t\t\t\t\trepoOptions={repoOptions}\r\n\t\t\t\t\t\tissues={issues}\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\townerType={ownerType}\r\n\t\t\t\t\t\trepoFullNames={repoFullNames}\r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\t<Drawer\r\n\t\t\t\televation={0}\r\n\t\t\t\tanchor=\"right\"\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={closeDrawer}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tsx: { width: 240 },\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography fontWeight=\"bold\">\r\n\t\t\t\t\t\tMetadata\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={closeDrawer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Divider\r\n\t\t\t\t\tflexItem\r\n\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t/>\r\n\t\t\t\t<List\r\n\t\t\t\t\tdisablePadding\r\n\t\t\t\t\tdense\r\n\t\t\t\t>\r\n\t\t\t\t\t{REPO_METADATA_DEFINITIONS.map(\r\n\t\t\t\t\t\t({ label, render }) => (\r\n\t\t\t\t\t\t\t<ListItem key={label}>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tsecondary={render(repo)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router\";\r\nimport { filterIssues } from \"~core/filtering\";\r\nimport {\r\n\tgetCachedRepo,\r\n\tgetCachedRepoIssues,\r\n} from \"~database/cached\";\r\nimport { dbPromise } from \"~database/migration\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOptions } from \"~types/generics\";\r\nimport {\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\trepo: RepoSchema;\r\n\tissues: RepoIssueSchema[];\r\n\ttitle: string;\r\n\townerType: string;\r\n\trepoFullNames: string[];\r\n\trepoOptions: GenericSelectOptions<string>[];\r\n\tstate: string;\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\tparams,\r\n\trequest,\r\n}) => {\r\n\tconst owner = params.owner;\r\n\tconst repoName = params.repo;\r\n\tif (\r\n\t\towner === undefined ||\r\n\t\trepoName === undefined\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\r\n\tconst fullName = `${owner}/${repoName}`;\r\n\tlet repo = await getCachedRepo(fullName);\r\n\tif (repo === undefined) {\r\n\t\tthrow new Response(\"Not found\", {\r\n\t\t\tstatus: 404,\r\n\t\t\tstatusText: \"Repository not found in cache\",\r\n\t\t});\r\n\t}\r\n\r\n\t(await dbPromise).put(\"repos\", {\r\n\t\t...repo,\r\n\t\topened_at: new Date(Date.now()).toISOString(),\r\n\t});\r\n\r\n\tdocument.title = repo.name;\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\tconst title = searchParams.get(\"title\") || \"\";\r\n\tconst ownerType =\r\n\t\tsearchParams.get(\"ownerType\") ||\r\n\t\tgetIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tsearchParams.get(\"state\") ||\r\n\t\tgetIssueFilterPrefState();\r\n\r\n\tlet issues = await getCachedRepoIssues(\r\n\t\trepo.full_name,\r\n\t);\r\n\tconst repoFullNames: string[] = [\r\n\t\trepo.full_name,\r\n\t];\r\n\tissues = filterIssues(\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t);\r\n\r\n\tconst repoOptions: GenericSelectOptions<string>[] =\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tlabel: repo.full_name,\r\n\t\t\t\tvalue: repo.full_name,\r\n\t\t\t},\r\n\t\t];\r\n\tconst loaderData: LoaderData = {\r\n\t\trepo,\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t\trepoOptions,\r\n\t};\r\n\r\n\treturn loaderData;\r\n};\r\n","import {\r\n\tClearRounded,\r\n\tFilterListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tCollapse,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tSelectChangeEvent,\r\n\tStack,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport {\r\n\tREPO_FILTER_STATUS_OPTIONS,\r\n\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS,\r\n\tREPO_FILTER_VISIBILITY_OPTIONS,\r\n} from \"constants/REPO_FILTER_OPTIONS\";\r\nimport { FC, ReactNode, useState } from \"react\";\r\nimport {\r\n\tLink,\r\n\tuseSubmit,\r\n} from \"react-router-dom\";\r\nimport {\r\n\torderByBoolean,\r\n\torderByString,\r\n} from \"~core/sorting\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOptions } from \"~types/generics\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\nimport { StyledDataTable } from \"./StyledDataTable\";\r\nimport { StyledSelect } from \"./StyledSelect\";\r\nimport { StyledSelectMultiple } from \"./StyledSelectMultiple\";\r\nimport { StyledTextField } from \"./StyledTextField\";\r\n\r\ntype DataCell = {\r\n\tid: keyof RepoSchema;\r\n\tlabel: string;\r\n\trender: (repo: RepoSchema) => ReactNode;\r\n};\r\nconst COLUMN_DEFINITION: DataCell[] = [\r\n\t{\r\n\t\tid: \"full_name\",\r\n\t\tlabel: \"Name\",\r\n\t\trender: (repo) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={`./${repo.full_name}`}\r\n\t\t\t>\r\n\t\t\t\t{repo.full_name}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"opened_at\",\r\n\t\tlabel: \"Last opened\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.opened_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"is_archived\",\r\n\t\tlabel: \"Status\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_archived ? \"Archived\" : \"Active\",\r\n\t},\r\n\t{\r\n\t\tid: \"is_private\",\r\n\t\tlabel: \"Visibility\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Private\" : \"Public\",\r\n\t},\r\n\t{\r\n\t\tid: \"pushed_at\",\r\n\t\tlabel: \"Last pushed\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.pushed_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"updated_at\",\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.updated_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"created_at\",\r\n\t\tlabel: \"Created\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.created_at,\r\n\t\t\t\t\"Unknown\",\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\nconst getOrderingFn = (\r\n\tproperty: keyof RepoSchema,\r\n):\r\n\t| ((a: RepoSchema, b: RepoSchema) => number)\r\n\t| undefined => {\r\n\tswitch (property) {\r\n\t\tcase \"is_archived\":\r\n\t\tcase \"is_private\":\r\n\t\t\treturn (a, b) =>\r\n\t\t\t\torderByBoolean(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| boolean\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| boolean\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\tcase \"full_name\":\r\n\t\tcase \"pushed_at\":\r\n\t\tcase \"opened_at\":\r\n\t\tcase \"created_at\":\r\n\t\tcase \"updated_at\":\r\n\t\t\treturn (a, b) =>\r\n\t\t\t\torderByString(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren: ReactNode;\r\n\ttext: string;\r\n};\r\nconst WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { text, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\ntype RepoDataTableProps = {\r\n\trepos: RepoSchema[];\r\n\ttopicOptions: GenericSelectOptions<string>[];\r\n\tname?: string;\r\n\ttopics?: string[];\r\n\ttopicMatchStrategy?: string;\r\n\tvisibility?: string;\r\n\tstatus?: string;\r\n};\r\nexport const RepoDataTable: React.FC<\r\n\tRepoDataTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\trepos,\r\n\t\ttopicOptions: topicOptions_,\r\n\t\tname: name_,\r\n\t\ttopicMatchStrategy: topicMatchStrategy_,\r\n\t\tstatus: status_,\r\n\t\ttopics: topics_,\r\n\t\tvisibility: visibility_,\r\n\t} = props;\r\n\r\n\tconst submit = useSubmit();\r\n\r\n\tconst [name, setName] = useState(name_ || \"\");\r\n\tconst topics = topics_ ?? [];\r\n\tconst topicMatchStrategy =\r\n\t\ttopicMatchStrategy_ ||\r\n\t\tgetRepoFilterPrefTopicMatchStrategy();\r\n\tconst visibility =\r\n\t\tvisibility_ || getRepoFilterPrefVisibility();\r\n\tconst status =\r\n\t\tstatus_ || getRepoFilterPrefStatus();\r\n\r\n\tconst handleNameSubmit = () => {\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics,\r\n\t\t\t\ttopicMatchStrategy,\r\n\t\t\t\tvisibility,\r\n\t\t\t\tstatus,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleTopicMatchStrategyChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics,\r\n\t\t\t\ttopicMatchStrategy: value,\r\n\t\t\t\tvisibility,\r\n\t\t\t\tstatus,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleStatusChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics,\r\n\t\t\t\ttopicMatchStrategy,\r\n\t\t\t\tvisibility,\r\n\t\t\t\tstatus: value,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleVisibilityChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics,\r\n\t\t\t\ttopicMatchStrategy,\r\n\t\t\t\tvisibility: value,\r\n\t\t\t\tstatus,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleTopicsChange = (\r\n\t\tevent: SelectChangeEvent<string[]>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics: value,\r\n\t\t\t\ttopicMatchStrategy,\r\n\t\t\t\tvisibility,\r\n\t\t\t\tstatus,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\tconst handleTopicsReset = () => {\r\n\t\tsubmit(\r\n\t\t\t{\r\n\t\t\t\tname,\r\n\t\t\t\ttopics: [],\r\n\t\t\t\ttopicMatchStrategy,\r\n\t\t\t\tvisibility,\r\n\t\t\t\tstatus,\r\n\t\t\t},\r\n\t\t\t{ action: \"./\", method: \"get\" },\r\n\t\t);\r\n\t};\r\n\r\n\tconst [filterOpen, setFilterOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleFilter = () => {\r\n\t\tsetFilterOpen(!filterOpen);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\tgap: 1,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Typography>\r\n\t\t\t\t\tShowing {repos.length}{\" \"}\r\n\t\t\t\t\t{repos.length === 1\r\n\t\t\t\t\t\t? \"repository\"\r\n\t\t\t\t\t\t: \"repositories\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\"Search repository\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={setName}\r\n\t\t\t\t\t\tonEnter={handleNameSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleFilter}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FilterListRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Collapse in={filterOpen}>\r\n\t\t\t\t<List disablePadding>\r\n\t\t\t\t\t<WrappableListItem text=\"Topics\">\r\n\t\t\t\t\t\t<StyledSelectMultiple\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Topics\"\r\n\t\t\t\t\t\t\trenderValue={(value) =>\r\n\t\t\t\t\t\t\t\t`${value.length} selected`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={topics}\r\n\t\t\t\t\t\t\toptions={topicOptions_}\r\n\t\t\t\t\t\t\tonChange={handleTopicsChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={handleTopicsReset}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Topic match strategy\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Match strategy\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={topicMatchStrategy}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\t\thandleTopicMatchStrategyChange\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Visibility\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Visibility\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={visibility}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tREPO_FILTER_VISIBILITY_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={handleVisibilityChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Status\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsubheader=\"Status\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\t\toptions={REPO_FILTER_STATUS_OPTIONS}\r\n\t\t\t\t\t\t\tonChange={handleStatusChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Collapse>\r\n\t\t\t<StyledDataTable\r\n\t\t\t\titems={repos}\r\n\t\t\t\torderingFn={getOrderingFn}\r\n\t\t\t\tdefaultOrderBy=\"pushed_at\"\r\n\t\t\t\tcolumnDefinition={COLUMN_DEFINITION}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import { Box } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { RepoDataTable } from \"~components/RepoDataTable\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nexport const RepoListPage: FC = () => {\r\n\tconst {\r\n\t\trepos,\r\n\t\ttopicOptions,\r\n\t\ttopics,\r\n\t\tname,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpaths=\"~/repositories\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Box padding={2}>\r\n\t\t\t\t<RepoDataTable\r\n\t\t\t\t\ttopicOptions={topicOptions}\r\n\t\t\t\t\trepos={repos}\r\n\t\t\t\t\ttopics={topics}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tvisibility={visibility}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\ttopicMatchStrategy={topicMatchStrategy}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router-dom\";\r\nimport { filterRepos } from \"~core/filtering\";\r\nimport {\r\n\tgetCachedRepos,\r\n\tgetCachedTopics,\r\n} from \"~database/index\";\r\nimport {\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOptions } from \"~types/generics\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\trepos: RepoSchema[];\r\n\ttopicOptions: GenericSelectOptions<string>[];\r\n\ttopics: string[];\r\n\tname: string;\r\n\tvisibility: string;\r\n\tstatus: string;\r\n\ttopicMatchStrategy: string;\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\trequest,\r\n}): Promise<LoaderData> => {\r\n\tdocument.title = \"repositories\";\r\n\tconst topicOptions: GenericSelectOptions<string>[] =\r\n\t\t(await getCachedTopics()).map((topic) => {\r\n\t\t\treturn { label: topic, value: topic };\r\n\t\t});\r\n\tlet repos = await getCachedRepos();\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\tconst topicsParam = searchParams.get(\"topics\");\r\n\tlet topics: string[] = [];\r\n\tif (topicsParam !== null) {\r\n\t\ttopics = topicsParam\r\n\t\t\t.normalize()\r\n\t\t\t.trim()\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((topic) => topic.trim())\r\n\t\t\t.filter((topic) => topic.length > 0);\r\n\t}\r\n\r\n\tconst name = searchParams.get(\"name\") || \"\";\r\n\tconst status =\r\n\t\tsearchParams.get(\"status\") ||\r\n\t\tgetRepoFilterPrefStatus();\r\n\tconst visibility =\r\n\t\tsearchParams.get(\"visibility\") ||\r\n\t\tgetRepoFilterPrefVisibility();\r\n\tconst topicMatchStrategy =\r\n\t\tsearchParams.get(\"topicMatchStrategy\") ||\r\n\t\tgetRepoFilterPrefTopicMatchStrategy();\r\n\trepos = filterRepos(\r\n\t\trepos,\r\n\t\tname,\r\n\t\ttopics,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t);\r\n\r\n\treturn {\r\n\t\ttopicOptions,\r\n\t\trepos,\r\n\t\ttopics,\r\n\t\tname,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t};\r\n};\r\n","import {\r\n\tListItem,\r\n\tListItemText,\r\n\tStack,\r\n} from \"@mui/material\";\r\nimport { FC, ReactNode } from \"react\";\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren?: ReactNode;\r\n\tprimary?: string;\r\n\tsecondary?: string;\r\n};\r\nexport const WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { secondary, primary, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tprimary={primary}\r\n\t\t\t\t\tsecondary={secondary}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n","import {\r\n\tButton,\r\n\tList,\r\n\tListItem,\r\n\tListSubheader,\r\n\tTextField,\r\n} from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { ChangeEvent, FC, useState } from \"react\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nexport const SettingRegionAPI: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst [\r\n\t\tpersonalAccessToken,\r\n\t\tsetPersonalAccessToken,\r\n\t] = useState(\r\n\t\tlocalStorage.getItem(\r\n\t\t\t\"personal-access-token\",\r\n\t\t) ?? \"\",\r\n\t);\r\n\r\n\tconst handlePasswordChange = (\r\n\t\tevent: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tconst value = event.target.value.normalize();\r\n\t\tsetPersonalAccessToken(value);\r\n\t};\r\n\r\n\tconst commitChanges = () => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"personal-access-token\",\r\n\t\t\tpersonalAccessToken,\r\n\t\t);\r\n\t\tenqueueSnackbar({\r\n\t\t\tmessage: \"Updated personal access token\",\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\tdisablePadding\r\n\t\t\tsubheader={\r\n\t\t\t\t<ListSubheader\r\n\t\t\t\t\tdisableGutters\r\n\t\t\t\t\tdisableSticky\r\n\t\t\t\t>\r\n\t\t\t\t\tAPI\r\n\t\t\t\t</ListSubheader>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<WrappableListItem primary=\"Personal access token (classic)\">\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tplaceholder=\"ghp_\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={personalAccessToken}\r\n\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t/>\r\n\t\t\t</WrappableListItem>\r\n\t\t\t<ListItem disableGutters>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisableElevation\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={commitChanges}\r\n\t\t\t\t>\r\n\t\t\t\t\tUpdate\r\n\t\t\t\t</Button>\r\n\t\t\t</ListItem>\r\n\t\t</List>\r\n\t);\r\n};\r\n","import {\r\n\tList,\r\n\tListSubheader,\r\n\tSelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { FC, useState } from \"react\";\r\nimport { StyledSelect } from \"~components/StyledSelect\";\r\nimport {\r\n\tISSUE_FILTER_OWNER_TYPE_OPTIONS,\r\n\tISSUE_FILTER_STATE_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n\tsetIssueFilterPrefOwnerType,\r\n\tsetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nexport const SettingRegionIssueFilterPref: FC =\r\n\t() => {\r\n\t\tconst [ownerType, setOwnerType] = useState(\r\n\t\t\tgetIssueFilterPrefOwnerType(),\r\n\t\t);\r\n\t\tconst [state, setState] = useState(\r\n\t\t\tgetIssueFilterPrefState(),\r\n\t\t);\r\n\r\n\t\tconst handleOwnerTypeChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetIssueFilterPrefOwnerType(value);\r\n\t\t\tsetOwnerType(value);\r\n\t\t};\r\n\t\tconst handleStateChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetIssueFilterPrefState(value);\r\n\t\t\tsetState(value);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<List\r\n\t\t\t\tdisablePadding\r\n\t\t\t\tsubheader={\r\n\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\tdisableSticky\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tIssue filter preferences\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<WrappableListItem primary=\"Owner type\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={ownerType}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tISSUE_FILTER_OWNER_TYPE_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={handleOwnerTypeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"State\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={state}\r\n\t\t\t\t\t\toptions={ISSUE_FILTER_STATE_OPTIONS}\r\n\t\t\t\t\t\tonChange={handleStateChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t</List>\r\n\t\t);\r\n\t};\r\n","import {\r\n\tList,\r\n\tListSubheader,\r\n\tSelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { FC, useState } from \"react\";\r\nimport { StyledSelect } from \"~components/StyledSelect\";\r\nimport {\r\n\tREPO_FILTER_STATUS_OPTIONS,\r\n\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS,\r\n\tREPO_FILTER_VISIBILITY_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n\tsetRepoFilterPrefStatus,\r\n\tsetRepoFilterPrefTopicMatchStrategy,\r\n\tsetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nexport const SettingRegionRepoFilterPref: FC =\r\n\t() => {\r\n\t\tconst [mode, setMode] = useState(\r\n\t\t\tgetRepoFilterPrefTopicMatchStrategy(),\r\n\t\t);\r\n\t\tconst [visibility, setVisibility] = useState(\r\n\t\t\tgetRepoFilterPrefVisibility(),\r\n\t\t);\r\n\t\tconst [status, setStatus] = useState(\r\n\t\t\tgetRepoFilterPrefStatus(),\r\n\t\t);\r\n\r\n\t\tconst handleTopicMatchStrategyChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefTopicMatchStrategy(value);\r\n\t\t\tsetMode(value);\r\n\t\t};\r\n\t\tconst handleVisiblityChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefVisibility(value);\r\n\t\t\tsetVisibility(value);\r\n\t\t};\r\n\t\tconst handleStatusChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefStatus(value);\r\n\t\t\tsetStatus(value);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<List\r\n\t\t\t\tdisablePadding\r\n\t\t\t\tsubheader={\r\n\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\tdisableSticky\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRepository filter preferences\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<WrappableListItem primary=\"Match strategy\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={mode}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\thandleTopicMatchStrategyChange\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"Visibility\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={visibility}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tREPO_FILTER_VISIBILITY_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={handleVisiblityChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"Status\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\toptions={REPO_FILTER_STATUS_OPTIONS}\r\n\t\t\t\t\t\tonChange={handleStatusChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t</List>\r\n\t\t);\r\n\t};\r\n","import {\r\n\tButton,\r\n\tCircularProgress,\r\n\tList,\r\n\tListSubheader,\r\n} from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { FC, useMemo, useState } from \"react\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tsyncCachedRepoIssueComments,\r\n\tsyncCachedRepoIssues,\r\n\tsyncCachedRepos,\r\n} from \"~database/cached\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nconst SYNC_DETAILS: {\r\n\tkey: string;\r\n\tsuccessMsg: string;\r\n\tpromise: (\r\n\t\tonFailure: (err: any) => void,\r\n\t) => Promise<boolean[]>;\r\n}[] = [\r\n\t{\r\n\t\tkey: \"last-sync-repos\",\r\n\t\tsuccessMsg: \"repsitories\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepos(onFailure),\r\n\t},\r\n\t{\r\n\t\tkey: \"last-sync-issues\",\r\n\t\tsuccessMsg: \"issues\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepoIssues(onFailure),\r\n\t},\r\n\t{\r\n\t\tkey: \"last-sync-comments\",\r\n\t\tsuccessMsg: \"comments\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepoIssueComments(onFailure),\r\n\t},\r\n];\r\n\r\nconst LAST_SYNC = [\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-repos\"),\r\n\t\t\"Never\",\r\n\t),\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-issues\"),\r\n\t\t\"Never\",\r\n\t),\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-comments\"),\r\n\t\t\"Never\",\r\n\t),\r\n];\r\n\r\nexport const SettingRegionSync: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst savedToken =\r\n\t\tlocalStorage.getItem(\r\n\t\t\t\"personal-access-token\",\r\n\t\t) ?? \"\";\r\n\r\n\tconst [syncing, setSyncing] = useState<\r\n\t\tboolean[]\r\n\t>([false, false, false]);\r\n\tconst [lastSyncs, setLastSync] =\r\n\t\tuseState(LAST_SYNC);\r\n\r\n\tconst enqueueError = (err: any) => {\r\n\t\tenqueueSnackbar({\r\n\t\t\tmessage: String(err),\r\n\t\t\tvariant: \"error\",\r\n\t\t});\r\n\t\tthrow err;\r\n\t};\r\n\r\n\tconst handleSync = async (index: number) => {\r\n\t\tsetSyncing((prev) => {\r\n\t\t\tconst next = [...prev];\r\n\t\t\tnext[index] = true;\r\n\t\t\treturn next;\r\n\t\t});\r\n\r\n\t\tconst { promise, successMsg, key } =\r\n\t\t\tSYNC_DETAILS[index];\r\n\t\tconst res = await promise(enqueueError);\r\n\t\tif (res.every((r) => r)) {\r\n\t\t\tenqueueSnackbar({\r\n\t\t\t\tmessage: `Synced ${successMsg}`,\r\n\t\t\t\tvariant: \"success\",\r\n\t\t\t});\r\n\t\t\tconst timestamp = new Date(\r\n\t\t\t\tDate.now(),\r\n\t\t\t).toISOString();\r\n\t\t\tlocalStorage.setItem(key, timestamp);\r\n\t\t\tsetLastSync((prev) => {\r\n\t\t\t\tconst next = [...prev];\r\n\t\t\t\tnext[index] =\r\n\t\t\t\t\tnormalizeDateString(timestamp);\r\n\t\t\t\treturn next;\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetSyncing((prev) => {\r\n\t\t\tconst next = [...prev];\r\n\t\t\tnext[index] = false;\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\tconst disableSync = useMemo(() => {\r\n\t\treturn !Boolean(savedToken);\r\n\t}, [savedToken]);\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\tdisablePadding\r\n\t\t\tsubheader={\r\n\t\t\t\t<ListSubheader\r\n\t\t\t\t\tdisableGutters\r\n\t\t\t\t\tdisableSticky\r\n\t\t\t\t>\r\n\t\t\t\t\tSynchronization\r\n\t\t\t\t</ListSubheader>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{SYNC_DETAILS.map(\r\n\t\t\t\t({ successMsg }, index) => (\r\n\t\t\t\t\t<WrappableListItem\r\n\t\t\t\t\t\tkey={`sync-item-${index}`}\r\n\t\t\t\t\t\tprimary={`Sync ${successMsg}`}\r\n\t\t\t\t\t\tsecondary={`Last sync: ${lastSyncs[index]}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\tdisableSync || syncing[index]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={() => handleSync(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{syncing[index] ? (\r\n\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\tdisableShrink\r\n\t\t\t\t\t\t\t\t\tsize={28}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t`Sync ${successMsg}`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t),\r\n\t\t\t)}\r\n\t\t</List>\r\n\t);\r\n};\r\n","import { Divider, Stack } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { SettingRegionAPI } from \"./SettingRegions/SettingRegionAPI\";\r\nimport { SettingRegionIssueFilterPref } from \"./SettingRegions/SettingRegionIssueFilterPref\";\r\nimport { SettingRegionRepoFilterPref } from \"./SettingRegions/SettingRegionRepoFilterPref\";\r\nimport { SettingRegionSync } from \"./SettingRegions/SettingRegionSync\";\r\n\r\nexport const SettingsPage: FC = () => {\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpaths=\"~/settings\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Stack\r\n\t\t\t\tpaddingTop={2}\r\n\t\t\t\tpaddingX={2}\r\n\t\t\t\tspacing={1}\r\n\t\t\t\tdivider={<Divider variant=\"middle\" />}\r\n\t\t\t>\r\n\t\t\t\t<SettingRegionRepoFilterPref />\r\n\t\t\t\t<SettingRegionIssueFilterPref />\r\n\t\t\t\t<SettingRegionAPI />\r\n\t\t\t\t<SettingRegionSync />\r\n\t\t\t</Stack>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import {\r\n\talpha,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nconst themePalette = createTheme({\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t\tprimary: {\r\n\t\t\tmain: alpha(\"#00D3D0\", 0.7),\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#D68F3E\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: \"#1B1D2D\",\r\n\t\t\tpaper: \"#1B1D2D\",\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tprimary: alpha(\"#fff\", 0.67),\r\n\t\t\tsecondary: alpha(\"#fff\", 0.5),\r\n\t\t},\r\n\t},\r\n});\r\nconst themeComponent = createTheme({\r\n\tcomponents: {\r\n\t\tMuiBreadcrumbs: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\tol: {\r\n\t\t\t\t\tflexWrap: \"nowrap\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiCssBaseline: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\t\"html\": {\r\n\t\t\t\t\tbackgroundColor:\r\n\t\t\t\t\t\tthemePalette.palette.background,\r\n\t\t\t\t},\r\n\t\t\t\t\"*\": {\r\n\t\t\t\t\tscrollbarWidth: \"thin\",\r\n\t\t\t\t},\r\n\t\t\t\t\"pre\": {\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t},\r\n\t\t\t\t\"table\": {\r\n\t\t\t\t\tminWidth: \"max-content\",\r\n\t\t\t\t\tborderSpacing: \"1rem 0.5rem\",\r\n\t\t\t\t},\r\n\t\t\t\t\"a\": {\r\n\t\t\t\t\t\"transition\": \"color 0.3s ease\",\r\n\t\t\t\t\t\"color\": alpha(\r\n\t\t\t\t\t\tthemePalette.palette.primary.main,\r\n\t\t\t\t\t\t0.78,\r\n\t\t\t\t\t),\r\n\t\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\t\tcolor: alpha(\r\n\t\t\t\t\t\t\tthemePalette.palette.secondary.main,\r\n\t\t\t\t\t\t\t0.78,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const themeComposed = createTheme({\r\n\tpalette: themePalette.palette,\r\n\tcomponents: themeComponent.components,\r\n});\r\n","import {\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n} from \"@mui/material\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport {\r\n\tRouterProvider,\r\n\tcreateHashRouter,\r\n} from \"react-router-dom\";\r\nimport { ErrorBoundry } from \"~pages/ErrorBoundary\";\r\nimport {\r\n\tHome,\r\n\tloaderHome,\r\n} from \"~pages/HomePage\";\r\nimport {\r\n\tIssueDetailsPage,\r\n\tloaderIssueDetailsPage,\r\n} from \"~pages/IssueDetailsPage\";\r\nimport {\r\n\tIssueListPage,\r\n\tloaderIssueListPage,\r\n} from \"~pages/IssueListPage\";\r\nimport {\r\n\tRepoDetailsPage,\r\n\tloaderRepoDetailsPage,\r\n} from \"~pages/RepoDetailsPage\";\r\nimport {\r\n\tRepoListPage,\r\n\tloaderRepoListPage,\r\n} from \"~pages/RepoListPage\";\r\nimport { SettingsPage } from \"~pages/SettingsPage/SettingsPage\";\r\nimport { themeComposed } from \"./theme\";\r\n\r\nconst router = createHashRouter(\r\n\t[\r\n\t\t{\r\n\t\t\tindex: true,\r\n\t\t\telement: <Home />,\r\n\t\t\tloader: loaderHome,\r\n\t\t\terrorElement: <ErrorBoundry />,\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: \"/\",\r\n\t\t\terrorElement: <ErrorBoundry />,\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories\",\r\n\t\t\t\t\telement: <RepoListPage />,\r\n\t\t\t\t\tloader: loaderRepoListPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner/:repo\",\r\n\t\t\t\t\telement: <RepoDetailsPage />,\r\n\t\t\t\t\tloader: loaderRepoDetailsPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner/:repo/issues/:issueNumber\",\r\n\t\t\t\t\telement: <IssueDetailsPage />,\r\n\t\t\t\t\tloader: loaderIssueDetailsPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/issues\",\r\n\t\t\t\t\telement: <IssueListPage />,\r\n\t\t\t\t\tloader: loaderIssueListPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/settings\",\r\n\t\t\t\t\telement: <SettingsPage />,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\t{\r\n\t\tbasename: \"/\",\r\n\t},\r\n);\r\n\r\nexport const App = () => {\r\n\treturn (\r\n\t\t<ThemeProvider theme={themeComposed}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<SnackbarProvider\r\n\t\t\t\tpreventDuplicate\r\n\t\t\t\tmaxSnack={3}\r\n\t\t\t\tautoHideDuration={3500}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<RouterProvider router={router} />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n","import \"@fontsource/ibm-plex-serif/300.css\";\r\nimport \"@fontsource/ibm-plex-serif/400.css\";\r\nimport \"@fontsource/ibm-plex-serif/500.css\";\r\nimport \"@fontsource/ibm-plex-serif/700.css\";\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { App } from \"./App.tsx\";\r\n\r\nReactDOM.createRoot(\r\n\tdocument.getElementById(\"root\")!,\r\n).render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n);\r\n"],"names":["nav","WithAppBar","props","location","children","seconadaryAction","submit","useSubmit","drawerOpen","setDrawerOpen","useState","toggleDrawer","appBarRef","useRef","contentHeight","setContentHeight","useEffect","appBarHeight","redirectPath","path","Fragment","jsxs","Box","AppBar","Toolbar","jsx","IconButton","ListRounded","Divider","Drawer","CloseRounded","Typography","List","label","ListItem","ListItemButton","ListItemText","ErrorBoundry","status","statusText","useRouteError","Container","StyledBreadcrumbs","paths","breadcrumbsProps","typographyProps","paths_","Breadcrumbs","index","createElement","HomePage","getToken","token","getOctokit","Octokit","getRepos","pages","name","full_name","topics","created_at","updated_at","description","id","html_url","homepage","pushed_at","is_archived","is_private","getRepoReadMe","err","fullName","ocktokit","owner","repo","getRepoIssues","repoId","issue_number","title","state","locked","closed_at","body","user","getRepoIssueComment","issueNumber","issueId","dbPromise","openDB","db","oldVersion","repoStore","getCachedRepos","getCachedRepo","getCachedTopics","repos","uniqueTopics","topic","getCachedIssues","getCachedRepoIssues","repoFullName","getCachedRepoIssue","issues","issue","getCachedIssueComments","updateCachedRepos","req","cachedRepo","opened_at","repo_","updateCachedRepoIssues","cachedIssue","issue_","updateCachedRepoIssueComments","issueComments","comment","syncCachedRepos","onFailure","res","syncCachedRepoIssues","cachedRepos","syncCachedRepoIssueComments","cachedIssues","loaderHome","request","searchParams","topicParam","nameParam","topicOptions","matchSorter","rTopics","parseMarkdown","content","unified","remarkParse","remarkGfm","remarkMath","remarkRehype","rehypeSanitize","rehypeKatex","rehypeDocument","rehypeStringify","Markdown","emptyText","sx","rest","contentRef","innerHtml","timeSince","dateString","fallback","moment","normalizeDateString","toTimeStamp","timeAt","delta","METADATA_DEFINITIONS","capitalize","IssueDetailsPage","comments","useLoaderData","closeDrawer","ChevronLeftRounded","Stack","Paper","ClearRounded","render","loader","params","repoName","ISSUE_FILTER_PREF_STATE_KEY","ISSUE_FILTER_PREF_OWNER_TYPE_KEY","ISSUE_FILTER_STATE_OPTIONS","ISSUE_FILTER_OWNER_TYPE_OPTIONS","REPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY","REPO_FILTER_PREF_VISIBILITY_KEY","REPO_FILTER_PREF_STATUS_KEY","REPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS","REPO_FILTER_VISIBILITY_OPTIONS","REPO_FILTER_STATUS_OPTIONS","orderByString","a","b","a_","b_","orderByBoolean","orderByNumber","getRepoFilterPrefVisibility","data","setRepoFilterPrefVisibility","value","getRepoFilterPrefStatus","setRepoFilterPrefStatus","getRepoFilterPrefTopicMatchStrategy","setRepoFilterPrefTopicMatchStrategy","getIssueFilterPrefState","setIssueFilterPrefState","getIssueFilterPrefOwnerType","setIssueFilterPrefOwnerType","StyledTableHead","order","orderBy","onRequestSort","columnDefinition","createSortHandler","property","_","TableHead","TableRow","TableCell","TableSortLabel","StyledTableRow","item","StyledDataTable","orderingFn","items","setOrder","orderBy_","setOrderBy","handleRequestSort","items_","useMemo","orderFn","orderedItems_","TableContainer","Table","TableBody","StyledSelect","options","subheader","options_","Select","ListSubheader","MenuItem","StyledSelectMultiple","StyledTextField","onEnter","onChange","handleKeyUp","e","handleChange","TextField","COLUMN_DEFINITION","Link","getOrderingFn","WrappableListItem","text","IssueDataTable","repoOptions","title_","repoFullNames_","ownerType_","state_","setTitle","repoFullNames","ownerType","handleOwnerTypeChange","event","handleStateChange","handleRepoFullNamesChange","handleRepoFullNamesReset","handleTitleSubmit","filterOpen","setFilterOpen","toggleFilter","FilterListRounded","Collapse","IssueListPage","filterRepos","visibility","topicFilterMode","filterIssues","repo_full_name","repoFullNamesParam","toSearchParam","query","createSearchParams","REPO_METADATA_DEFINITIONS","RepoDetailsPage","tab","setTab","decodedReadme","Buffer","Tabs","Tab","RepoDataTable","topicOptions_","name_","topicMatchStrategy_","status_","topics_","visibility_","setName","topicMatchStrategy","handleNameSubmit","handleTopicMatchStrategyChange","handleStatusChange","handleVisibilityChange","handleTopicsChange","handleTopicsReset","RepoListPage","topicsParam","secondary","primary","SettingRegionAPI","enqueueSnackbar","useSnackbar","personalAccessToken","setPersonalAccessToken","handlePasswordChange","commitChanges","Button","SettingRegionIssueFilterPref","setOwnerType","setState","SettingRegionRepoFilterPref","mode","setMode","setVisibility","setStatus","handleVisiblityChange","SYNC_DETAILS","LAST_SYNC","SettingRegionSync","savedToken","syncing","setSyncing","lastSyncs","setLastSync","enqueueError","handleSync","prev","next","promise","successMsg","key","r","timestamp","disableSync","CircularProgress","SettingsPage","themePalette","createTheme","alpha","themeComponent","themeComposed","router","createHashRouter","Home","loaderRepoListPage","loaderRepoDetailsPage","loaderIssueDetailsPage","loaderIssueListPage","App","ThemeProvider","CssBaseline","SnackbarProvider","RouterProvider","ReactDOM","React"],"mappings":"y+LA2BA,MAAMA,GAAyC,CAC9C,CAAE,MAAO,IAAK,KAAM,GAAI,EACxB,CACC,MAAO,eACP,KAAM,eACP,EACA,CACC,MAAO,SACP,KAAM,SACP,EACA,CAAE,MAAO,WAAY,KAAM,WAAY,CACxC,EAOaC,EACZC,GACI,CACJ,KAAM,CAAE,SAAAC,EAAU,SAAAC,EAAU,iBAAAC,CAAA,EAC3BH,EACKI,EAASC,KACT,CAACC,EAAYC,CAAa,EAC/BC,WAAS,EAAK,EACTC,EAAe,IAAM,CAC1BF,EAAc,CAACD,CAAU,CAAA,EAEpBI,EAAYC,EAAA,OACjB,IAAA,EAEK,CAACC,EAAeC,CAAgB,EACrCL,WAAS,KAAK,EAEfM,EAAAA,UAAU,IAAM,CACf,GACCJ,IAAc,MACdA,EAAU,UAAY,KAEtB,OAED,MAAMK,EACLL,EAAU,QAAQ,sBAAA,EAChB,OAEHG,EACC,iBAAiBE,CAAY,KAAA,CAC9B,EACE,CAACL,CAAS,CAAC,EAER,MAAAM,EAAgBC,GAAiB,CACtCb,EAAO,CAAI,EAAA,CAAE,OAAQa,EAAM,OAAQ,MAAO,CAAA,EAG3C,cACEC,WACA,CAAA,SAAA,CAACC,EAAAA,KAAAC,EAAA,CAAI,SAAS,QACb,SAAA,CAAAD,EAAA,KAACE,GAAA,CACA,IAAKX,EACL,SAAS,WACT,QAAQ,YACR,UAAW,EAEX,SAAA,CAAAS,EAAA,KAACG,EAAA,CACA,QAAQ,QACR,GAAI,CACH,QAAS,OACT,cAAe,MACf,SAAU,SACV,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAASf,EACT,GAAI,CAAE,SAAU,CAAE,EAElB,eAACgB,GAAY,EAAA,CAAA,CACd,EACCxB,EACAE,CAAA,CAAA,CACF,EACAoB,EAAA,IAACG,EAAA,CACA,SAAQ,GACR,QAAQ,WAAA,CACT,CAAA,CAAA,CACD,EACAH,EAAA,IAACH,EAAA,CACA,OAAQR,EACR,SAAS,OAER,SAAAV,CAAA,CACF,CAAA,EACD,EACAiB,EAAA,KAACQ,GAAA,CACA,KAAMrB,EACN,QAASG,EACT,WAAY,CACX,OAAQ,GACR,QAAS,WACT,UAAW,EACX,GAAI,CACH,MAAO,IACP,OAAQ,OACR,eAAgB,EAChB,gBAAiB,EACjB,kBAAmB,CACpB,CACD,EAEA,SAAA,CAAAU,EAAA,KAACG,EAAA,CACA,QAAQ,QACR,GAAI,CACH,QAAS,OACT,cAAe,MACf,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAAAC,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAASf,EAET,eAACmB,GAAa,EAAA,CAAA,CACf,EACCL,EAAA,IAAAM,EAAA,CAAW,WAAW,OAAO,SAE9B,aAAA,CAAA,CAAA,CACD,QACCH,EAAQ,EAAA,EACTH,EAAA,IAACO,EAAA,CACA,eAAc,GACd,MAAK,GACL,GAAI,CACH,UAAW,aACX,WAAY,MACb,EAEC,YAAI,IAAI,CAAC,CAAE,MAAAC,EAAO,KAAAd,KAClBM,EAAA,IAACS,EAAA,CACA,eAAc,GAGd,SAAAT,EAAA,IAACU,GAAA,CACA,QAAS,IAAMjB,EAAaC,CAAI,EAEhC,SAAAM,EAAAA,IAACW,GACC,SACFH,CAAA,CAAA,CAAA,CACD,CAAA,EARKd,CAAA,CAUN,CAAA,CACF,CAAA,CAAA,CACD,CACD,CAAA,CAAA,CAEF,EChLakB,GAAmB,IAAM,CACrC,KAAM,CAAE,OAAAC,EAAQ,WAAAC,CAAW,EAC1BC,GAAc,EAKd,OAAAf,EAAAA,IAACxB,EAAW,CAAA,SAAUqC,EACrB,SAAAb,EAAAA,IAACgB,GAAU,CAAA,SAAS,KACnB,SAAApB,EAAA,KAACC,EAAI,CAAA,QAAS,EACb,SAAA,CAAAG,EAAA,IAACM,EAAA,CACA,UAAU,KACV,QAAQ,KAEP,SAAAO,CAAA,CACF,EACAb,EAAA,IAACM,EAAA,CACA,UAAS,GACT,UAAU,IACV,QAAQ,QAEP,SAAAQ,CAAA,CACF,CAAA,EACD,EACD,CACD,CAAA,CAEF,ECvBaG,EAERxC,GAAU,CACR,KAAA,CACL,MAAAyC,EACA,iBAAAC,EACA,gBAAAC,CACG,EAAA3C,EAEE4C,EAASH,EAAM,MAAM,GAAG,EAG7B,OAAAlB,MAACsB,IAAa,GAAGH,EACf,WAAO,IAAI,CAACzB,EAAM6B,IAClBC,EAAA,cAAClB,EAAA,CACC,GAAGc,EACJ,IAAK,GAAGG,CAAK,IAAI7B,CAAI,GACrB,WAAW,QAAA,EAEVA,CAEF,CAAA,CACF,CAAA,CAEF,EChCa+B,GAAe,IAE1BzB,EAAA,IAACxB,EAAA,CACA,SAAUwB,EAAAA,IAACiB,EAAkB,CAAA,MAAM,GAAI,CAAA,EAEvC,SAAAjB,EAAAA,IAACM,GAAW,SAEZ,sBAAA,CAAA,CAAA,CAAA,ECLGoB,GAAW,IAAM,CACtB,MAAMC,EAAQ,aAAa,QAC1B,uBAAA,EAED,OAAIA,IAAU,KACN,KAEDA,CACR,EAEMC,EAAa,IAAM,CACxB,MAAMD,EAAQD,KACd,OAAO,IAAIG,GAAQ,CAAE,KAAMF,CAAO,CAAA,CACnC,EAcaG,GAAW,SAAY,CAE7B,MAAAC,EAAQ,MADEH,IACY,SAC3B,iBAAA,EA2CM,OAzCqB,MAAM,QAAQ,IACzCG,EAAM,IACL,MAAO,CACN,KAAAC,EACA,UAAAC,EACA,OAAAC,EACA,WAAAC,EACA,WAAAC,EACA,YAAAC,EACA,GAAAC,EACA,SAAAC,EACA,SAAAC,EACA,UAAAC,EACA,SAAUC,EACV,QAASC,CAAA,KACH,CACN,GAAAL,EACA,UAAW,KACX,SAAAC,EACA,SAAAC,EACA,UAAAC,EACA,KAAAT,EACA,UAAAC,EACA,YAAAI,EACA,OAAAH,EACA,WAAAC,EACA,WAAAC,EACA,YAAAM,EACA,WAAAC,EACA,OAAQ,MAAMC,GACbX,CAAA,EACC,MAAOY,GAAQ,CACZ,GAAAA,EAAI,SAAW,IAGb,MAAAA,CAAA,CACN,CAAA,EAEH,CAAA,CAIF,EAEMD,GAAgB,MACrBE,GACI,CACJ,MAAMC,EAAWnB,IACX,CAACoB,EAAOC,CAAI,EAAIH,EAAS,MAAM,GAAG,EAQxC,OAPY,MAAMC,EAAS,QAC1B,mCACA,CACC,MAAAC,EACA,KAAAC,CACD,CAAA,GAEU,KAAK,OACjB,EAEaC,GAAgB,MAC5BJ,EACAK,IACI,CACJ,MAAMJ,EAAWnB,IACX,CAACoB,EAAOC,CAAI,EAAIH,EAAS,MAAM,GAAG,EAwCjC,OAvCU,MAAMC,EAAS,SAC/B,mCACA,CACC,MAAAC,EACA,KAAAC,EACA,MAAO,KACR,CAAA,GAE0C,IAC1C,CAAC,CACA,GAAAX,EACA,SAAAC,EACA,OAAQa,EACR,MAAAC,EACA,MAAAC,EACA,OAAAC,EACA,WAAApB,EACA,WAAAC,EACA,UAAAoB,EACA,KAAAC,EACA,KAAAC,CAAA,KACM,CACN,UAAW,GACX,WACCA,IAAS,KAAO,KAAOA,EAAK,KAC7B,QAASP,EACT,eAAgBL,EAChB,GAAAR,EACA,SAAAC,EACA,aAAAa,EACA,MAAAC,EACA,MAAAC,EACA,OAAAC,EACA,WAAApB,EACA,WAAAC,EACA,UAAAoB,EACA,KAAAC,CAAA,EACD,CAGF,EAEaE,GAAsB,MAClCb,EACAc,EACAC,IACI,CACJ,MAAMd,EAAWnB,IACX,CAACoB,EAAOC,CAAI,EAAIH,EAAS,MAAM,GAAG,EA0BjC,OAzBU,MAAMC,EAAS,SAC/B,2DACA,CACC,MAAAC,EACA,KAAAC,EACA,aAAcW,CACf,CAAA,GAGS,IACR,CAAC,CACA,GAAAtB,EACA,SAAAC,EACA,WAAAJ,EACA,WAAAC,EACA,KAAAqB,CAAA,KACM,CACN,SAAUI,EACV,SAAAtB,EACA,GAAAD,EACA,WAAAH,EACA,WAAAC,EACA,KAAAqB,CAAA,EACD,CAGH,ECnJaK,EAAYC,GACxB,UACA,EACA,CACC,QAAQC,EAAIC,EAAY,CACvB,GAAIA,GAAc,EAAG,CACpBD,EAAG,kBAAkB,OAAO,EAC5BA,EAAG,kBAAkB,QAAQ,EAC7BA,EAAG,kBAAkB,eAAe,EACpC,MAAME,EAAYF,EAAG,kBACpB,QACA,CACC,QAAS,KACT,cAAe,EAChB,CAAA,EAESE,EAAA,YACT,eACA,YACA,CACC,OAAQ,GACR,WAAY,EACb,CAAA,EAESA,EAAA,YAAY,QAAS,KAAM,CACpC,OAAQ,GACR,WAAY,EAAA,CACZ,EACkBF,EAAG,kBACrB,SACA,CACC,QAAS,KACT,cAAe,EAChB,CAAA,EAEU,YACV,aACA,UACA,CAAE,WAAY,GAAM,OAAQ,EAAM,CAAA,EAGlCA,EAAG,kBAAkB,gBAAiB,CACrC,QAAS,KACT,cAAe,EAAA,CACf,EACgB,YACjB,cACA,WACA,CAAE,WAAY,GAAM,OAAQ,EAAM,CAAA,CAEpC,CACD,CACD,CACD,ECzEaG,EAAiB,UACrB,MAAML,GAAW,OAAO,OAAO,EAG3BM,GAAgB,MAC5BtB,IAEQ,MAAMgB,GAAW,aACxB,QACA,eACAhB,CAAA,EAIWuB,GAAkB,SAAY,CACpC,MAAAC,EAAQ,MAAMH,IACdI,MAAmB,IACzB,UAAWtB,KAAQqB,EACd,GAAArB,EAAK,SAAW,OAGT,UAAAuB,KAASvB,EAAK,OACxBsB,EAAa,IAAIC,CAAK,EAGlB,MAAAtC,EAAS,CAAC,GAAGqC,CAAY,EAC/B,OAAArC,EAAO,KAAK,EACLA,CACR,EAEauC,GAAkB,SACvBX,EAAU,KAAME,GACtBA,EAAG,OAAO,QAAQ,CAAA,EAIPU,GAAsB,MAClCC,GACI,CACE,MAAA1B,EAAO,MAAMmB,GAAcO,CAAY,EAC7C,OAAI1B,IAAS,OACL,IAEA,MAAMa,GAAW,gBACxB,SACA,aACAb,EAAK,EAAA,CAEP,EAEa2B,GAAqB,MACjCD,EACAf,IACI,CACJ,MAAMiB,EAAS,MAAMH,GACpBC,CAAA,EAED,UAAWG,KAASD,EACf,GAAAC,EAAM,eAAiBlB,EACnB,OAAAkB,CAIV,EAEaC,GAAyB,MACrClB,IAEQ,MAAMC,GAAW,gBACxB,gBACA,cACAD,CAAA,EAIImB,GAAoB,MACzBV,GACI,CACJ,MAAMN,EAAK,MAAMF,EACXmB,EAAMX,EAAM,IAAI,MAAOrB,GAAS,CAC/B,MAAAiC,EAAa,MAAMlB,EAAG,IAC3B,QACAf,EAAK,SAAA,EAEN,IAAIkC,EAA2B,KAC3BD,IAAe,SAClBC,EAAYD,EAAW,WAExB,MAAME,EAAQ,CAAE,GAAGnC,EAAM,UAAAkC,CAAU,EAC5B,OAAAnB,EAAG,IAAI,QAASoB,CAAK,CAAA,CAC5B,EAEM,OADK,MAAM,QAAQ,IAAIH,CAAG,CAElC,EAEMI,GAAyB,MAC9BR,GACI,CACJ,MAAMb,EAAK,MAAMF,EACXmB,EAAMJ,EAAO,IAAI,MAAOC,GAAU,CACjC,MAAAQ,EAAc,MAAMtB,EAAG,IAC5B,SACAc,EAAM,EAAA,EAEP,IAAIK,EAAoB,GACpBG,IAAgB,SACnBH,EAAYG,EAAY,WAEzB,MAAMC,EAAS,CAAE,GAAGT,EAAO,UAAAK,CAAU,EAC9B,OAAAnB,EAAG,IAAI,SAAUuB,CAAM,CAAA,CAC9B,EAEM,OADK,MAAM,QAAQ,IAAIN,CAAG,CAElC,EAEMO,GAAgC,MACrCC,GACI,CACJ,MAAMzB,EAAK,MAAMF,EACjB,OAAO,MAAM,QAAQ,IACpB2B,EAAc,IAAKC,GAClB1B,EAAG,IAAI,gBAAiB0B,CAAO,CAChC,CAAA,CAEF,EAEaC,GAAkB,MAC9BC,GAEO,MAAM9D,KAAW,KACtB+D,IACAb,GAAkBa,CAAG,EACd,CAAC,EAAI,GAEZhD,IACA+C,EAAU/C,CAAG,EACN,CAAC,EAAK,EACd,EAGWiD,GAAuB,MACnCF,GACI,CACE,MAAAG,EAAc,MAAM5B,IAC1B,OAAO,MAAM,QAAQ,IACpB4B,EAAY,IAAI,MAAO9C,GACf,MAAMC,GACZD,EAAK,UACLA,EAAK,EAAA,EACJ,KACA4C,IACAR,GAAuBQ,CAAG,EACnB,IAEPhD,IACA+C,EAAU/C,CAAG,EACN,GACR,CAED,CAAA,CAEH,EACamD,GAA8B,MAC1CJ,GACI,CACE,MAAAK,EAAe,MAAMxB,KAC3B,OAAO,MAAM,QAAQ,IACpBwB,EAAa,IAAI,MAAOnB,GAChB,MAAMnB,GACZmB,EAAM,eACNA,EAAM,aACNA,EAAM,EAAA,EACL,KACAe,IACAL,GAA8BK,CAAG,EAC1B,IAEPhD,IACA+C,EAAU/C,CAAG,EACN,GACR,CAED,CAAA,CAEH,ECrLaqD,GAA6B,MAAO,CAChD,QAAAC,CACD,IAA2B,CAC1B,MAAMC,EAAe,IAAI,IAAID,EAAQ,GAAG,EACtC,aAEIE,EAAaD,EAAa,IAAI,QAAQ,EAC5C,IAAIlE,EAAmB,CAAA,EACnBmE,IAAe,MAAQA,IAAe,KAChCnE,EAAAmE,EACP,MAAM,GAAG,EACT,OAAQ7B,GAAUA,EAAM,OAAS,CAAC,GAG/B,MAAA8B,EAAYF,EAAa,IAAI,MAAM,EACzC,IAAIpE,EAAO,GACPsE,IAAc,OACVtE,EAAAsE,GAGR,SAAS,MAAQ,eACX,MAAAC,EAAe,MAAMlC,KAC3B,IAAIC,EACF,MAAMH,KACN,MAAMrC,GAAS,EACT,OAAAwC,EAAAkC,GAAYlC,EAAOtC,EAAM,CAChC,KAAM,CAAC,WAAW,CAAA,CAClB,EACGE,EAAO,OAAS,IACXoC,EAAAA,EAAM,OAAQrB,GAAS,CACxB,KAAA,CAAE,OAAQwD,CAAY,EAAAxD,EAC5B,OAAIwD,IAAY,OACR,GAEDvE,EAAO,MAAOsC,GACpBiC,EAAQ,SAASjC,CAAK,CAAA,CACvB,CACA,GAGK,CACN,KAAAxC,EACA,aAAAuE,EACA,MAAAjC,EACA,OAAApC,CAAA,CAEF,ECnDawE,GACZC,GAEOC,GAAA,EACL,IAAIC,GAAa,CACjB,SAAU,EAAA,CACV,EACA,IAAIC,EAAS,EACb,IAAIC,EAAU,EACd,IAAIC,EAAY,EAChB,IAAIC,EAAc,EAClB,IAAIC,EAAW,EACf,IAAIC,GAAgB,CACpB,IAAK,8DAAA,CACL,EACA,IAAIC,EAAe,EACnB,YAAYT,EAAQ,UAAW,CAAA,EAC/B,SAAA,EACA,QACA,SACA,mEACD,EACC,QAAQ,WAAY,gBAAgB,EClB1BU,GACZ5I,GACI,CACE,KAAA,CACL,gBAAiBkI,EACjB,UAAAW,EACA,GAAAC,EACA,GAAGC,CACA,EAAA/I,EAEEgJ,EACLrI,SAA8B,IAAI,EAEnCG,OAAAA,EAAAA,UAAU,IAAM,CAEd,GACAoH,GAAY,MACZc,IAAe,MACfA,EAAW,UAAY,KAEvB,OAEK,MAAAC,EAAYhB,GAAcC,CAAO,EACvCc,EAAW,QAAQ,UAAYC,CAAA,EAC7B,CAACf,CAAO,CAAC,EAGX3G,EAAA,IAACM,EAAA,CACC,GAAGkH,EACJ,IAAKC,EACL,UAAU,MACV,QAAQ,QACR,MAAM,OACN,GAAI,CACH,GAAGF,EACH,UAAW,OACX,WAAY,iBACZ,UAAW,aACX,SAAU,YACX,EAEC,SAAAD,CAAA,CAAA,CAGJ,ECxDaK,GAAY,CACxBC,EACAC,EAAmB,MAIlBD,GAAe,MACfA,IAAe,GAERC,EAGDC,GAAOF,CAAU,EAAE,UAGdG,EAAsB,CAClCH,EACAC,EAAmB,MAIlBD,GAAe,MACfA,IAAe,GAERC,EAGDC,GAAOF,CAAU,EAAE,OACzB,cAAA,EAIWI,EACZJ,GACI,CACE,MAAAK,EAASF,EAAoBH,CAAU,EACvCM,EAAQP,GAAUC,CAAU,EAC3B,MAAA,GAAGK,CAAM,KAAKC,CAAK,GAC3B,ECPMC,GAGA,CACL,CACC,MAAO,QACP,OAASrD,GAAUA,EAAM,KAC1B,EACA,CACC,MAAO,QACP,OAASA,GAAUsD,GAAWtD,EAAM,KAAK,CAC1C,EACA,CACC,MAAO,aACP,OAASA,GACRA,EAAM,YAAc,SACtB,EACA,CACC,MAAO,gBACP,OAASA,GACRA,EAAM,WACHkD,EAAYlD,EAAM,UAAU,EAC5B,OACL,EACA,CACC,MAAO,SACP,OAASA,GACRA,EAAM,UACHkD,EAAYlD,EAAM,SAAS,EAC3B,YACL,EACA,CACC,MAAO,UACP,OAASA,GACRA,EAAM,WACHkD,EAAYlD,EAAM,UAAU,EAC5B,SACL,EACA,CACC,MAAO,QACP,OAASA,GACR9E,EAAA,IAACM,EAAA,CACA,UAAU,IACV,KAAMwE,EAAM,SACZ,OAAO,SACP,SAAA,cAAA,CAED,CAEF,CACD,EAEauD,GAAuB,IAAM,CACzC,KAAM,CAAE,MAAAvD,EAAO,SAAAwD,CAAS,EACvBC,EAAc,EAET,CAACxJ,EAAYC,CAAa,EAC/BC,WAAS,EAAK,EAETC,EAAe,IAAM,CAC1BF,EAAc,CAACD,CAAU,CAAA,EAEpByJ,EAAc,IAAM,CACzBxJ,EAAc,EAAK,CAAA,EAGpB,cACEW,WACA,CAAA,SAAA,CAAAK,EAAA,IAACxB,EAAA,CACA,SACCwB,EAAA,IAACiB,EAAA,CACA,MAAO,kBAAkB6D,EAAM,cAAc,WAAWA,EAAM,YAAY,GAC1E,iBAAkB,CACjB,GAAI,CACH,SAAU,OACV,SAAU,CAAE,GAAI,EAAG,GAAI,CAAE,CAC1B,CACD,CAAA,CACD,EAED,iBACC9E,EAAA,IAACC,EAAA,CACA,QAASf,EACT,KAAK,QACL,cAAa,GAEb,eAACuJ,GAAmB,EAAA,CAAA,CACrB,EAGD,SAAAzI,EAAA,IAACgB,GAAU,CAAA,SAAS,KACnB,SAAApB,EAAA,KAAC8I,EAAA,CACA,QAAS,EACT,QAAS,EACT,QACC1I,EAAA,IAACG,EAAA,CACA,SAAQ,GACR,QAAQ,WAAA,CACT,EAGD,SAAA,CAAAH,EAAA,IAAC2I,GAAA,CACA,QAAQ,WACR,GAAI,CAAE,QAAS,CAAE,EAEjB,SAAA3I,EAAA,IAACqH,GAAA,CACA,gBACCvC,EAAM,MAAQ,OAEf,UAAU,yDAAA,CACX,CAAA,CACD,EACCwD,EAAS,IAAK5C,UACb7F,EACA,CAAA,SAAA,CAAAD,EAAA,KAACW,EAAA,CACA,MAAK,GACL,eAAc,GAEd,SAAA,CAACP,EAAAA,IAAAS,EAAA,CAAS,eAAc,GACvB,SAAAT,EAAA,IAACW,EAAA,CACA,QAAQ,UACR,WACEoH,EACArC,EAAQ,UAET,EAAA,UAAA,CAAA,EAGH,QACCjF,EACA,CAAA,SAAAT,EAAA,IAACW,EAAA,CACA,QAAQ,eACR,WACEoH,EACArC,EAAQ,UAET,EAAA,QAAA,CAAA,EAGH,CAAA,CAAA,CACD,EACA1F,EAAA,IAACqH,GAAA,CACA,gBACC3B,EAAQ,MAAQ,OAEjB,UAAU,yDAAA,CACX,CAAA,CAAA,EAjCS,WAAWA,EAAQ,EAAE,EAkC/B,CACA,CAAA,CAAA,CAAA,EAEH,CAAA,CACD,EACA9F,EAAA,KAACQ,GAAA,CACA,UAAW,EACX,OAAO,QACP,QAAQ,YACR,KAAMrB,EACN,QAASyJ,EAET,SAAA,CAAA5I,EAAA,KAACG,EAAA,CACA,QAAQ,QACR,GAAI,CACH,QAAS,OACT,cAAe,MACf,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAACC,EAAA,IAAAM,EAAA,CAAW,WAAW,OAAO,SAE9B,WAAA,EACAN,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAASuI,EAET,eAACI,EAAa,EAAA,CAAA,CACf,CAAA,CAAA,CACD,EACA5I,EAAA,IAACG,EAAA,CACA,SAAQ,GACR,QAAQ,WAAA,CACT,EACAH,EAAA,IAACO,EAAA,CACA,eAAc,GACd,MAAK,GAEJ,SAAqB4H,GAAA,IACrB,CAAC,CAAE,MAAA3H,EAAO,OAAAqI,CAAO,UACfpI,EACA,CAAA,SAAAT,EAAA,IAACW,EAAA,CACA,UAAWkI,EAAO/D,CAAK,EAEtB,SAAAtE,CAAA,IAJYA,CAMf,CAEF,CAAA,CACD,CAAA,CAAA,CACD,CACD,CAAA,CAAA,CAEF,EC3NasI,GAAyB,MAAO,CAC5C,OAAAC,CACD,IAAM,CACL,MAAM/F,EAAQ+F,EAAO,MACfC,EAAWD,EAAO,KAClBnF,EAAcmF,EAAO,YAC3B,GACC/F,IAAU,QACVgG,IAAa,QACbpF,IAAgB,OAEV,MAAA,IAAI,SAAS,GAAI,CACtB,OAAQ,IACR,WAAY,cAAA,CACZ,EAEF,GACC,CAAC,OAAO,cACP,OAAO,SAASA,CAAW,CAAA,EAGtB,MAAA,IAAI,SAAS,GAAI,CACtB,OAAQ,IACR,WAAY,cAAA,CACZ,EAGF,MAAMd,EAAW,GAAGE,CAAK,IAAIgG,CAAQ,GAC/BlE,EAAQ,MAAMF,GACnB9B,EACA,OAAO,SAASc,CAAW,CAAA,EAE5B,GAAIkB,IAAU,OACP,MAAA,IAAI,SAAS,YAAa,CAC/B,OAAQ,IACR,WACC,2CAAA,CACD,EAEF,MAAMd,EAAK,MAAMF,EACXqB,EAAY,IAAI,KACrB,KAAK,IAAI,GACR,YAAY,EACRD,EAAa,MAAMlB,EAAG,IAC3B,QACAlB,CAAA,EAEK,aAAAkB,EAAG,IAAI,QAAS,CACrB,GAAGkB,EACH,UAAAC,CAAA,CACA,EACK,MAAAnB,EAAG,IAAI,SAAU,CACtB,GAAGc,EACH,UAAAK,CAAA,CACA,EAED,SAAS,MAAQL,EAAM,MACQ,CAC9B,MAAAA,EACA,SAAU,MAAMC,GACfD,EAAM,EACP,CAAA,CAIF,EC9EamE,GACZ,0BAEYC,GACZ,+BAEYC,GACZ,CACC,CACC,MAAO,MACP,MAAO,KACR,EACA,CACC,MAAO,OACP,MAAO,MACR,EACA,CACC,MAAO,SACP,MAAO,QACR,CACD,EAEYC,GACZ,CACC,CACC,MAAO,MACP,MAAO,KACR,EACA,CACC,MAAO,MACP,MAAO,KACR,EACA,CACC,MAAO,OACP,MAAO,MACR,CACD,ECpCYC,GACZ,wCACYC,GACZ,8BACYC,GACZ,0BAEYC,GACZ,CACC,CACC,MAAO,YACP,MAAO,WACR,EACA,CACC,MAAO,YACP,MAAO,WACR,CACD,EAEYC,GACZ,CACC,CACC,MAAO,MACP,MAAO,KACR,EACA,CACC,MAAO,UACP,MAAO,SACR,EACA,CACC,MAAO,SACP,MAAO,QACR,CACD,EAEYC,GACZ,CACC,CACC,MAAO,MACP,MAAO,KACR,EACA,CACC,MAAO,SACP,MAAO,QACR,EACA,CACC,MAAO,WACP,MAAO,UACR,CACD,ECnDYC,GAAgB,CAC5BC,EACAC,IACY,CAGZ,MAAMC,EAAKF,GAAK,GACVG,EAAKF,GAAK,GACZ,MAAA,CAACC,GAAMC,EACH,EAEJ,CAACD,GAAM,CAACC,EACJ,EAEJD,GAAM,CAACC,EACH,GAEDF,EAAG,cAAcD,CAAE,CAC3B,EAEaI,GAAiB,CAC7BJ,EACAC,IACI,CACE,MAAAC,EAAK,EAAQF,EACbG,EAAK,EAAQF,EACnB,OAAIC,IAAOC,EACH,EAEJD,GAAM,CAACC,EACH,GAED,CACR,EAEaE,GAAgB,CAC5BL,EACAC,IACI,CACJ,MAAMC,EAAKF,GAAK,GACVG,EAAKF,GAAK,GACZ,MAAA,CAACC,GAAMC,EACH,EAEJ,CAACD,GAAM,CAACC,EACJ,EAEJD,GAAM,CAACC,EACH,GAGDF,EAAKD,CACb,EC1CaM,GACZ,IAAc,CACb,MAAMC,EAAO,aAAa,QACzBb,EAAA,EAED,OAAIa,IAAS,KACLA,EAED,KACR,EACYC,GACZC,GACI,CACS,aAAA,QACZf,GACAe,CAAA,CAEF,EACaC,GACZ,IAAc,CACb,MAAMH,EAAO,aAAa,QACzBZ,EAAA,EAED,OAAIY,IAAS,KACLA,EAED,KACR,EACYI,GACZF,GACI,CACS,aAAA,QACZd,GACAc,CAAA,CAEF,EACaG,GACZ,IAAM,CACL,MAAML,EAAO,aAAa,QACzBd,EAAA,EAED,OAAIc,IAAS,KACLA,EAED,WACR,EACYM,GACXJ,GAAkB,CACL,aAAA,QACZhB,GACAgB,CAAA,CAEF,EAGYK,EACZ,IAAc,CACb,MAAMP,EAAO,aAAa,QACzBlB,EAAA,EAED,OAAIkB,IAAS,KACLA,EAED,KACR,EACYQ,GACZN,GACI,CACS,aAAA,QACZpB,GACAoB,CAAA,CAEF,EACaO,EACZ,IAAc,CACb,MAAMT,EAAO,aAAa,QACzB,8BAAA,EAED,OAAIA,IAAS,KACLA,EAED,MACR,EACYU,GACZR,GACI,CACS,aAAA,QACZnB,GACAmB,CAAA,CAEF,ECxEMS,GACLrM,GACI,CACE,KAAA,CACL,MAAAsM,EACA,QAAAC,EACA,cAAAC,EACA,iBAAAC,CACG,EAAAzM,EAEE0M,EACJC,GACAC,GAA2B,CAC3BJ,EAAcG,CAAQ,CAAA,EAGxB,OACEpL,EAAA,IAAAsL,GAAA,CACA,SAACtL,EAAA,IAAAuL,GAAA,CACC,SAAiBL,EAAA,IACjB,CAAC,CAAE,GAAA5I,EAAI,MAAA9B,GAASe,IACfvB,EAAA,IAACwL,GAAA,CAEA,cACCR,IAAY1I,EAAKyI,EAAQ,OAG1B,SAAA/K,EAAA,IAACyL,GAAA,CACA,OAAQT,IAAY1I,EACpB,UACC0I,IAAY1I,EAAKyI,EAAQ,MAE1B,QAASI,EAAkB7I,CAAE,EAE5B,SAAA9B,CAAA,CACF,CAAA,EAbK,QAAQe,CAAK,EAcnB,CAAA,CAGH,CAAA,CACD,CAAA,CAEF,EAMMmK,GACLjN,GACI,CACE,KAAA,CAAE,KAAAkN,EAAM,iBAAAT,CAAqB,EAAAzM,EAGlC,OAAAuB,EAAA,IAACuL,IACC,SAAiBL,EAAA,IACjB,CAAC,CAAE,OAAArC,CAAO,EAAGtH,IACZvB,EAAA,IAACwL,GACC,CAAA,SAAA3C,EAAO8C,CAAI,CAAA,EADG,aAAapK,CAAK,EAElC,CAGH,CAAA,CAAA,CAEF,EAUaqK,GACZnN,GACI,CACE,KAAA,CACL,WAAAoN,EACA,MAAAC,EACA,iBAAAZ,EACA,eAAgBF,CACb,EAAAvM,EAEE,CAACsM,EAAOgB,CAAQ,EAAI9M,WAExB,MAAM,EACF,CAAC+M,EAAUC,CAAU,EAC1BhN,WAAS+L,CAAO,EAEXkB,EACLd,GACI,CAGKW,EADRC,IAAaZ,GAAYL,IAAU,MACnB,OAAS,KAAK,EAC/BkB,EAAWb,CAAQ,CAAA,EAGde,EAASC,EAAAA,QAAQ,IAAM,CACtB,MAAAC,EAESR,EAAWG,CAAQ,EAElC,GAAIK,IAAY,OACR,OAAAP,EAEF,MAAAQ,EAAgB,CAAC,GAAGR,CAAK,EAC/B,OAAAQ,EAAc,KAAKD,CAAO,EACtBtB,IAAU,OACbuB,EAAc,QAAQ,EAEhBA,CACL,EAAA,CAACvB,EAAOiB,EAAUF,CAAK,CAAC,EAG1B,OAAA9L,EAAAA,IAACuM,GACA,CAAA,SAAA3M,EAAAA,KAAC4M,GACA,CAAA,SAAA,CAAAxM,EAAA,IAAC8K,GAAA,CACA,iBAAAI,EACA,cAAegB,EACf,MAAAnB,EACA,QAASiB,CAAA,CACV,QACCS,GACC,CAAA,SAAAN,EAAO,IAAI,CAACR,EAAMpK,IAClBvB,EAAA,IAAC0L,GAAA,CAEA,KAAAC,EACA,iBAAAT,CAAA,EAFK,kBAAkB3J,CAAK,EAI7B,CAAA,EACF,CAAA,CACD,CAAA,CACD,CAAA,CAEF,ECxJamL,EAERjO,GAAU,CACd,KAAM,CAAE,QAAAkO,EAAS,UAAAC,EAAW,GAAGpF,GAAS/I,EAClCoO,EAAWF,GAAW,GAE3B,OAAA/M,EAAA,KAACkN,GAAQ,CAAA,GAAGtF,EACV,SAAA,CAAAoF,IAAc,IACdA,IAAc,cACZG,EAAc,CAAA,cAAa,GAC1B,SACFH,CAAA,CAAA,EAEDC,EAAS,IAAI,CAAC,CAAE,MAAAxC,EAAO,MAAA7J,CAAA,EAASe,IAChCvB,EAAA,IAACgN,GAAA,CACA,cAAa,GAEb,MAAA3C,EAEC,SAAA7J,CAAA,EAHI,GAAG6J,CAAK,IAAI9I,CAAK,EAAA,CAKvB,CACF,CAAA,CAAA,CAEF,ECrBa0L,GAERxO,GAAU,CACd,KAAM,CAAE,QAAAkO,EAAS,UAAAC,EAAW,GAAGpF,GAAS/I,EAClCoO,EAAWF,GAAW,GAE3B,OAAA/M,EAAA,KAACkN,GAAA,CACC,GAAGtF,EACJ,SAAQ,GAEP,SAAA,CAAAoF,IAAc,IACdA,IAAc,cACZG,EAAc,CAAA,cAAa,GAC1B,SACFH,CAAA,CAAA,EAEDC,EAAS,IAAI,CAAC,CAAE,MAAAxC,EAAO,MAAA7J,CAAA,EAASe,IAChCvB,EAAA,IAACgN,GAAA,CACA,cAAa,GAEb,MAAA3C,EAEC,SAAA7J,CAAA,EAHI,GAAG6J,CAAK,IAAI9I,CAAK,EAAA,CAKvB,CAAA,CAAA,CAAA,CAGJ,ECzBa2L,GAERzO,GAAU,CACd,KAAM,CAAE,QAAA0O,EAAS,SAAAC,EAAU,GAAG5F,GAAS/I,EAEjC4O,EACLC,GACI,CACJ,GACCA,EAAE,MAAQ,SACVH,IAAY,OACX,CACD,QAAQ,IAAI,SAAS,EACbA,IACR,MACD,CAAA,EAEKI,EACLD,GAGI,CACAF,IAAa,QAChBA,EAASE,EAAE,OAAO,MAAM,UAAW,CAAA,CACpC,EAIA,OAAAtN,EAAA,IAACwN,GAAA,CACC,GAAGhG,EACJ,QAAS6F,EACT,SAAUE,CAAA,CAAA,CAGb,ECJME,GAAgC,CACrC,CACC,GAAI,eACJ,MAAO,eACP,OAAS3I,GAAUA,EAAM,YAC1B,EACA,CACC,GAAI,QACJ,MAAO,QACP,OAASA,GACR9E,EAAA,IAACM,EAAA,CACA,UAAWoN,EACX,GAAI,CACH,SAAU,iBAAiB5I,EAAM,cAAc,WAAWA,EAAM,YAAY,EAC7E,EAEC,SAAMA,EAAA,KAAA,CACR,CAEF,EACA,CACC,GAAI,iBACJ,MAAO,aACP,OAASA,GACR9E,EAAA,IAACM,EAAA,CACA,UAAWoN,EACX,GAAI,CACH,SAAU,iBAAiB5I,EAAM,cAAc,EAChD,EAEC,SAAMA,EAAA,cAAA,CACR,CAEF,EACA,CACC,GAAI,YACJ,MAAO,cACP,OAASA,GACRiD,EACCjD,EAAM,UACN,OACD,CACF,EACA,CACC,GAAI,aACJ,MAAO,OACP,OAASA,GAAUA,EAAM,UAC1B,EACA,CACC,GAAI,QACJ,MAAO,QACP,OAASA,GAAUsD,GAAWtD,EAAM,KAAK,CAC1C,EACA,CACC,GAAI,aACJ,MAAO,eACP,OAASA,GACRiD,EACCjD,EAAM,WACN,OACD,CACF,EACA,CACC,GAAI,aACJ,MAAO,UACP,OAASA,GACRiD,EACCjD,EAAM,WACN,SACD,CACF,CACD,EAEM6I,GACLvC,GACI,CACA,IAAAiB,EAMJ,OAAQjB,EAAU,CACjB,IAAK,eACMiB,EAAA,CAACzC,EAAGC,IACNI,GACNL,EAAEwB,CAAQ,EAIVvB,EAAEuB,CAAQ,CAAA,EAMZ,MACD,IAAK,QACL,IAAK,iBACL,IAAK,aACL,IAAK,QACL,IAAK,aACL,IAAK,aACMiB,EAAA,CAACzC,EAAGC,IACNF,GACNC,EAAEwB,CAAQ,EAIVvB,EAAEuB,CAAQ,CAAA,CAMd,CACO,OAAAiB,CACR,EAMMuB,GAEDnP,GAAU,CACR,KAAA,CAAE,KAAAoP,EAAM,SAAAlP,CAAa,EAAAF,EAE1B,OAAAuB,EAAAA,IAACS,EAAS,CAAA,eAAc,GACvB,SAAAb,EAAA,KAAC8I,EAAA,CACA,MAAM,OACN,QAAQ,OACR,cAAc,MACd,SAAS,OACT,WAAW,QACX,eAAe,gBAEf,SAAA,CAAA1I,EAAA,IAACW,EAAA,CACA,GAAI,CACH,MAAO,iBACR,EAEC,SAAAkN,CAAA,CACF,EACA7N,EAAA,IAAC0I,EAAA,CACA,WAAW,SACX,cAAc,MACd,SAAS,kBAER,SAAA/J,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CAAA,CAEF,EAUamP,GAERrP,GAAU,CACR,KAAA,CACL,YAAAsP,EACA,OAAAlJ,EACA,MAAOmJ,EACP,cAAeC,EACf,UAAWC,EACX,MAAOC,CACJ,EAAA1P,EACEI,EAASC,KACT,CAACuE,EAAO+K,CAAQ,EAAInP,EAAA,SACzB+O,GAAU,EAAA,EAELK,EAAgBJ,GAAkB,GAClCK,EACLJ,GAActD,IACTtH,EACL6K,GAAUzD,IACL6D,EACLC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,MAAAwE,EACA,MAAAC,EACA,UAAW+G,EACX,cAAAgE,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKI,EACLD,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,MAAAwE,EACA,MAAOgH,EACP,UAAAiE,EACA,cAAAD,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKK,EACLF,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,MAAAwE,EACA,MAAAC,EACA,UAAAgL,EACA,cAAejE,CAChB,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKsE,EAA2B,IAAM,CACtC9P,EACC,CACC,MAAAwE,EACA,MAAAC,EACA,UAAAgL,EACA,cAAe,CAAC,CACjB,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKM,EAAoB,IAAM,CAC/B/P,EACC,CACC,MAAAwE,EACA,MAAAC,EACA,UAAAgL,EACA,cAAAD,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAGK,CAACQ,EAAYC,CAAa,EAC/B7P,WAAS,EAAK,EACT8P,EAAe,IAAM,CAC1BD,EAAc,CAACD,CAAU,CAAA,EAG1B,cACEhP,EACA,CAAA,SAAA,CAAAD,EAAA,KAACG,EAAA,CACA,eAAc,GACd,QAAQ,QACR,GAAI,CACH,cAAe,MACf,MAAO,OACP,SAAU,OACV,IAAK,EACL,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAAAH,OAACU,EAAW,CAAA,SAAA,CAAA,WACFuE,EAAO,OAAQ,IACvBA,EAAO,SAAW,EAChB,QACA,QAAA,EACJ,EACAjF,EAAA,KAAC8I,EAAA,CACA,WAAW,SACX,UAAU,MAEV,SAAA,CAAA1I,EAAA,IAACkN,GAAA,CACA,aAAa,MACb,YAAY,eACZ,KAAK,QACL,MAAO7J,EACP,SAAU+K,EACV,QAASQ,CAAA,CACV,EACA5O,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAAS8O,EAET,eAACC,GAAkB,EAAA,CAAA,CACpB,CAAA,CAAA,CACD,CAAA,CAAA,CACD,QACCC,GAAS,CAAA,GAAIJ,EACb,SAACjP,EAAA,KAAAW,EAAA,CAAK,eAAc,GACnB,SAAA,CAACX,EAAAA,KAAAgO,GAAA,CAAkB,KAAK,eACvB,SAAA,CAAA5N,EAAA,IAACiN,GAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,eACV,YAAc5C,GACb,GAAGA,EAAM,MAAM,YAEhB,KAAK,QACL,MAAOgE,EACP,QAASN,EACT,SAAUW,CAAA,CACX,EACA1O,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAAS0O,EAET,eAAC/F,EAAa,EAAA,CAAA,CACf,CAAA,EACD,EACA5I,EAAAA,IAAC4N,GAAkB,CAAA,KAAK,QACvB,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,QACV,KAAK,QACL,MAAOpJ,EACP,QAAS6F,GACT,SAAUsF,CAAA,CAAA,EAEZ,EACAzO,EAAAA,IAAC4N,GAAkB,CAAA,KAAK,QACvB,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,OACV,KAAK,QACL,MAAO4B,EACP,QACClF,GAED,SAAUmF,CAAA,CAAA,EAEZ,CAAA,CAAA,CACD,CACD,CAAA,EACAvO,EAAA,IAAC4L,GAAA,CACA,MAAO/G,EACP,iBAAkB4I,GAClB,eAAe,aACf,WAAYE,EAAA,CACb,CACD,CAAA,CAAA,CAEF,ECtYauB,GAAoB,IAAM,CAChC,KAAA,CACL,OAAArK,EACA,YAAAkJ,EACA,MAAA1K,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,GACGiF,EAAc,EAGjB,OAAAvI,EAAA,IAACxB,EAAA,CACA,SACCwB,EAAA,IAACiB,EAAA,CACA,MAAM,WACN,iBAAkB,CACjB,GAAI,CAAE,SAAU,CAAE,CACnB,CAAA,CACD,EAGD,SAAAjB,EAAA,IAACH,EAAA,CACA,WAAY,EACZ,SAAU,EAEV,SAAAG,EAAA,IAAC8N,GAAA,CACA,OAAAjJ,EACA,YAAAkJ,EACA,MAAA1K,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,CAAA,CACD,CAAA,CACD,CAAA,CAAA,CAGH,ECtCa6L,GAAc,CAC1B7K,EACAtC,EACAE,EACAkN,EACAvO,EACAwO,IACI,CACA,IAAAvD,EAAQ,CAAC,GAAGxH,CAAK,EAErB,OAAI8K,IAAe,YAClBtD,EAAQA,EAAM,OACZH,GAASA,EAAK,UAAA,GAGbyD,IAAe,WAClBtD,EAAQA,EAAM,OACZH,GAAS,CAACA,EAAK,UAAA,GAId9K,IAAW,aACdiL,EAAQA,EAAM,OACZH,GAASA,EAAK,WAAA,GAGb9K,IAAW,WACdiL,EAAQA,EAAM,OACZH,GAAS,CAACA,EAAK,WAAA,GAKjBzJ,EAAO,OAAS,GAChBmN,IAAoB,cAEpBvD,EAAQA,EAAM,OAAQH,GACrBzJ,EAAO,MAAOsC,GACTmH,EAAK,SAAW,OACZ,GAEDA,EAAK,OAAO,SAASnH,CAAK,CACjC,CAAA,GAIFtC,EAAO,OAAS,GAChBmN,IAAoB,cAEpBvD,EAAQA,EAAM,OAAQH,GACrBzJ,EAAO,KAAMsC,GACRmH,EAAK,SAAW,OACZ,GAEDA,EAAK,OAAO,SAASnH,CAAK,CACjC,CAAA,GAIKsH,EAAAtF,GAAYsF,EAAO9J,EAAM,CAChC,KAAM,CAAC,WAAW,CAAA,CAClB,EACM8J,CACR,EAEawD,GAAe,CAC3BzK,EACAxB,EACAiL,EACAD,EACA/K,IACI,CACA,IAAAwI,EAAQ,CAAC,GAAGjH,CAAM,EAEtB,OAAIyJ,IAAc,QACjBxC,EAAQA,EAAM,OACZH,GAASA,EAAK,aAAe2C,CAAA,GAG5BD,EAAc,OAAS,IAC1BvC,EAAQA,EAAM,OAAQH,GACrB0C,EAAc,SAAS1C,EAAK,cAAc,CAAA,GAGxCrI,IAAU,QACbwI,EAAQA,EAAM,OACZH,GAASA,EAAK,QAAUrI,CAAA,GAInBwI,EAAAtF,GAAYsF,EAAOzI,EAAO,CACjC,KAAM,CAAC,OAAO,CAAA,CACd,EACMyI,CACR,EClFahD,GAAyB,MAAO,CAC5C,QAAA3C,CACD,IAA2B,CAC1B,SAAS,MAAQ,SACb,IAAAtB,EAAS,MAAMJ,KAOb,MAAAkI,EAAU,CAAC,GALS,IAAI,IAC7B9H,EACE,IAAI,CAAC,CAAE,eAAA0K,CAAe,IAAMA,CAAc,EAC1C,OAAQlF,GAAUA,EAAM,OAAS,CAAC,CAAA,CAEA,EACrCsC,EAAQ,KAAK,EACb,MAAMoB,EACLpB,EAAQ,IAAKtC,IAAW,CACvB,MAAOA,EACP,MAAAA,CACC,EAAA,EAEGjE,EAAe,IAAI,IAAID,EAAQ,GAAG,EACtC,aAEIqJ,EAAqBpJ,EAAa,IACvC,eAAA,EAED,IAAIiI,EAA0B,CAAA,EAC1BmB,IAAuB,OACVnB,EAAAmB,EACd,YACA,OACA,MAAM,GAAG,EACT,IAAK7D,GAASA,EAAK,KAAM,CAAA,EACzB,OAAQA,GAASA,EAAK,OAAS,CAAC,GAGnC,MAAMtI,EAAQ+C,EAAa,IAAI,OAAO,GAAK,GAErCkI,EACLlI,EAAa,IAAI,WAAW,GAC5BwE,EAA4B,EACvBtH,EACL8C,EAAa,IAAI,OAAO,GACxBsE,EAAwB,EAEhB,OAAA7F,EAAAyK,GACRzK,EACAxB,EACAiL,EACAD,EACA/K,CAAA,EAGM,CACN,OAAAuB,EACA,YAAAkJ,EACA,MAAA1K,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,CAAA,CAEF,ECxCamM,GACZC,GAEOC,GAAmBD,CAAK,EAAE,WCP5BE,GAGA,CACL,CACC,MAAO,cACP,OAAS3M,GACRA,EAAK,aAAe,gBACtB,EACA,CACC,MAAO,cACP,OAASA,GACRA,EAAK,UACF+E,EAAY/E,EAAK,SAAS,EAC1B,OACL,EACA,CACC,MAAO,eACP,OAASA,GACRA,EAAK,WACF+E,EAAY/E,EAAK,UAAU,EAC3B,OACL,EACA,CACC,MAAO,UACP,OAASA,GACRA,EAAK,WACF+E,EAAY/E,EAAK,UAAU,EAC3B,SACL,EACA,CACC,MAAO,aACP,OAASA,GACRA,EAAK,WAAa,UAAY,QAChC,EACA,CACC,MAAO,SACP,OAASA,GACRA,EAAK,WAAa,WAAa,QACjC,EACA,CACC,MAAO,QACP,OAASA,GACRrD,EAAA,KAAC8I,EAAA,CACA,UAAU,OACV,cAAc,MACd,SAAS,OACT,IAAK,EAEL,SAAA,CAAA1I,EAAA,IAACM,EAAA,CACA,UAAU,IACV,KAAM2C,EAAK,SACX,OAAO,SACP,SAAA,mBAAA,CAED,EACAjD,EAAA,IAACM,EAAA,CACA,UAAU,IACV,KAAM2C,EAAK,UAAY,OACvB,OAAO,SACP,SAAA,UAAA,CAED,CAAA,CAAA,CACD,CAEF,EACA,CACC,MAAO,SACP,OAASA,GACRA,EAAK,QAAUA,EAAK,OAAO,OAAS,EACnCjD,EAAA,IAAC0I,EAAA,CACA,UAAU,OACV,IAAK,EACL,cAAc,MACd,SAAS,OAER,SAAKzF,EAAA,OAAO,IAAKuB,GACjBxE,EAAA,IAACM,EAAA,CAEA,UAAWoN,EACX,GAAI,CACH,SAAU,gBACV,OAAQ+B,GAAc,CACrB,OAAQjL,CAAA,CACR,CACF,EAEC,SAAAA,CAAA,EATIA,CAAA,CAWN,CAAA,CAAA,EAGF,mBAEH,CACD,EAEaqL,GAAsB,IAAM,CAClC,KAAA,CACL,YAAA9B,EACA,KAAA9K,EACA,OAAA4B,EACA,MAAAxB,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,GACGiF,EAAc,EAEZ,CAACuH,EAAKC,CAAM,EAAI9Q,WAAS,CAAC,EAC1B,CAACF,EAAYC,CAAa,EAC/BC,WAAS,EAAK,EAETC,EAAe,IAAM,CAC1BF,EAAc,CAACD,CAAU,CAAA,EAEpByJ,EAAc,IAAM,CACzBxJ,EAAc,EAAK,CAAA,EAGhB,IAAAgR,EACA,OAAA/M,EAAK,SAAW,SACnB+M,EAAgBC,GAAO,OAAA,KACtBhN,EAAK,OACL,UACC,SAAS,GAIXrD,EAAA,KAACpB,EAAA,CACA,SACCwB,EAAA,IAACiB,EAAA,CACA,MAAO,kBAAkBgC,EAAK,SAAS,GACvC,iBAAkB,CACjB,GAAI,CACH,SAAU,OACV,SAAU,CAAE,GAAI,EAAG,GAAI,CAAE,CAC1B,CACD,CAAA,CACD,EAED,iBACCjD,EAAA,IAACC,EAAA,CACA,cAAa,GACb,QAASf,EACT,KAAK,QACL,GAAI,CACH,SAAU,CACX,EAEA,eAACuJ,GAAmB,EAAA,CAAA,CACrB,EAGD,SAAA,CAAAzI,EAAA,IAACD,EAAA,CACA,eAAc,GACd,QAAQ,QAER,SAAAH,EAAA,KAACsQ,GAAA,CACA,MAAOJ,EACP,SAAU,CAACzE,EAAGyE,IAAQC,EAAOD,CAAG,EAEhC,SAAA,CAAA9P,EAAA,IAACmQ,GAAA,CACA,MAAO,EACP,MAAM,QAAA,CACP,EACAnQ,EAAA,IAACmQ,GAAA,CACA,MAAO,EACP,MAAM,QAAA,CACP,CAAA,CAAA,CACD,CAAA,CACD,QACChQ,EAAQ,EAAA,EACR2P,IAAQ,GACP9P,MAAAgB,GAAA,CAAU,SAAS,KACnB,SAAAhB,EAAA,IAACqH,GAAA,CACA,UAAU,6CACV,gBAAiB2I,CAAA,CAAA,EAEnB,EAEAF,IAAQ,GACP9P,MAAAH,EAAA,CAAI,QAAS,EACb,SAAAG,EAAA,IAAC8N,GAAA,CACA,YAAAC,EACA,OAAAlJ,EACA,MAAAxB,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,CAAA,CAAA,EAEF,EAED1D,EAAA,KAACQ,GAAA,CACA,UAAW,EACX,OAAO,QACP,KAAMrB,EACN,QAASyJ,EACT,WAAY,CACX,GAAI,CAAE,MAAO,GAAI,CAClB,EAEA,SAAA,CAAA5I,EAAA,KAACG,EAAA,CACA,QAAQ,QACR,GAAI,CACH,QAAS,OACT,cAAe,MACf,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAACC,EAAA,IAAAM,EAAA,CAAW,WAAW,OAAO,SAE9B,WAAA,EACAN,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAASuI,EAET,eAACI,EAAa,EAAA,CAAA,CACf,CAAA,CAAA,CACD,EACA5I,EAAA,IAACG,EAAA,CACA,SAAQ,GACR,QAAQ,WAAA,CACT,EACAH,EAAA,IAACO,EAAA,CACA,eAAc,GACd,MAAK,GAEJ,SAA0BqP,GAAA,IAC1B,CAAC,CAAE,MAAApP,EAAO,OAAAqI,CAAO,UACfpI,EACA,CAAA,SAAAT,EAAA,IAACW,EAAA,CACA,UAAWkI,EAAO5F,CAAI,EAErB,SAAAzC,CAAA,IAJYA,CAMf,CAEF,CAAA,CACD,CAAA,CAAA,CACD,CAAA,CAAA,CAAA,CAGH,EC3PasI,GAAyB,MAAO,CAC5C,OAAAC,EACA,QAAA5C,CACD,IAAM,CACL,MAAMnD,EAAQ+F,EAAO,MACfC,EAAWD,EAAO,KAEvB,GAAA/F,IAAU,QACVgG,IAAa,OAEP,MAAA,IAAI,SAAS,GAAI,CACtB,OAAQ,IACR,WAAY,cAAA,CACZ,EAGF,MAAMlG,EAAW,GAAGE,CAAK,IAAIgG,CAAQ,GACjC,IAAA/F,EAAO,MAAMmB,GAActB,CAAQ,EACvC,GAAIG,IAAS,OACN,MAAA,IAAI,SAAS,YAAa,CAC/B,OAAQ,IACR,WAAY,+BAAA,CACZ,GAGD,MAAMa,GAAW,IAAI,QAAS,CAC9B,GAAGb,EACH,UAAW,IAAI,KAAK,KAAK,IAAK,CAAA,EAAE,YAAY,CAAA,CAC5C,EAED,SAAS,MAAQA,EAAK,KAEtB,MAAMmD,EAAe,IAAI,IAAID,EAAQ,GAAG,EACtC,aACI9C,EAAQ+C,EAAa,IAAI,OAAO,GAAK,GACrCkI,EACLlI,EAAa,IAAI,WAAW,GAC5BwE,EAA4B,EACvBtH,EACL8C,EAAa,IAAI,OAAO,GACxBsE,EAAwB,EAEzB,IAAI7F,EAAS,MAAMH,GAClBzB,EAAK,SAAA,EAEN,MAAMoL,EAA0B,CAC/BpL,EAAK,SAAA,EAEG4B,EAAAyK,GACRzK,EACAxB,EACAiL,EACAD,EACA/K,CAAA,EAGD,MAAMyK,EACL,CACC,CACC,MAAO9K,EAAK,UACZ,MAAOA,EAAK,SACb,CAAA,EAYK,MAVwB,CAC9B,KAAAA,EACA,OAAA4B,EACA,MAAAxB,EACA,UAAAiL,EACA,cAAAD,EACA,MAAA/K,EACA,YAAAyK,CAAA,CAIF,ECpDMN,GAAgC,CACrC,CACC,GAAI,YACJ,MAAO,OACP,OAASxK,GACRjD,EAAA,IAACM,EAAA,CACA,UAAWoN,EACX,GAAI,KAAKzK,EAAK,SAAS,GAEtB,SAAKA,EAAA,SAAA,CACP,CAEF,EACA,CACC,GAAI,YACJ,MAAO,cACP,OAASA,GACR8E,EACC9E,EAAK,UACL,OACD,CACF,EACA,CACC,GAAI,cACJ,MAAO,SACP,OAASA,GACRA,EAAK,YAAc,WAAa,QAClC,EACA,CACC,GAAI,aACJ,MAAO,aACP,OAASA,GACRA,EAAK,WAAa,UAAY,QAChC,EACA,CACC,GAAI,YACJ,MAAO,cACP,OAASA,GACR8E,EACC9E,EAAK,UACL,OACD,CACF,EACA,CACC,GAAI,aACJ,MAAO,eACP,OAASA,GACR8E,EACC9E,EAAK,WACL,OACD,CACF,EACA,CACC,GAAI,aACJ,MAAO,UACP,OAASA,GACR8E,EACC9E,EAAK,WACL,SACD,CACF,CACD,EAEM0K,GACLvC,GAGe,CACf,OAAQA,EAAU,CACjB,IAAK,cACL,IAAK,aACG,MAAA,CAACxB,EAAGC,IACVG,GACCJ,EAAEwB,CAAQ,EAIVvB,EAAEuB,CAAQ,CAAA,EAKb,IAAK,YACL,IAAK,YACL,IAAK,YACL,IAAK,aACL,IAAK,aACG,MAAA,CAACxB,EAAGC,IACVF,GACCC,EAAEwB,CAAQ,EAIVvB,EAAEuB,CAAQ,CAAA,CAKd,CAED,EAMMwC,EAEDnP,GAAU,CACR,KAAA,CAAE,KAAAoP,EAAM,SAAAlP,CAAa,EAAAF,EAE1B,OAAAuB,EAAAA,IAACS,EAAS,CAAA,eAAc,GACvB,SAAAb,EAAA,KAAC8I,EAAA,CACA,MAAM,OACN,QAAQ,OACR,cAAc,MACd,SAAS,OACT,WAAW,QACX,eAAe,gBAEf,SAAA,CAAA1I,EAAA,IAACW,EAAA,CACA,GAAI,CACH,MAAO,iBACR,EAEC,SAAAkN,CAAA,CACF,EACA7N,EAAA,IAAC0I,EAAA,CACA,WAAW,SACX,cAAc,MACd,SAAS,kBAER,SAAA/J,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CAAA,CAEF,EAWayR,GAER3R,GAAU,CACR,KAAA,CACL,MAAA6F,EACA,aAAc+L,EACd,KAAMC,EACN,mBAAoBC,EACpB,OAAQC,EACR,OAAQC,EACR,WAAYC,CACT,EAAAjS,EAEEI,EAASC,KAET,CAACkD,EAAM2O,CAAO,EAAI1R,EAAAA,SAASqR,GAAS,EAAE,EACtCpO,EAASuO,GAAW,GACpBG,EACLL,GACA/F,KACK4E,EACLsB,GAAexG,KACVrJ,EACL2P,GAAWlG,KAENuG,EAAmB,IAAM,CAC9BhS,EACC,CACC,KAAAmD,EACA,OAAAE,EACA,mBAAA0O,EACA,WAAAxB,EACA,OAAAvO,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKiQ,EACLtC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,KAAAmD,EACA,OAAAE,EACA,mBAAoBmI,EACpB,WAAA+E,EACA,OAAAvO,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKkQ,EACLvC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,KAAAmD,EACA,OAAAE,EACA,mBAAA0O,EACA,WAAAxB,EACA,OAAQ/E,CACT,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEK2G,EACLxC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,KAAAmD,EACA,OAAAE,EACA,mBAAA0O,EACA,WAAYvG,EACZ,OAAAxJ,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKoQ,EACLzC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3P,EACC,CACC,KAAAmD,EACA,OAAQqI,EACR,mBAAAuG,EACA,WAAAxB,EACA,OAAAvO,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAEKqQ,EAAoB,IAAM,CAC/BrS,EACC,CACC,KAAAmD,EACA,OAAQ,CAAC,EACT,mBAAA4O,EACA,WAAAxB,EACA,OAAAvO,CACD,EACA,CAAE,OAAQ,KAAM,OAAQ,KAAM,CAAA,CAC/B,EAGK,CAACgO,EAAYC,CAAa,EAC/B7P,WAAS,EAAK,EACT8P,GAAe,IAAM,CAC1BD,EAAc,CAACD,CAAU,CAAA,EAG1B,cACEhP,EACA,CAAA,SAAA,CAAAD,EAAA,KAACG,EAAA,CACA,eAAc,GACd,QAAQ,QACR,GAAI,CACH,cAAe,MACf,MAAO,OACP,SAAU,OACV,IAAK,EACL,WAAY,SACZ,eAAgB,eACjB,EAEA,SAAA,CAAAH,OAACU,EAAW,CAAA,SAAA,CAAA,WACFgE,EAAM,OAAQ,IACtBA,EAAM,SAAW,EACf,aACA,cAAA,EACJ,EACA1E,EAAA,KAAC8I,EAAA,CACA,WAAW,SACX,UAAU,MAEV,SAAA,CAAA1I,EAAA,IAACkN,GAAA,CACA,aAAa,MACb,YAAY,oBACZ,KAAK,QACL,MAAOlL,EACP,SAAU2O,EACV,QAASE,CAAA,CACV,EACA7Q,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAAS8O,GAET,eAACC,GAAkB,EAAA,CAAA,CACpB,CAAA,CAAA,CACD,CAAA,CAAA,CACD,QACCC,GAAS,CAAA,GAAIJ,EACb,SAACjP,EAAA,KAAAW,EAAA,CAAK,eAAc,GACnB,SAAA,CAACX,EAAAA,KAAAgO,EAAA,CAAkB,KAAK,SACvB,SAAA,CAAA5N,EAAA,IAACiN,GAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,SACV,YAAc5C,GACb,GAAGA,EAAM,MAAM,YAEhB,KAAK,QACL,MAAOnI,EACP,QAASmO,EACT,SAAUY,CAAA,CACX,EACAjR,EAAA,IAACC,EAAA,CACA,KAAK,QACL,QAASiR,EAET,eAACtI,EAAa,EAAA,CAAA,CACf,CAAA,EACD,EACA5I,EAAAA,IAAC4N,EAAkB,CAAA,KAAK,uBACvB,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,iBACV,KAAK,QACL,MAAOkE,EACP,QACCpH,GAED,SACCsH,CAAA,CAAA,EAGH,EACA9Q,EAAAA,IAAC4N,EAAkB,CAAA,KAAK,aACvB,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,aACV,KAAK,QACL,MAAO0C,EACP,QACC3F,GAED,SAAUuH,CAAA,CAAA,EAEZ,EACAhR,EAAAA,IAAC4N,EAAkB,CAAA,KAAK,SACvB,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,UAAU,SACV,KAAK,QACL,MAAO7L,EACP,QAAS6I,GACT,SAAUqH,CAAA,CAAA,EAEZ,CAAA,CAAA,CACD,CACD,CAAA,EACA/Q,EAAA,IAAC4L,GAAA,CACA,MAAOtH,EACP,WAAYqJ,GACZ,eAAe,YACf,iBAAkBF,EAAA,CACnB,CACD,CAAA,CAAA,CAEF,EC/Za0D,GAAmB,IAAM,CAC/B,KAAA,CACL,MAAA7M,EACA,aAAAiC,EACA,OAAArE,EACA,KAAAF,EACA,WAAAoN,EACA,OAAAvO,EACA,mBAAA+P,GACGrI,EAAc,EAGjB,OAAAvI,EAAA,IAACxB,EAAA,CACA,SACCwB,EAAA,IAACiB,EAAA,CACA,MAAM,iBACN,iBAAkB,CACjB,GAAI,CAAE,SAAU,CAAE,CACnB,CAAA,CACD,EAGD,SAAAjB,EAAA,IAACH,EAAI,CAAA,QAAS,EACb,SAAAG,EAAA,IAACoQ,GAAA,CACA,aAAA7J,EACA,MAAAjC,EACA,OAAApC,EACA,KAAAF,EACA,WAAAoN,EACA,OAAAvO,EACA,mBAAA+P,CAAA,CAAA,EAEF,CAAA,CAAA,CAGH,ECpBa9H,GAAyB,MAAO,CAC5C,QAAA3C,CACD,IAA2B,CAC1B,SAAS,MAAQ,eACjB,MAAMI,GACJ,MAAMlC,GAAmB,GAAA,IAAKG,IACvB,CAAE,MAAOA,EAAO,MAAOA,CAAM,EACpC,EACE,IAAAF,EAAQ,MAAMH,IAElB,MAAMiC,EAAe,IAAI,IAAID,EAAQ,GAAG,EACtC,aACIiL,EAAchL,EAAa,IAAI,QAAQ,EAC7C,IAAIlE,EAAmB,CAAA,EACnBkP,IAAgB,OACVlP,EAAAkP,EACP,YACA,OACA,MAAM,GAAG,EACT,IAAK5M,GAAUA,EAAM,KAAM,CAAA,EAC3B,OAAQA,GAAUA,EAAM,OAAS,CAAC,GAGrC,MAAMxC,EAAOoE,EAAa,IAAI,MAAM,GAAK,GACnCvF,EACLuF,EAAa,IAAI,QAAQ,GACzBkE,GAAwB,EACnB8E,EACLhJ,EAAa,IAAI,YAAY,GAC7B8D,GAA4B,EACvB0G,EACLxK,EAAa,IAAI,oBAAoB,GACrCoE,GAAoC,EAC7B,OAAAlG,EAAA6K,GACP7K,EACAtC,EACAE,EACAkN,EACAvO,EACA+P,CAAA,EAGM,CACN,aAAArK,EACA,MAAAjC,EACA,OAAApC,EACA,KAAAF,EACA,WAAAoN,EACA,OAAAvO,EACA,mBAAA+P,CAAA,CAEF,EC9DahD,EAERnP,GAAU,CACd,KAAM,CAAE,UAAA4S,EAAW,QAAAC,EAAS,SAAA3S,CAAA,EAAaF,EAExC,OAAAuB,EAAAA,IAACS,EAAS,CAAA,eAAc,GACvB,SAAAb,EAAA,KAAC8I,EAAA,CACA,MAAM,OACN,QAAQ,OACR,cAAc,MACd,SAAS,OACT,WAAW,QACX,eAAe,gBAEf,SAAA,CAAA1I,EAAA,IAACW,EAAA,CACA,QAAA2Q,EACA,UAAAD,EACA,GAAI,CACH,MAAO,iBACR,CAAA,CACD,EACArR,EAAA,IAAC0I,EAAA,CACA,WAAW,SACX,cAAc,MACd,SAAS,kBAER,SAAA/J,CAAA,CACF,CAAA,CAAA,CAEF,CAAA,CAAA,CAEF,EChCa4S,GAAuB,IAAM,CACnC,KAAA,CAAE,gBAAAC,GAAoBC,KAEtB,CACLC,EACAC,CAAA,EACG1S,EAAA,SACH,aAAa,QACZ,uBAAA,GACI,EAAA,EAGA2S,EACLpD,GAGI,CACJ,MAAMnE,EAAQmE,EAAM,OAAO,MAAM,UAAU,EAC3CmD,EAAuBtH,CAAK,CAAA,EAGvBwH,EAAgB,IAAM,CACd,aAAA,QACZ,wBACAH,CAAA,EAEeF,EAAA,CACf,QAAS,gCACT,QAAS,MAAA,CACT,CAAA,EAID,OAAA5R,EAAA,KAACW,EAAA,CACA,eAAc,GACd,UACCP,EAAA,IAAC+M,EAAA,CACA,eAAc,GACd,cAAa,GACb,SAAA,KAAA,CAED,EAGD,SAAA,CAAC/M,EAAAA,IAAA4N,EAAA,CAAkB,QAAQ,kCAC1B,SAAA5N,EAAA,IAACwN,GAAA,CACA,UAAS,GACT,YAAY,OACZ,KAAK,WACL,MAAOkE,EACP,SAAUE,EACV,KAAK,OAAA,CAAA,EAEP,EACA5R,EAAAA,IAACS,EAAS,CAAA,eAAc,GACvB,SAAAT,EAAA,IAAC8R,GAAA,CACA,iBAAgB,GAChB,KAAK,QACL,QAAQ,YACR,QAASD,EACT,SAAA,QAAA,CAAA,EAGF,CAAA,CAAA,CAAA,CAGH,EC1DaE,GACZ,IAAM,CACC,KAAA,CAACzD,EAAW0D,CAAY,EAAI/S,EAAA,SACjC2L,EAA4B,CAAA,EAEvB,CAACtH,EAAO2O,CAAQ,EAAIhT,EAAA,SACzByL,EAAwB,CAAA,EAGnB6D,EACLC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B3D,GAA4BR,CAAK,EACjC2H,EAAa3H,CAAK,CAAA,EAEboE,EACLD,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B7D,GAAwBN,CAAK,EAC7B4H,EAAS5H,CAAK,CAAA,EAId,OAAAzK,EAAA,KAACW,EAAA,CACA,eAAc,GACd,UACCP,EAAA,IAAC+M,EAAA,CACA,eAAc,GACd,cAAa,GACb,SAAA,0BAAA,CAED,EAGD,SAAA,CAAC/M,EAAAA,IAAA4N,EAAA,CAAkB,QAAQ,aAC1B,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,KAAK,QACL,MAAO4B,EACP,QACClF,GAED,SAAUmF,CAAA,CAAA,EAEZ,EACAvO,EAAAA,IAAC4N,EAAkB,CAAA,QAAQ,QAC1B,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,KAAK,QACL,MAAOpJ,EACP,QAAS6F,GACT,SAAUsF,CAAA,CAAA,EAEZ,CAAA,CAAA,CAAA,CAGH,ECzDYyD,GACZ,IAAM,CACC,KAAA,CAACC,EAAMC,CAAO,EAAInT,EAAA,SACvBuL,GAAoC,CAAA,EAE/B,CAAC4E,EAAYiD,CAAa,EAAIpT,EAAA,SACnCiL,GAA4B,CAAA,EAEvB,CAACrJ,EAAQyR,CAAS,EAAIrT,EAAA,SAC3BqL,GAAwB,CAAA,EAGnBwG,EACLtC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3B/D,GAAoCJ,CAAK,EACzC+H,EAAQ/H,CAAK,CAAA,EAERkI,EACL/D,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3BpE,GAA4BC,CAAK,EACjCgI,EAAchI,CAAK,CAAA,EAEd0G,EACLvC,GACI,CACE,MAAAnE,EAAQmE,EAAM,OAAO,MAC3BjE,GAAwBF,CAAK,EAC7BiI,EAAUjI,CAAK,CAAA,EAIf,OAAAzK,EAAA,KAACW,EAAA,CACA,eAAc,GACd,UACCP,EAAA,IAAC+M,EAAA,CACA,eAAc,GACd,cAAa,GACb,SAAA,+BAAA,CAED,EAGD,SAAA,CAAC/M,EAAAA,IAAA4N,EAAA,CAAkB,QAAQ,iBAC1B,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,KAAK,QACL,MAAOyF,EACP,QACC3I,GAED,SACCsH,CAAA,CAAA,EAGH,EACA9Q,EAAAA,IAAC4N,EAAkB,CAAA,QAAQ,aAC1B,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,KAAK,QACL,MAAO0C,EACP,QACC3F,GAED,SAAU8I,CAAA,CAAA,EAEZ,EACAvS,EAAAA,IAAC4N,EAAkB,CAAA,QAAQ,SAC1B,SAAA5N,EAAA,IAAC0M,EAAA,CACA,UAAS,GACT,aAAY,GACZ,KAAK,QACL,MAAO7L,EACP,QAAS6I,GACT,SAAUqH,CAAA,CAAA,EAEZ,CAAA,CAAA,CAAA,CAGH,EC1FKyB,GAMA,CACL,CACC,IAAK,kBACL,WAAY,cACZ,QAAU5M,GACTD,GAAgBC,CAAS,CAC3B,EACA,CACC,IAAK,mBACL,WAAY,SACZ,QAAUA,GACTE,GAAqBF,CAAS,CAChC,EACA,CACC,IAAK,qBACL,WAAY,WACZ,QAAUA,GACTI,GAA4BJ,CAAS,CACvC,CACD,EAEM6M,GAAY,CACjB1K,EACC,aAAa,QAAQ,iBAAiB,EACtC,OACD,EACAA,EACC,aAAa,QAAQ,kBAAkB,EACvC,OACD,EACAA,EACC,aAAa,QAAQ,oBAAoB,EACzC,OACD,CACD,EAEa2K,GAAwB,IAAM,CACpC,KAAA,CAAE,gBAAAlB,GAAoBC,KAEtBkB,EACL,aAAa,QACZ,uBACI,GAAA,GAEA,CAACC,EAASC,CAAU,EAAI5T,EAAAA,SAE5B,CAAC,GAAO,GAAO,EAAK,CAAC,EACjB,CAAC6T,EAAWC,CAAW,EAC5B9T,WAASwT,EAAS,EAEbO,EAAgBnQ,GAAa,CAClB,MAAA2O,EAAA,CACf,QAAS,OAAO3O,CAAG,EACnB,QAAS,OAAA,CACT,EACKA,CAAA,EAGDoQ,EAAa,MAAO1R,GAAkB,CAC3CsR,EAAYK,GAAS,CACd,MAAAC,EAAO,CAAC,GAAGD,CAAI,EACrB,OAAAC,EAAK5R,CAAK,EAAI,GACP4R,CAAA,CACP,EAED,KAAM,CAAE,QAAAC,EAAS,WAAAC,EAAY,IAAAC,CAAI,EAChCd,GAAajR,CAAK,EAEnB,IADY,MAAM6R,EAAQJ,CAAY,GAC9B,MAAOO,GAAMA,CAAC,EAAG,CACR/B,EAAA,CACf,QAAS,UAAU6B,CAAU,GAC7B,QAAS,SAAA,CACT,EACD,MAAMG,EAAY,IAAI,KACrB,KAAK,IAAI,GACR,YAAY,EACD,aAAA,QAAQF,EAAKE,CAAS,EACnCT,EAAaG,GAAS,CACf,MAAAC,EAAO,CAAC,GAAGD,CAAI,EAChB,OAAAC,EAAA5R,CAAK,EACTwG,EAAoByL,CAAS,EACvBL,CAAA,CACP,CACF,CACAN,EAAYK,GAAS,CACd,MAAAC,EAAO,CAAC,GAAGD,CAAI,EACrB,OAAAC,EAAK5R,CAAK,EAAI,GACP4R,CAAA,CACP,CAAA,EAEIM,EAAcrH,EAAAA,QAAQ,IACpB,CAASuG,EACd,CAACA,CAAU,CAAC,EAGd,OAAA3S,EAAA,IAACO,EAAA,CACA,eAAc,GACd,UACCP,EAAA,IAAC+M,EAAA,CACA,eAAc,GACd,cAAa,GACb,SAAA,iBAAA,CAED,EAGA,SAAayF,GAAA,IACb,CAAC,CAAE,WAAAa,GAAc9R,IAChBvB,EAAA,IAAC4N,EAAA,CAEA,QAAS,QAAQyF,CAAU,GAC3B,UAAW,cAAcP,EAAUvR,CAAK,CAAC,GAEzC,SAAAvB,EAAA,IAAC8R,GAAA,CACA,UAAS,GACT,iBAAgB,GAChB,SACC2B,GAAeb,EAAQrR,CAAK,EAE7B,KAAK,QACL,QAAQ,YACR,QAAS,IAAM0R,EAAW1R,CAAK,EAE9B,SAAAqR,EAAQrR,CAAK,EACbvB,EAAA,IAAC0T,GAAA,CACA,cAAa,GACb,KAAM,EAAA,CAAA,EAGP,QAAQL,CAAU,EAAA,CAEpB,CAAA,EAtBK,aAAa9R,CAAK,EAuBxB,CAEF,CAAA,CAAA,CAGH,ECtJaoS,GAAmB,IAE9B3T,EAAA,IAACxB,EAAA,CACA,SACCwB,EAAA,IAACiB,EAAA,CACA,MAAM,aACN,iBAAkB,CACjB,GAAI,CAAE,SAAU,CAAE,CACnB,CAAA,CACD,EAGD,SAAArB,EAAA,KAAC8I,EAAA,CACA,WAAY,EACZ,SAAU,EACV,QAAS,EACT,QAAS1I,EAAAA,IAACG,EAAQ,CAAA,QAAQ,QAAS,CAAA,EAEnC,SAAA,CAAAH,EAAA,IAACkS,GAA4B,EAAA,QAC5BH,GAA6B,EAAA,QAC7BR,GAAiB,EAAA,QACjBmB,GAAkB,EAAA,CAAA,CAAA,CACpB,CAAA,CAAA,EC1BGkB,EAAeC,GAAY,CAChC,QAAS,CACR,KAAM,OACN,QAAS,CACR,KAAMC,EAAM,UAAW,EAAG,CAC3B,EACA,UAAW,CACV,KAAM,SACP,EACA,WAAY,CACX,QAAS,UACT,MAAO,SACR,EACA,KAAM,CACL,QAASA,EAAM,OAAQ,GAAI,EAC3B,UAAWA,EAAM,OAAQ,EAAG,CAC7B,CACD,CACD,CAAC,EACKC,GAAiBF,GAAY,CAClC,WAAY,CACX,eAAgB,CACf,eAAgB,CACf,GAAI,CACH,SAAU,SACV,MAAO,MACR,CACD,CACD,EACA,eAAgB,CACf,eAAgB,CACf,KAAQ,CACP,gBACCD,EAAa,QAAQ,UACvB,EACA,IAAK,CACJ,eAAgB,MACjB,EACA,IAAO,CACN,MAAO,OACP,SAAU,MACX,EACA,MAAS,CACR,SAAU,cACV,cAAe,aAChB,EACA,EAAK,CACJ,WAAc,kBACd,MAASE,EACRF,EAAa,QAAQ,QAAQ,KAC7B,GACD,EACA,UAAW,CACV,MAAOE,EACNF,EAAa,QAAQ,UAAU,KAC/B,GACD,CACD,CACD,CACD,CACD,CACD,CACD,CAAC,EAEYI,GAAgBH,GAAY,CACxC,QAASD,EAAa,QACtB,WAAYG,GAAe,UAC5B,CAAC,ECvCKE,GAASC,GACd,CACC,CACC,MAAO,GACP,cAAUC,GAAK,EAAA,EACf,OAAQjO,GACR,mBAAetF,GAAa,EAAA,CAC7B,EACA,CACC,KAAM,IACN,mBAAeA,GAAa,EAAA,EAC5B,SAAU,CACT,CACC,KAAM,gBACN,cAAUuQ,GAAa,EAAA,EACvB,OAAQiD,EACT,EACA,CACC,KAAM,6BACN,cAAUvE,GAAgB,EAAA,EAC1B,OAAQwE,EACT,EACA,CACC,KAAM,iDACN,cAAUhM,GAAiB,EAAA,EAC3B,OAAQiM,EACT,EACA,CACC,KAAM,UACN,cAAUpF,GAAc,EAAA,EACxB,OAAQqF,EACT,EACA,CACC,KAAM,YACN,cAAUZ,GAAa,EAAA,CACxB,CACD,CACD,CACD,EACA,CACC,SAAU,GACX,CACD,EAEaa,GAAM,IAEjB5U,EAAA,KAAC6U,GAAc,CAAA,MAAOT,GACrB,SAAA,CAAAhU,EAAA,IAAC0U,GAAY,EAAA,EACb1U,EAAA,IAAC2U,GAAA,CACA,iBAAgB,GAChB,SAAU,EACV,iBAAkB,KAClB,aAAc,CACb,SAAU,SACV,WAAY,MACb,EAEA,SAAA3U,EAAA,IAAC4U,IAAe,OAAAX,EAAgB,CAAA,CAAA,CACjC,CACD,CAAA,CAAA,EChFFY,GAAS,WACR,SAAS,eAAe,MAAM,CAC/B,EAAE,aACAC,GAAM,WAAN,CACA,SAAA9U,EAAAA,IAACwU,IAAI,CAAA,EACN,CACD"}