{"version":3,"file":"index-DmOZCSMl.js","sources":["../../src/views/WithAppBar.tsx","../../src/pages/ErrorBoundary.tsx","../../src/constants/ISSUE_FILTER_OPTIONS.ts","../../src/constants/REPO_FILTER_OPTIONS.ts","../../src/core/sorting.ts","../../src/core/time.ts","../../src/database/preferences.ts","../../src/components/StyledDataTable.tsx","../../src/components/StyledSelect.tsx","../../src/components/StyledSelectMultiple.tsx","../../src/components/StyledTextField.tsx","../../src/components/IssueDataTable.tsx","../../src/components/RepoDataTable.tsx","../../src/components/StyledBreadcrumbs.tsx","../../src/pages/HomePage/HomePage.tsx","../../src/database/migration.ts","../../src/database/api.ts","../../src/database/cached.ts","../../src/pages/HomePage/loader.ts","../../src/core/markdown.ts","../../src/components/Markdown.tsx","../../src/pages/IssueDetailsPage/IssueDetailsPage.tsx","../../src/pages/IssueDetailsPage/loader.tsx","../../src/pages/IssueListPage/IssueListPage.tsx","../../src/core/filtering.ts","../../src/pages/IssueListPage/loader.ts","../../src/core/query.ts","../../src/pages/RepoDetailsPage/RepoDetailsPage.tsx","../../src/pages/RepoDetailsPage/loader.tsx","../../src/pages/RepoListPage/RepoListPage.tsx","../../src/pages/RepoListPage/loader.ts","../../src/pages/SettingsPage/SettingRegions/WrappableListItem.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionAPI.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionIssueFilterPref.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionRepoFilterPref.tsx","../../src/pages/SettingsPage/SettingRegions/SettingRegionSync.tsx","../../src/pages/SettingsPage/SettingsPage.tsx","../../src/theme.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import {\r\n\tCloseRounded,\r\n\tListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tAppBar,\r\n\tBox,\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemButton,\r\n\tListItemText,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport {\r\n\tFC,\r\n\tFragment,\r\n\tReactNode,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { useSubmit } from \"react-router-dom\";\r\n\r\nconst nav: { label: string; path: string }[] = [\r\n\t{ label: \"~\", path: \"/\" },\r\n\t{\r\n\t\tlabel: \"repositories\",\r\n\t\tpath: \"/repositories\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"issues\",\r\n\t\tpath: \"/issues\",\r\n\t},\r\n\t{ label: \"settings\", path: \"/settings\" },\r\n];\r\n\r\ntype WithAppBarProps = {\r\n\tlocation: ReactNode;\r\n\tchildren: ReactNode;\r\n\tseconadaryAction?: ReactNode;\r\n};\r\nexport const WithAppBar: FC<WithAppBarProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { location, children, seconadaryAction } =\r\n\t\tprops;\r\n\tconst submit = useSubmit();\r\n\tconst [drawerOpen, setDrawerOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleDrawer = () => {\r\n\t\tsetDrawerOpen(!drawerOpen);\r\n\t};\r\n\tconst appBarRef = useRef<HTMLElement | null>(\r\n\t\tnull,\r\n\t);\r\n\tconst [contentHeight, setContentHeight] =\r\n\t\tuseState(\"0vh\");\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tappBarRef === null ||\r\n\t\t\tappBarRef.current === null\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst appBarHeight =\r\n\t\t\tappBarRef.current.getBoundingClientRect()\r\n\t\t\t\t.height;\r\n\r\n\t\tsetContentHeight(\r\n\t\t\t`calc(100svh - ${appBarHeight}px)`,\r\n\t\t);\r\n\t}, [appBarRef]);\r\n\r\n\tconst redirectPath = (path: string) => {\r\n\t\tsubmit({}, { action: path, method: \"get\" });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Box maxWidth=\"100vw\">\r\n\t\t\t\t<AppBar\r\n\t\t\t\t\tref={appBarRef}\r\n\t\t\t\t\tposition=\"relative\"\r\n\t\t\t\t\tvariant=\"elevation\"\r\n\t\t\t\t\televation={0}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Toolbar\r\n\t\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\t\tflexWrap: \"nowrap\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\t\t\tsx={{ flexGrow: 0 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t{location}\r\n\t\t\t\t\t\t{seconadaryAction}\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t<Divider\r\n\t\t\t\t\t\tflexItem\r\n\t\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Box\r\n\t\t\t\t\theight={contentHeight}\r\n\t\t\t\t\toverflow=\"auto\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Box>\r\n\t\t\t</Box>\r\n\t\t\t<Drawer\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={toggleDrawer}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tsquare: true,\r\n\t\t\t\t\tvariant: \"outlined\",\r\n\t\t\t\t\televation: 0,\r\n\t\t\t\t\tsx: {\r\n\t\t\t\t\t\twidth: 240,\r\n\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\tborderTopWidth: 0,\r\n\t\t\t\t\t\tborderLeftWidth: 0,\r\n\t\t\t\t\t\tborderBottomWidth: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CloseRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography fontWeight=\"bold\">\r\n\t\t\t\t\t\tNavigation\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<List\r\n\t\t\t\t\tdisablePadding\r\n\t\t\t\t\tdense\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\t\t\twhiteSpace: \"wrap\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{nav.map(({ label, path }) => (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\t\tkey={path}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemButton\r\n\t\t\t\t\t\t\t\tonClick={() => redirectPath(path)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ListItemText>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n","import {\r\n\tBox,\r\n\tContainer,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useRouteError } from \"react-router\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\n\r\nexport const ErrorBoundry: FC = () => {\r\n\tconst { status, statusText } =\r\n\t\tuseRouteError() as {\r\n\t\t\tstatus: string;\r\n\t\t\tstatusText: string;\r\n\t\t};\r\n\treturn (\r\n\t\t<WithAppBar location={status}>\r\n\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t<Box padding={4}>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tcomponent=\"h1\"\r\n\t\t\t\t\t\tvariant=\"h1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tparagraph\r\n\t\t\t\t\t\tcomponent=\"p\"\r\n\t\t\t\t\t\tvariant=\"body1\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{statusText}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Box>\r\n\t\t\t</Container>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { GenericSelectOption } from \"~types/generics\";\r\n\r\nexport const ISSUE_FILTER_PREF_STATE_KEY =\r\n\t\"issue-filter-pref-state\";\r\n\r\nexport const ISSUE_FILTER_PREF_OWNER_TYPE_KEY =\r\n\t\"issue-filter-pref-owner-type\";\r\n\r\nexport const ISSUE_FILTER_STATE_OPTIONS: GenericSelectOption<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Open\",\r\n\t\t\tvalue: \"open\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Closed\",\r\n\t\t\tvalue: \"closed\",\r\n\t\t},\r\n\t];\r\n\r\nexport const ISSUE_FILTER_OWNER_TYPE_OPTIONS: GenericSelectOption<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Bot\",\r\n\t\t\tvalue: \"Bot\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"User\",\r\n\t\t\tvalue: \"User\",\r\n\t\t},\r\n\t];\r\n","import { GenericSelectOption } from \"~types/generics\";\r\n\r\nexport const REPO_FILTER_PREF_CUSTOM_PREFIX =\r\n\t\"repo-filter-pref-custom-prefix\";\r\n\r\nexport const REPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY =\r\n\t\"repo-filter-pref-topic-match-strategy\";\r\nexport const REPO_FILTER_PREF_VISIBILITY_KEY =\r\n\t\"repo-filter-pref-visibility\";\r\nexport const REPO_FILTER_PREF_STATUS_KEY =\r\n\t\"repo-filter-pref-status\";\r\n\r\nexport const REPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS: GenericSelectOption<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"Match all\",\r\n\t\t\tvalue: \"Match all\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Match any\",\r\n\t\t\tvalue: \"Match any\",\r\n\t\t},\r\n\t];\r\n\r\nexport const REPO_FILTER_VISIBILITY_OPTIONS: GenericSelectOption<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Private\",\r\n\t\t\tvalue: \"Private\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Public\",\r\n\t\t\tvalue: \"Public\",\r\n\t\t},\r\n\t];\r\n\r\nexport const REPO_FILTER_STATUS_OPTIONS: GenericSelectOption<string>[] =\r\n\t[\r\n\t\t{\r\n\t\t\tlabel: \"All\",\r\n\t\t\tvalue: \"All\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Active\",\r\n\t\t\tvalue: \"Active\",\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: \"Archived\",\r\n\t\t\tvalue: \"Archived\",\r\n\t\t},\r\n\t];\r\n","export const orderByString = (\r\n\ta: string | null | undefined,\r\n\tb: string | null | undefined,\r\n): number => {\r\n\t// moves nullish values to the end\r\n\r\n\tconst a_ = a ?? false;\r\n\tconst b_ = b ?? false;\r\n\tif (!a_ && b_) {\r\n\t\treturn 1;\r\n\t}\r\n\tif (!a_ && !b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\treturn b!.localeCompare(a!);\r\n};\r\n\r\nexport const orderByBoolean = (\r\n\ta: boolean | null | undefined,\r\n\tb: boolean | null | undefined,\r\n) => {\r\n\tconst a_ = Boolean(a);\r\n\tconst b_ = Boolean(b);\r\n\tif (a_ === b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\treturn 1;\r\n};\r\n\r\nexport const orderByNumber = (\r\n\ta: number | null | undefined,\r\n\tb: number | null | undefined,\r\n) => {\r\n\tconst a_ = a ?? false;\r\n\tconst b_ = b ?? false;\r\n\tif (!a_ && b_) {\r\n\t\treturn 1;\r\n\t}\r\n\tif (!a_ && !b_) {\r\n\t\treturn 0;\r\n\t}\r\n\tif (a_ && !b_) {\r\n\t\treturn -1;\r\n\t}\r\n\r\n\treturn b! - a!;\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const timeSince = (\r\n\tdateString: string | undefined | null,\r\n\tfallback: string = \"-\",\r\n) => {\r\n\tif (\r\n\t\tdateString === undefined ||\r\n\t\tdateString === null ||\r\n\t\tdateString === \"\"\r\n\t) {\r\n\t\treturn fallback;\r\n\t}\r\n\r\n\treturn moment(dateString).fromNow();\r\n};\r\n\r\nexport const normalizeDateString = (\r\n\tdateString: string | undefined | null,\r\n\tfallback: string = \"-\",\r\n) => {\r\n\tif (\r\n\t\tdateString === undefined ||\r\n\t\tdateString === null ||\r\n\t\tdateString === \"\"\r\n\t) {\r\n\t\treturn fallback;\r\n\t}\r\n\r\n\treturn moment(dateString).format(\r\n\t\t\"MMMM Do YYYY\",\r\n\t);\r\n};\r\n\r\nexport const toTimeStamp = (\r\n\tdateString: string | null | undefined,\r\n\tfallback: string,\r\n) => {\r\n\tif (\r\n\t\tdateString === undefined ||\r\n\t\tdateString === null ||\r\n\t\tdateString === \"\"\r\n\t) {\r\n\t\treturn fallback;\r\n\t}\r\n\tconst timeAt = normalizeDateString(dateString);\r\n\tconst delta = timeSince(dateString);\r\n\treturn `${timeAt} (${delta})`;\r\n};\r\n","import {\r\n\tISSUE_FILTER_PREF_OWNER_TYPE_KEY,\r\n\tISSUE_FILTER_PREF_STATE_KEY,\r\n\tREPO_FILTER_PREF_CUSTOM_PREFIX,\r\n\tREPO_FILTER_PREF_STATUS_KEY,\r\n\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n} from \"~constants\";\r\n\r\n/////////////////////////////////////////////\r\n// Repo filter preferences\r\n\r\nexport const getRepoFilterPrefPropertyPrefix =\r\n\t() => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_CUSTOM_PREFIX,\r\n\t\t);\r\n\t\tif (data !== null && data !== \"\") {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"phospho-\";\r\n\t};\r\nexport const getRepoFilterPrefVisibility =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setRepoFilterPrefVisibility = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tREPO_FILTER_PREF_VISIBILITY_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getRepoFilterPrefStatus =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_STATUS_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setRepoFilterPrefStatus = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tREPO_FILTER_PREF_STATUS_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getRepoFilterPrefTopicMatchStrategy =\r\n\t() => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"Match all\";\r\n\t};\r\nexport const setRepoFilterPrefTopicMatchStrategy =\r\n\t(value: string) => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\tREPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY,\r\n\t\t\tvalue,\r\n\t\t);\r\n\t};\r\nexport const setRepoFilterPrefCustomPrefix = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tREPO_FILTER_PREF_CUSTOM_PREFIX,\r\n\t\tvalue,\r\n\t);\r\n};\r\n\r\n/////////////////////////////////////////////\r\n// Issues filter preferences\r\nexport const getIssueFilterPrefState =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\tISSUE_FILTER_PREF_STATE_KEY,\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"All\";\r\n\t};\r\nexport const setIssueFilterPrefState = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tISSUE_FILTER_PREF_STATE_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\nexport const getIssueFilterPrefOwnerType =\r\n\t(): string => {\r\n\t\tconst data = localStorage.getItem(\r\n\t\t\t\"issue-filter-pref-owner-type\",\r\n\t\t);\r\n\t\tif (data !== null) {\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\treturn \"User\";\r\n\t};\r\nexport const setIssueFilterPrefOwnerType = (\r\n\tvalue: string,\r\n) => {\r\n\tlocalStorage.setItem(\r\n\t\tISSUE_FILTER_PREF_OWNER_TYPE_KEY,\r\n\t\tvalue,\r\n\t);\r\n};\r\n","import {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTableSortLabel,\r\n} from \"@mui/material\";\r\nimport {\r\n\tMouseEvent,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport { GenericDataCell } from \"~types/generics\";\r\n\r\ntype StyledTableHeadProps<T> = {\r\n\torder: \"asc\" | \"desc\";\r\n\torderBy: keyof T;\r\n\tonRequestSort: (value: keyof T) => void;\r\n\tcolumnDefinition: GenericDataCell<T>[];\r\n};\r\nconst StyledTableHead = <T,>(\r\n\tprops: StyledTableHeadProps<T>,\r\n) => {\r\n\tconst {\r\n\t\torder,\r\n\t\torderBy,\r\n\t\tonRequestSort,\r\n\t\tcolumnDefinition,\r\n\t} = props;\r\n\r\n\tconst createSortHandler =\r\n\t\t(property: keyof T) =>\r\n\t\t(_: MouseEvent<unknown>) => {\r\n\t\t\tonRequestSort(property);\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<TableHead>\r\n\t\t\t<TableRow>\r\n\t\t\t\t{columnDefinition.map(\r\n\t\t\t\t\t({ id, label }, index) => (\r\n\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\tkey={`cell-${index}`}\r\n\t\t\t\t\t\t\tsortDirection={\r\n\t\t\t\t\t\t\t\torderBy === id ? order : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TableSortLabel\r\n\t\t\t\t\t\t\t\tactive={orderBy === id}\r\n\t\t\t\t\t\t\t\tdirection={\r\n\t\t\t\t\t\t\t\t\torderBy === id ? order : \"asc\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tonClick={createSortHandler(id)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t</TableSortLabel>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t),\r\n\t\t\t\t)}\r\n\t\t\t</TableRow>\r\n\t\t</TableHead>\r\n\t);\r\n};\r\n\r\ntype StyledTableRowProps<T> = {\r\n\titem: T;\r\n\tcolumnDefinition: GenericDataCell<T>[];\r\n};\r\nconst StyledTableRow = <T,>(\r\n\tprops: StyledTableRowProps<T>,\r\n) => {\r\n\tconst { item, columnDefinition } = props;\r\n\r\n\treturn (\r\n\t\t<TableRow>\r\n\t\t\t{columnDefinition.map(\r\n\t\t\t\t({ render }, index) => (\r\n\t\t\t\t\t<TableCell key={`data-cell-${index}`}>\r\n\t\t\t\t\t\t{render(item)}\r\n\t\t\t\t\t</TableCell>\r\n\t\t\t\t),\r\n\t\t\t)}\r\n\t\t</TableRow>\r\n\t);\r\n};\r\n\r\ntype StyledDataTableProps<T> = {\r\n\titems: T[];\r\n\tcolumnDefinition: GenericDataCell<T>[];\r\n\tdefaultOrderBy: keyof T;\r\n\torderingFn: (\r\n\t\tproperty: keyof T,\r\n\t) => ((a: T, b: T) => number) | undefined;\r\n};\r\nexport const StyledDataTable = <T,>(\r\n\tprops: StyledDataTableProps<T>,\r\n) => {\r\n\tconst {\r\n\t\torderingFn,\r\n\t\titems,\r\n\t\tcolumnDefinition,\r\n\t\tdefaultOrderBy: orderBy,\r\n\t} = props;\r\n\r\n\tconst [order, setOrder] = useState<\r\n\t\t\"asc\" | \"desc\"\r\n\t>(\"desc\");\r\n\tconst [orderBy_, setOrderBy] =\r\n\t\tuseState(orderBy);\r\n\r\n\tconst handleRequestSort = (\r\n\t\tproperty: keyof T,\r\n\t) => {\r\n\t\tconst isAsc =\r\n\t\t\torderBy_ === property && order === \"asc\";\r\n\t\tsetOrder(isAsc ? \"desc\" : \"asc\");\r\n\t\tsetOrderBy(property);\r\n\t};\r\n\r\n\tconst items_ = useMemo(() => {\r\n\t\tconst orderFn:\r\n\t\t\t| ((a: T, b: T) => number)\r\n\t\t\t| undefined = orderingFn(orderBy_);\r\n\r\n\t\tif (orderFn === undefined) {\r\n\t\t\treturn items;\r\n\t\t}\r\n\t\tconst orderedItems_ = [...items];\r\n\t\torderedItems_.sort(orderFn);\r\n\t\tif (order === \"asc\") {\r\n\t\t\torderedItems_.reverse();\r\n\t\t}\r\n\t\treturn orderedItems_;\r\n\t}, [order, orderBy_, items]);\r\n\r\n\treturn (\r\n\t\t<TableContainer>\r\n\t\t\t<Table>\r\n\t\t\t\t<StyledTableHead\r\n\t\t\t\t\tcolumnDefinition={columnDefinition}\r\n\t\t\t\t\tonRequestSort={handleRequestSort}\r\n\t\t\t\t\torder={order}\r\n\t\t\t\t\torderBy={orderBy_}\r\n\t\t\t\t/>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{items_.map((item, index) => (\r\n\t\t\t\t\t\t<StyledTableRow\r\n\t\t\t\t\t\t\tkey={`data-cell-item-${index}`}\r\n\t\t\t\t\t\t\titem={item}\r\n\t\t\t\t\t\t\tcolumnDefinition={columnDefinition}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n};\r\n","import {\r\n\tMenuItem,\r\n\tSelect,\r\n\tSelectProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\ntype StyledSelectProps = SelectProps<string> & {\r\n\toptions?: { label: string; value: string }[];\r\n};\r\nexport const StyledSelect: FC<\r\n\tStyledSelectProps\r\n> = (props) => {\r\n\tconst { options, ...rest } = props;\r\n\tconst options_ = options ?? [];\r\n\treturn (\r\n\t\t<Select {...rest}>\r\n\t\t\t{options_.map(({ value, label }, index) => (\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tkey={`${value}-${index}`}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n};\r\n","import {\r\n\tMenuItem,\r\n\tSelect,\r\n\tSelectProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\n\r\ntype StyledSelectMultipleProps = Omit<\r\n\tSelectProps<string[]>,\r\n\t\"multiple\"\r\n> & {\r\n\toptions?: GenericSelectOption<string>[];\r\n};\r\nexport const StyledSelectMultiple: FC<\r\n\tStyledSelectMultipleProps\r\n> = (props) => {\r\n\tconst { options: loadedOptions, ...rest } =\r\n\t\tprops;\r\n\r\n\tlet options: GenericSelectOption<string>[] = [\r\n\t\t{ label: \"No option\", value: \"No option\" },\r\n\t];\r\n\tlet disableOptions = true;\r\n\tif (\r\n\t\tloadedOptions !== undefined &&\r\n\t\tloadedOptions.length > 0\r\n\t) {\r\n\t\toptions = loadedOptions;\r\n\t\tdisableOptions = false;\r\n\t}\r\n\treturn (\r\n\t\t<Select\r\n\t\t\t{...rest}\r\n\t\t\tmultiple\r\n\t\t>\r\n\t\t\t{options.map(({ value, label }, index) => (\r\n\t\t\t\t<MenuItem\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tdisabled={disableOptions}\r\n\t\t\t\t\tkey={`${value}-${index}`}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</MenuItem>\r\n\t\t\t))}\r\n\t\t</Select>\r\n\t);\r\n};\r\n","import {\r\n\tTextField,\r\n\tTextFieldProps,\r\n} from \"@mui/material\";\r\nimport {\r\n\tChangeEvent,\r\n\tFC,\r\n\tKeyboardEvent,\r\n} from \"react\";\r\n\r\ntype StyledTextFieldProps = Omit<\r\n\tTextFieldProps,\r\n\t\"onChange\"\r\n> & {\r\n\tonEnter?: () => void;\r\n\tonChange?: (v: string) => void;\r\n};\r\nexport const StyledTextField: FC<\r\n\tStyledTextFieldProps\r\n> = (props) => {\r\n\tconst { onEnter, onChange, ...rest } = props;\r\n\r\n\tconst handleKeyUp = (\r\n\t\te: KeyboardEvent<HTMLDivElement>,\r\n\t) => {\r\n\t\tif (\r\n\t\t\te.key === \"Enter\" &&\r\n\t\t\tonEnter !== undefined\r\n\t\t) {\r\n\t\t\tconsole.log(\"entered\");\r\n\t\t\tonEnter();\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\tconst handleChange = (\r\n\t\te: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tif (onChange !== undefined) {\r\n\t\t\tonChange(e.target.value.normalize());\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\t{...rest}\r\n\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n","import {\r\n\tClearRounded,\r\n\tExpandLessRounded,\r\n\tExpandMoreRounded,\r\n\tFilterListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tCollapse,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tSelectChangeEvent,\r\n\tStack,\r\n\tToolbar,\r\n\tTypography,\r\n\tcapitalize,\r\n} from \"@mui/material\";\r\nimport {\r\n\tFC,\r\n\tFragment,\r\n\tReactNode,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tLink,\r\n\tuseSubmit,\r\n} from \"react-router-dom\";\r\nimport {\r\n\tISSUE_FILTER_OWNER_TYPE_OPTIONS,\r\n\tISSUE_FILTER_STATE_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\torderByNumber,\r\n\torderByString,\r\n} from \"~core/sorting\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\nimport { RepoIssueSchema } from \"~types/schemas\";\r\nimport { StyledDataTable } from \"./StyledDataTable\";\r\nimport { StyledSelect } from \"./StyledSelect\";\r\nimport { StyledSelectMultiple } from \"./StyledSelectMultiple\";\r\nimport { StyledTextField } from \"./StyledTextField\";\r\n\r\ntype HeadCell = {\r\n\tid: keyof RepoIssueSchema;\r\n\tlabel: string;\r\n\trender: (issue: RepoIssueSchema) => ReactNode;\r\n};\r\nconst COLUMN_DEFINITION: HeadCell[] = [\r\n\t{\r\n\t\tid: \"title\",\r\n\t\tlabel: \"Title\",\r\n\t\trender: (issue) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={`/repositories/${issue.repo_full_name}/issues/${issue.issue_number}`}\r\n\t\t\t>\r\n\t\t\t\t{issue.title}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"repo_full_name\",\r\n\t\tlabel: \"Repository\",\r\n\t\trender: (issue) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={`/repositories/${issue.repo_full_name}`}\r\n\t\t\t>\r\n\t\t\t\t{issue.repo_full_name}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"issue_number\",\r\n\t\tlabel: \"Issue number\",\r\n\t\trender: (issue) => issue.issue_number,\r\n\t},\r\n\t{\r\n\t\tid: \"owner_type\",\r\n\t\tlabel: \"Type\",\r\n\t\trender: (issue) => issue.owner_type,\r\n\t},\r\n\t{\r\n\t\tid: \"state\",\r\n\t\tlabel: \"State\",\r\n\t\trender: (issue) => capitalize(issue.state),\r\n\t},\r\n\t{\r\n\t\tid: \"updated_at\",\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (issue) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\tissue.updated_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"created_at\",\r\n\t\tlabel: \"Created\",\r\n\t\trender: (issue) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\tissue.created_at,\r\n\t\t\t\t\"Unknown\",\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\nconst getOrderingFn = (\r\n\tproperty: keyof RepoIssueSchema,\r\n) => {\r\n\tlet orderFn:\r\n\t\t| ((\r\n\t\t\t\ta: RepoIssueSchema,\r\n\t\t\t\tb: RepoIssueSchema,\r\n\t\t  ) => number)\r\n\t\t| undefined;\r\n\tswitch (property) {\r\n\t\tcase \"issue_number\":\r\n\t\t\torderFn = (a, b) => {\r\n\t\t\t\treturn orderByNumber(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| number\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| number\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase \"title\":\r\n\t\tcase \"repo_full_name\":\r\n\t\tcase \"owner_type\":\r\n\t\tcase \"state\":\r\n\t\tcase \"created_at\":\r\n\t\tcase \"updated_at\":\r\n\t\t\torderFn = (a, b) => {\r\n\t\t\t\treturn orderByString(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\t\t};\r\n\t}\r\n\treturn orderFn;\r\n};\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren: ReactNode;\r\n\ttext: string;\r\n};\r\nconst WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { text, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\ntype StyledToolbarProps = {\r\n\ttitle: string;\r\n\trepoFullNames: string[];\r\n\townerType: string;\r\n\tstate: string;\r\n\titemCount: number;\r\n\trepoOptions: GenericSelectOption<string>[];\r\n};\r\nconst StyledToolbar: FC<StyledToolbarProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t\ttitle: loadedTitle,\r\n\t\titemCount,\r\n\t\trepoOptions,\r\n\t} = props;\r\n\r\n\tconst submit = useSubmit();\r\n\tconst [title, setTitle] = useState(loadedTitle);\r\n\tconst handleSubmit = (\r\n\t\tkey: string | undefined = undefined,\r\n\t\tvalue: string | undefined = undefined,\r\n\t) => {\r\n\t\tconst query: Record<\r\n\t\t\tstring,\r\n\t\t\tstring | string[]\r\n\t\t> = {\r\n\t\t\ttitle,\r\n\t\t\tstate,\r\n\t\t\townerType,\r\n\t\t\trepoFullNames,\r\n\t\t};\r\n\t\tif (\r\n\t\t\tkey !== undefined &&\r\n\t\t\tvalue !== undefined\r\n\t\t) {\r\n\t\t\tquery[key] = value;\r\n\t\t}\r\n\t\tsubmit(query, {\r\n\t\t\taction: \"./\",\r\n\t\t\tmethod: \"get\",\r\n\t\t});\r\n\t};\r\n\tconst handleOwnerTypeChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\"ownerType\", value);\r\n\t};\r\n\tconst handleStateChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\"state\", value);\r\n\t};\r\n\tconst handleRepoFullNamesChange = (\r\n\t\tevent: SelectChangeEvent<string[]>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\r\n\t\t\t\"repoFullNames\",\r\n\t\t\tvalue.toString(),\r\n\t\t);\r\n\t};\r\n\tconst handleRepoFullNamesReset = () => {\r\n\t\thandleSubmit(\"repoFullNames\", \"\");\r\n\t};\r\n\r\n\tconst [filterOpen, setFilterOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleFilter = () => {\r\n\t\tsetFilterOpen(!filterOpen);\r\n\t};\r\n\r\n\tlet itemCountMsg = `Showing ${itemCount}`;\r\n\tif (itemCount === 1) {\r\n\t\titemCountMsg = `${itemCountMsg} issue`;\r\n\t} else {\r\n\t\titemCountMsg = `${itemCountMsg} issues`;\r\n\t}\r\n\r\n\tlet expandIcon = filterOpen ? (\r\n\t\t<ExpandLessRounded />\r\n\t) : (\r\n\t\t<ExpandMoreRounded />\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\tgap: 1,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\"Search issue\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={setTitle}\r\n\t\t\t\t\t\tonEnter={handleSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FilterListRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleFilter}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{expandIcon}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Typography>{itemCountMsg}</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Collapse in={filterOpen}>\r\n\t\t\t\t<List disablePadding>\r\n\t\t\t\t\t<WrappableListItem text=\"Repositories\">\r\n\t\t\t\t\t\t<StyledSelectMultiple\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\trenderValue={() =>\r\n\t\t\t\t\t\t\t\t`${repoFullNames.length} selected`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={repoFullNames}\r\n\t\t\t\t\t\t\toptions={repoOptions}\r\n\t\t\t\t\t\t\tonChange={handleRepoFullNamesChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={handleRepoFullNamesReset}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"State\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={state}\r\n\t\t\t\t\t\t\toptions={ISSUE_FILTER_STATE_OPTIONS}\r\n\t\t\t\t\t\t\tonChange={handleStateChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Owner type\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={ownerType}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tISSUE_FILTER_OWNER_TYPE_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={handleOwnerTypeChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Collapse>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\ntype IssueDataTableProps = {\r\n\tdisableFilter?: boolean;\r\n\torderBy?: keyof RepoIssueSchema;\r\n\tissues: RepoIssueSchema[];\r\n\ttitle?: string;\r\n\townerType?: string;\r\n\trepoFullNames?: string[];\r\n\tstate?: string;\r\n\trepoOptions?: GenericSelectOption<string>[];\r\n};\r\nexport const IssueDataTable: React.FC<\r\n\tIssueDataTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\torderBy,\r\n\t\tdisableFilter,\r\n\t\tissues,\r\n\t\trepoOptions: loadedRepoOptions,\r\n\t\ttitle: loadedTitle,\r\n\t\trepoFullNames: loadedRepoFullNames,\r\n\t\townerType: loadedOwnerType,\r\n\t\tstate: loadedState,\r\n\t} = props;\r\n\r\n\tconst title = loadedTitle ?? \"\";\r\n\tconst repoFullNames = loadedRepoFullNames ?? [];\r\n\tconst ownerType =\r\n\t\tloadedOwnerType ??\r\n\t\tgetIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tloadedState ?? getIssueFilterPrefState();\r\n\tconst repoOptions = loadedRepoOptions ?? [];\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t{!disableFilter && (\r\n\t\t\t\t<StyledToolbar\r\n\t\t\t\t\titemCount={issues.length}\r\n\t\t\t\t\townerType={ownerType}\r\n\t\t\t\t\trepoFullNames={repoFullNames}\r\n\t\t\t\t\trepoOptions={repoOptions}\r\n\t\t\t\t\tstate={state}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<StyledDataTable\r\n\t\t\t\titems={issues}\r\n\t\t\t\tcolumnDefinition={COLUMN_DEFINITION}\r\n\t\t\t\tdefaultOrderBy={orderBy ?? \"updated_at\"}\r\n\t\t\t\torderingFn={getOrderingFn}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import {\r\n\tClearRounded,\r\n\tExpandLessRounded,\r\n\tExpandMoreRounded,\r\n\tFilterListRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tCollapse,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tSelectChangeEvent,\r\n\tStack,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport {\r\n\tREPO_FILTER_STATUS_OPTIONS,\r\n\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS,\r\n\tREPO_FILTER_VISIBILITY_OPTIONS,\r\n} from \"constants/REPO_FILTER_OPTIONS\";\r\nimport {\r\n\tFC,\r\n\tFragment,\r\n\tReactNode,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tLink,\r\n\tuseSubmit,\r\n} from \"react-router-dom\";\r\nimport {\r\n\torderByBoolean,\r\n\torderByString,\r\n} from \"~core/sorting\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tgetRepoFilterPrefPropertyPrefix,\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\nimport { StyledDataTable } from \"./StyledDataTable\";\r\nimport { StyledSelect } from \"./StyledSelect\";\r\nimport { StyledSelectMultiple } from \"./StyledSelectMultiple\";\r\nimport { StyledTextField } from \"./StyledTextField\";\r\n\r\ntype DataCell = {\r\n\tid: keyof RepoSchema;\r\n\tlabel: string;\r\n\trender: (repo: RepoSchema) => ReactNode;\r\n};\r\nconst COLUMN_DEFINITION: DataCell[] = [\r\n\t{\r\n\t\tid: \"full_name\",\r\n\t\tlabel: \"Name\",\r\n\t\trender: (repo) => (\r\n\t\t\t<Typography\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={`/repositories/${repo.full_name}`}\r\n\t\t\t>\r\n\t\t\t\t{repo.full_name}\r\n\t\t\t</Typography>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"is_archived\",\r\n\t\tlabel: \"Status\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_archived ? \"Archived\" : \"Active\",\r\n\t},\r\n\t{\r\n\t\tid: \"is_private\",\r\n\t\tlabel: \"Visibility\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Private\" : \"Public\",\r\n\t},\r\n\t{\r\n\t\tid: \"pushed_at\",\r\n\t\tlabel: \"Last pushed\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.pushed_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"updated_at\",\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.updated_at,\r\n\t\t\t\t\"Never\",\r\n\t\t\t),\r\n\t},\r\n\t{\r\n\t\tid: \"created_at\",\r\n\t\tlabel: \"Created\",\r\n\t\trender: (repo) =>\r\n\t\t\tnormalizeDateString(\r\n\t\t\t\trepo.created_at,\r\n\t\t\t\t\"Unknown\",\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\nconst getOrderingFn = (\r\n\tproperty: keyof RepoSchema,\r\n):\r\n\t| ((a: RepoSchema, b: RepoSchema) => number)\r\n\t| undefined => {\r\n\tswitch (property) {\r\n\t\tcase \"is_archived\":\r\n\t\tcase \"is_private\":\r\n\t\t\treturn (a, b) =>\r\n\t\t\t\torderByBoolean(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| boolean\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| boolean\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t\tcase \"full_name\":\r\n\t\tcase \"pushed_at\":\r\n\t\tcase \"created_at\":\r\n\t\tcase \"updated_at\":\r\n\t\t\treturn (a, b) =>\r\n\t\t\t\torderByString(\r\n\t\t\t\t\ta[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t\tb[property] as\r\n\t\t\t\t\t\t| string\r\n\t\t\t\t\t\t| undefined\r\n\t\t\t\t\t\t| null,\r\n\t\t\t\t);\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren: ReactNode;\r\n\ttext: string;\r\n};\r\nconst WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { text, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{text}\r\n\t\t\t\t</ListItemText>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n\r\ntype StyledToolbarProps = {\r\n\tname: string;\r\n\ttopics: string[];\r\n\tvisibility: string;\r\n\tstatus: string;\r\n\ttopicMatchStrategy: string;\r\n\titemCount: number;\r\n\ttopicOptions: GenericSelectOption<string>[];\r\n\tproperties: string[];\r\n\tpropertyOptions: GenericSelectOption<string>[];\r\n};\r\nconst StyledToolbar: FC<StyledToolbarProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\tname: loadedName,\r\n\t\tstatus,\r\n\t\ttopics,\r\n\t\tvisibility,\r\n\t\ttopicMatchStrategy,\r\n\t\titemCount,\r\n\t\ttopicOptions,\r\n\t\tpropertyOptions,\r\n\t\tproperties,\r\n\t} = props;\r\n\r\n\tconst submit = useSubmit();\r\n\r\n\tconst [name, setName] = useState(loadedName);\r\n\tconst handleSubmit = (\r\n\t\tkey: string | undefined = undefined,\r\n\t\tvalue: string | undefined = undefined,\r\n\t) => {\r\n\t\tconst query: Record<\r\n\t\t\tstring,\r\n\t\t\tstring | string[]\r\n\t\t> = {\r\n\t\t\tname,\r\n\t\t\ttopics,\r\n\t\t\ttopicMatchStrategy,\r\n\t\t\tvisibility,\r\n\t\t\tstatus,\r\n\t\t\tproperties,\r\n\t\t};\r\n\t\tif (\r\n\t\t\tkey !== undefined &&\r\n\t\t\tvalue !== undefined\r\n\t\t) {\r\n\t\t\tquery[key] = value;\r\n\t\t}\r\n\t\tsubmit(query, {\r\n\t\t\taction: \"./\",\r\n\t\t\tmethod: \"get\",\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleNameSubmit = () => {\r\n\t\thandleSubmit(\"name\", name);\r\n\t};\r\n\tconst handleTopicMatchStrategyChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\"topicMatchStrategy\", value);\r\n\t};\r\n\tconst handleStatusChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\"status\", value);\r\n\t};\r\n\tconst handleVisibilityChange = (\r\n\t\tevent: SelectChangeEvent<string>,\r\n\t) => {\r\n\t\tconst value = event.target.value;\r\n\t\thandleSubmit(\"visibility\", value);\r\n\t};\r\n\tconst handleTopicChange = (\r\n\t\tevent: SelectChangeEvent<string[]>,\r\n\t) => {\r\n\t\tconst value = event.target.value.toString();\r\n\t\thandleSubmit(\"topics\", value);\r\n\t};\r\n\tconst handleTopicClear = () => {\r\n\t\thandleSubmit(\"topics\", \"\");\r\n\t};\r\n\tconst handlePropertyChange = (\r\n\t\tevent: SelectChangeEvent<string[]>,\r\n\t) => {\r\n\t\tconst value = event.target.value.toString();\r\n\t\thandleSubmit(\"properties\", value);\r\n\t};\r\n\tconst handlePropertyClear = () => {\r\n\t\thandleSubmit(\"properties\", \"\");\r\n\t};\r\n\r\n\tconst [filterOpen, setFilterOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleFilter = () => {\r\n\t\tsetFilterOpen(!filterOpen);\r\n\t};\r\n\r\n\tlet itemCountMsg = `Showing ${itemCount}`;\r\n\tif (itemCount === 1) {\r\n\t\titemCountMsg = `${itemCountMsg} repository`;\r\n\t} else {\r\n\t\titemCountMsg = `${itemCountMsg} repositories`;\r\n\t}\r\n\r\n\tconst expandIcon = filterOpen ? (\r\n\t\t<ExpandLessRounded />\r\n\t) : (\r\n\t\t<ExpandMoreRounded />\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t\tgap: 1,\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tdirection=\"row\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tplaceholder=\"Search repository\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={setName}\r\n\t\t\t\t\t\tonEnter={handleNameSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={() => handleSubmit()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FilterListRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={toggleFilter}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{expandIcon}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Typography>{itemCountMsg}</Typography>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Collapse in={filterOpen}>\r\n\t\t\t\t<List disablePadding>\r\n\t\t\t\t\t<WrappableListItem text=\"Properties\">\r\n\t\t\t\t\t\t<StyledSelectMultiple\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\trenderValue={() =>\r\n\t\t\t\t\t\t\t\t`${properties.length} selected`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={properties}\r\n\t\t\t\t\t\t\toptions={propertyOptions}\r\n\t\t\t\t\t\t\tonChange={handlePropertyChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={handlePropertyClear}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Topics\">\r\n\t\t\t\t\t\t<StyledSelectMultiple\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\trenderValue={() =>\r\n\t\t\t\t\t\t\t\t`${topics.length} selected`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={topics}\r\n\t\t\t\t\t\t\toptions={topicOptions}\r\n\t\t\t\t\t\t\tonChange={handleTopicChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tonClick={handleTopicClear}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Topic match strategy\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={topicMatchStrategy}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\t\thandleTopicMatchStrategyChange\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Visibility\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={visibility}\r\n\t\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\t\tREPO_FILTER_VISIBILITY_OPTIONS\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonChange={handleVisibilityChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t\t<WrappableListItem text=\"Status\">\r\n\t\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\t\toptions={REPO_FILTER_STATUS_OPTIONS}\r\n\t\t\t\t\t\t\tonChange={handleStatusChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t</List>\r\n\t\t\t</Collapse>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\ntype RepoDataTableProps = {\r\n\tdisableFilter?: boolean;\r\n\torderBy?: keyof RepoSchema;\r\n\trepos: RepoSchema[];\r\n\ttopicOptions?: GenericSelectOption<string>[];\r\n\tname?: string;\r\n\ttopics?: string[];\r\n\ttopicMatchStrategy?: string;\r\n\tvisibility?: string;\r\n\tstatus?: string;\r\n\tproperties?: string[];\r\n};\r\nexport const RepoDataTable: React.FC<\r\n\tRepoDataTableProps\r\n> = (props) => {\r\n\tconst {\r\n\t\torderBy,\r\n\t\tdisableFilter,\r\n\t\trepos,\r\n\t\ttopicOptions: loadedTopicOptions,\r\n\t\tname: loadedName,\r\n\t\ttopicMatchStrategy: loadedTopicMatchStrategy,\r\n\t\tstatus: loadedStatus,\r\n\t\ttopics: loadedTopics,\r\n\t\tvisibility: loadedVisibility,\r\n\t\tproperties: loadedProperties,\r\n\t} = props;\r\n\r\n\tconst name = loadedName ?? \"\";\r\n\tconst topicMatchStrategy =\r\n\t\tloadedTopicMatchStrategy ||\r\n\t\tgetRepoFilterPrefTopicMatchStrategy();\r\n\tconst visibility =\r\n\t\tloadedVisibility ||\r\n\t\tgetRepoFilterPrefVisibility();\r\n\tconst status =\r\n\t\tloadedStatus || getRepoFilterPrefStatus();\r\n\r\n\tconst propertyPrefix =\r\n\t\tgetRepoFilterPrefPropertyPrefix();\r\n\r\n\tconst topics: string[] = loadedTopics ?? [];\r\n\tconst properties: string[] =\r\n\t\tloadedProperties ?? [];\r\n\r\n\tconst topicOptions: GenericSelectOption<string>[] =\r\n\t\t[];\r\n\tconst propertyOptions: GenericSelectOption<string>[] =\r\n\t\t[];\r\n\tfor (const item of loadedTopicOptions ?? []) {\r\n\t\tif (item.value.startsWith(propertyPrefix)) {\r\n\t\t\tpropertyOptions.push(item);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ttopicOptions.push(item);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t{!disableFilter && (\r\n\t\t\t\t<StyledToolbar\r\n\t\t\t\t\titemCount={repos.length}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\ttopicMatchStrategy={topicMatchStrategy}\r\n\t\t\t\t\ttopics={topics}\r\n\t\t\t\t\tproperties={properties}\r\n\t\t\t\t\tvisibility={visibility}\r\n\t\t\t\t\ttopicOptions={topicOptions}\r\n\t\t\t\t\tpropertyOptions={propertyOptions}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<StyledDataTable\r\n\t\t\t\titems={repos}\r\n\t\t\t\torderingFn={getOrderingFn}\r\n\t\t\t\tdefaultOrderBy={orderBy ?? \"pushed_at\"}\r\n\t\t\t\tcolumnDefinition={COLUMN_DEFINITION}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n};\r\n","import {\r\n\tBreadcrumbs,\r\n\tBreadcrumbsProps,\r\n\tTypography,\r\n\tTypographyProps,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype StyledBreadcrumbs = {\r\n\tpath: string;\r\n\tbreadcrumbsProps?: BreadcrumbsProps;\r\n\ttypographyProps?: Omit<TypographyProps, \"ref\">;\r\n};\r\nexport const StyledBreadcrumbs: FC<\r\n\tStyledBreadcrumbs\r\n> = (props) => {\r\n\tconst {\r\n\t\tpath: path,\r\n\t\tbreadcrumbsProps,\r\n\t\ttypographyProps,\r\n\t} = props;\r\n\r\n\tconst paths = path.normalize().split(\"/\");\r\n\tconst _paths = paths\r\n\t\t.filter((path) => path.trim().length > 0)\r\n\t\t.map((path, index) => (\r\n\t\t\t<Typography\r\n\t\t\t\t{...typographyProps}\r\n\t\t\t\tkey={`${index}-${path}`}\r\n\t\t\t\tcolor=\"text.secondary\"\r\n\t\t\t\twhiteSpace=\"nowrap\"\r\n\t\t\t\tcomponent={Link}\r\n\t\t\t\tto={\r\n\t\t\t\t\t\"/\" +\r\n\t\t\t\t\tpaths.slice(1, index + 1).join(\"/\")\r\n\t\t\t\t}\r\n\t\t\t\tsx={{\r\n\t\t\t\t\ttextDecoration: \"none\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{path}\r\n\t\t\t</Typography>\r\n\t\t));\r\n\r\n\treturn (\r\n\t\t<Breadcrumbs {...breadcrumbsProps}>\r\n\t\t\t{_paths}\r\n\t\t</Breadcrumbs>\r\n\t);\r\n};\r\n","import {\r\n\tCard,\r\n\tCardHeader,\r\n\tStack,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { IssueDataTable } from \"~components/IssueDataTable\";\r\nimport { RepoDataTable } from \"~components/RepoDataTable\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nexport const HomePage: FC = () => {\r\n\tconst {\r\n\t\tactiveRepos,\r\n\t\tarchivedRepos,\r\n\t\tclosedIssues,\r\n\t\topenIssues,\r\n\t\trecentRepos,\r\n\t\trecentIssues,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath=\"~\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Stack\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tpadding={4}\r\n\t\t\t>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tgap={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1, minWidth: 250 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\ttitle={activeRepos}\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\tactiveRepos > 1\r\n\t\t\t\t\t\t\t\t\t? \"Active repositories\"\r\n\t\t\t\t\t\t\t\t\t: \"Active repositoriy\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttitleTypographyProps={{\r\n\t\t\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\t\t\tfontWeight: \"900\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1, minWidth: 250 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\ttitle={archivedRepos}\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\tarchivedRepos > 1\r\n\t\t\t\t\t\t\t\t\t? \"Archived repositories\"\r\n\t\t\t\t\t\t\t\t\t: \"Archived repositoriy\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttitleTypographyProps={{\r\n\t\t\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\t\t\tfontWeight: \"900\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1, minWidth: 250 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\ttitle={openIssues}\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\topenIssues > 1\r\n\t\t\t\t\t\t\t\t\t? \"Open issues\"\r\n\t\t\t\t\t\t\t\t\t: \"Open issue\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttitleTypographyProps={{\r\n\t\t\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\t\t\tfontWeight: \"900\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1, minWidth: 250 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\ttitle={closedIssues}\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\tclosedIssues > 1\r\n\t\t\t\t\t\t\t\t\t? \"Closed issues\"\r\n\t\t\t\t\t\t\t\t\t: \"Closed issue\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttitleTypographyProps={{\r\n\t\t\t\t\t\t\t\tcolor: \"secondary\",\r\n\t\t\t\t\t\t\t\tfontWeight: \"900\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontSize=\"large\"\r\n\t\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\t>\r\n\t\t\t\t\tRecent repositories\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<RepoDataTable\r\n\t\t\t\t\trepos={recentRepos}\r\n\t\t\t\t\torderBy=\"pushed_at\"\r\n\t\t\t\t\tdisableFilter\r\n\t\t\t\t/>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tfontSize=\"large\"\r\n\t\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\t>\r\n\t\t\t\t\tRecent issues\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<IssueDataTable\r\n\t\t\t\t\tissues={recentIssues}\r\n\t\t\t\t\torderBy=\"updated_at\"\r\n\t\t\t\t\tdisableFilter\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import {\r\n\tDBSchema,\r\n\tIDBPDatabase,\r\n\topenDB,\r\n} from \"idb\";\r\nimport {\r\n\tCollectionSchema,\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\ninterface Database extends DBSchema {\r\n\tcollections: {\r\n\t\tkey: string;\r\n\t\tvalue: CollectionSchema;\r\n\t};\r\n\trepos: {\r\n\t\tkey: string;\r\n\t\tvalue: RepoSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-full_name\": string;\r\n\t\t\t\"by-id\": number;\r\n\t\t};\r\n\t};\r\n\tissues: {\r\n\t\tkey: number;\r\n\t\tvalue: RepoIssueSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-repo_id\": number;\r\n\t\t};\r\n\t};\r\n\tissueComments: {\r\n\t\tkey: number;\r\n\t\tvalue: RepoIssueCommentSchema;\r\n\t\tindexes: {\r\n\t\t\t\"by-issue_id\": number;\r\n\t\t};\r\n\t};\r\n}\r\n\r\nconst db1 = (db: IDBPDatabase<Database>) => {\r\n\tconst repoStore = db.createObjectStore(\r\n\t\t\"repos\",\r\n\t\t{\r\n\t\t\tkeyPath: \"id\",\r\n\t\t\tautoIncrement: false,\r\n\t\t},\r\n\t);\r\n\trepoStore.createIndex(\r\n\t\t\"by-full_name\",\r\n\t\t\"full_name\",\r\n\t\t{\r\n\t\t\tunique: true,\r\n\t\t\tmultiEntry: false,\r\n\t\t},\r\n\t);\r\n\trepoStore.createIndex(\"by-id\", \"id\", {\r\n\t\tunique: true,\r\n\t\tmultiEntry: false,\r\n\t});\r\n\tconst issueStore = db.createObjectStore(\r\n\t\t\"issues\",\r\n\t\t{\r\n\t\t\tkeyPath: \"id\",\r\n\t\t\tautoIncrement: false,\r\n\t\t},\r\n\t);\r\n\tissueStore.createIndex(\r\n\t\t\"by-repo_id\",\r\n\t\t\"repo_id\",\r\n\t\t{ multiEntry: true, unique: false },\r\n\t);\r\n\tconst issueCommentStore = db.createObjectStore(\r\n\t\t\"issueComments\",\r\n\t\t{\r\n\t\t\tkeyPath: \"id\",\r\n\t\t\tautoIncrement: false,\r\n\t\t},\r\n\t);\r\n\tissueCommentStore.createIndex(\r\n\t\t\"by-issue_id\",\r\n\t\t\"issue_id\",\r\n\t\t{ multiEntry: true, unique: false },\r\n\t);\r\n};\r\n\r\nconst db2 = (db: IDBPDatabase<Database>) => {\r\n\tdb.createObjectStore(\"collections\", {\r\n\t\tkeyPath: \"name\",\r\n\t\tautoIncrement: false,\r\n\t});\r\n};\r\n\r\nexport const dbPromise = openDB<Database>(\r\n\t\"primary\",\r\n\t2,\r\n\t{\r\n\t\tupgrade(db, oldVersion) {\r\n\t\t\tif (oldVersion < 1) {\r\n\t\t\t\tdb1(db);\r\n\t\t\t}\r\n\t\t\tif (oldVersion < 2) {\r\n\t\t\t\tdb2(db);\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n);\r\n","import { Octokit } from \"octokit\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nconst getToken = () => {\r\n\tconst token = localStorage.getItem(\r\n\t\t\"personal-access-token\",\r\n\t);\r\n\tif (token === null) {\r\n\t\treturn \"-1\";\r\n\t}\r\n\treturn token;\r\n};\r\n\r\nconst getOctokit = () => {\r\n\tconst token = getToken();\r\n\treturn new Octokit({ auth: token });\r\n};\r\n\r\nexport const getRepo = async (\r\n\tfullName: string,\r\n) => {\r\n\tconst repos = await getRepos();\r\n\tfor (const repo of repos) {\r\n\t\tif (repo.full_name === fullName) {\r\n\t\t\treturn repo;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getRepos = async () => {\r\n\tconst octokit = getOctokit();\r\n\tconst pages = await octokit.paginate(\r\n\t\t\"GET /user/repos\",\r\n\t);\r\n\tconst req = pages.map(\r\n\t\tasync ({\r\n\t\t\tname,\r\n\t\t\tfull_name,\r\n\t\t\ttopics,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tdescription,\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\thomepage,\r\n\t\t\tpushed_at,\r\n\t\t\tarchived: is_archived,\r\n\t\t\tprivate: is_private,\r\n\t\t}) => ({\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\thomepage,\r\n\t\t\tpushed_at,\r\n\t\t\tname,\r\n\t\t\tfull_name,\r\n\t\t\tdescription,\r\n\t\t\ttopics,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tis_archived,\r\n\t\t\tis_private,\r\n\t\t\treadme: await getRepoReadMe(\r\n\t\t\t\tfull_name,\r\n\t\t\t).catch((err) => {\r\n\t\t\t\tif (err.status === 404) {\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthrow err;\r\n\t\t\t}),\r\n\t\t}),\r\n\t);\r\n\r\n\tconst repos: RepoSchema[] = await Promise.all(\r\n\t\treq,\r\n\t);\r\n\r\n\treturn repos;\r\n};\r\n\r\nconst getRepoReadMe = async (\r\n\tfullName: string,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst res = await ocktokit.request(\r\n\t\t\"GET /repos/{owner}/{repo}/readme\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t},\r\n\t);\r\n\treturn res.data.content;\r\n};\r\n\r\nexport const getRepoIssues = async (\r\n\tfullName: string,\r\n\trepoId: number,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst response = await ocktokit.paginate(\r\n\t\t\"GET /repos/{owner}/{repo}/issues\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t\tstate: \"all\",\r\n\t\t},\r\n\t);\r\n\tconst issues: RepoIssueSchema[] = response.map(\r\n\t\t({\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\tnumber: issue_number,\r\n\t\t\ttitle,\r\n\t\t\tstate,\r\n\t\t\tlocked,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tclosed_at,\r\n\t\t\tbody,\r\n\t\t\tuser,\r\n\t\t}) => ({\r\n\t\t\towner_type:\r\n\t\t\t\tuser === null ? null : user.type,\r\n\t\t\trepo_id: repoId,\r\n\t\t\trepo_full_name: fullName,\r\n\t\t\tid,\r\n\t\t\thtml_url,\r\n\t\t\tissue_number,\r\n\t\t\ttitle,\r\n\t\t\tstate,\r\n\t\t\tlocked,\r\n\t\t\tcreated_at,\r\n\t\t\tupdated_at,\r\n\t\t\tclosed_at,\r\n\t\t\tbody,\r\n\t\t}),\r\n\t);\r\n\treturn issues;\r\n};\r\n\r\nexport const getRepoIssueComment = async (\r\n\tfullName: string,\r\n\tissueNumber: number,\r\n\tissueId: number,\r\n) => {\r\n\tconst ocktokit = getOctokit();\r\n\tconst [owner, repo] = fullName.split(\"/\");\r\n\tconst response = await ocktokit.paginate(\r\n\t\t\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\",\r\n\t\t{\r\n\t\t\towner,\r\n\t\t\trepo,\r\n\t\t\tissue_number: issueNumber,\r\n\t\t},\r\n\t);\r\n\tconst comments: RepoIssueCommentSchema[] =\r\n\t\tresponse.map(\r\n\t\t\t({\r\n\t\t\t\tid,\r\n\t\t\t\thtml_url,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tbody,\r\n\t\t\t}) => ({\r\n\t\t\t\tissue_id: issueId,\r\n\t\t\t\thtml_url,\r\n\t\t\t\tid,\r\n\t\t\t\tcreated_at,\r\n\t\t\t\tupdated_at,\r\n\t\t\t\tbody,\r\n\t\t\t}),\r\n\t\t);\r\n\treturn comments;\r\n};\r\n","import { dbPromise } from \"~database/migration\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\nimport {\r\n\tgetRepoIssueComment,\r\n\tgetRepoIssues,\r\n\tgetRepos,\r\n} from \"./api\";\r\n\r\nexport const getCachedRepos = async () => {\r\n\treturn (await dbPromise).getAll(\"repos\");\r\n};\r\n\r\nexport const getCachedRepo = async (\r\n\tfullName: string,\r\n) => {\r\n\treturn (await dbPromise).getFromIndex(\r\n\t\t\"repos\",\r\n\t\t\"by-full_name\",\r\n\t\tfullName,\r\n\t);\r\n};\r\n\r\nexport const getCachedTopics = async () => {\r\n\tconst repos = await getCachedRepos();\r\n\tconst uniqueTopics = new Set<string>();\r\n\tfor (const repo of repos) {\r\n\t\tif (repo.topics === undefined) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor (const topic of repo.topics) {\r\n\t\t\tuniqueTopics.add(topic);\r\n\t\t}\r\n\t}\r\n\tconst topics = [...uniqueTopics];\r\n\ttopics.sort();\r\n\treturn topics;\r\n};\r\n\r\nexport const getCachedIssues = async () => {\r\n\treturn dbPromise.then((db) =>\r\n\t\tdb.getAll(\"issues\"),\r\n\t);\r\n};\r\n\r\nexport const getCachedRepoIssues = async (\r\n\trepoFullName: string,\r\n) => {\r\n\tconst repo = await getCachedRepo(repoFullName);\r\n\tif (repo === undefined) {\r\n\t\treturn [];\r\n\t}\r\n\treturn (await dbPromise).getAllFromIndex(\r\n\t\t\"issues\",\r\n\t\t\"by-repo_id\",\r\n\t\trepo.id,\r\n\t);\r\n};\r\n\r\nexport const getCachedRepoIssue = async (\r\n\trepoFullName: string,\r\n\tissueNumber: number,\r\n) => {\r\n\tconst issues = await getCachedRepoIssues(\r\n\t\trepoFullName,\r\n\t);\r\n\tfor (const issue of issues) {\r\n\t\tif (issue.issue_number === issueNumber) {\r\n\t\t\treturn issue;\r\n\t\t}\r\n\t}\r\n\treturn undefined;\r\n};\r\n\r\nexport const getCachedIssueComments = async (\r\n\tissueId: number,\r\n) => {\r\n\treturn (await dbPromise).getAllFromIndex(\r\n\t\t\"issueComments\",\r\n\t\t\"by-issue_id\",\r\n\t\tissueId,\r\n\t);\r\n};\r\n\r\nconst updateCachedRepos = async (\r\n\trepos: RepoSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\tconst req = repos.map((repo) =>\r\n\t\tdb.put(\"repos\", repo),\r\n\t);\r\n\tconst res = await Promise.all(req);\r\n\treturn res;\r\n};\r\n\r\nconst updateCachedRepoIssues = async (\r\n\tissues: RepoIssueSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\tconst req = issues.map((issue) =>\r\n\t\tdb.put(\"issues\", issue),\r\n\t);\r\n\tconst res = await Promise.all(req);\r\n\treturn res;\r\n};\r\n\r\nconst updateCachedRepoIssueComments = async (\r\n\tissueComments: RepoIssueCommentSchema[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\treturn await Promise.all(\r\n\t\tissueComments.map((comment) =>\r\n\t\t\tdb.put(\"issueComments\", comment),\r\n\t\t),\r\n\t);\r\n};\r\n\r\nexport const syncCachedRepos = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\treturn await getRepos().then(\r\n\t\t(res) => {\r\n\t\t\tupdateCachedRepos(res);\r\n\t\t\treturn [true];\r\n\t\t},\r\n\t\t(err) => {\r\n\t\t\tonFailure(err);\r\n\t\t\treturn [false];\r\n\t\t},\r\n\t);\r\n};\r\nexport const syncCachedRepoIssues = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\tconst cachedRepos = await getCachedRepos();\r\n\treturn await Promise.all(\r\n\t\tcachedRepos.map(async (repo) => {\r\n\t\t\treturn await getRepoIssues(\r\n\t\t\t\trepo.full_name,\r\n\t\t\t\trepo.id,\r\n\t\t\t).then(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tupdateCachedRepoIssues(res);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tonFailure(err);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}),\r\n\t);\r\n};\r\nexport const syncCachedRepoIssueComments = async (\r\n\tonFailure: (err: any) => void,\r\n) => {\r\n\tconst cachedIssues = await getCachedIssues();\r\n\treturn await Promise.all(\r\n\t\tcachedIssues.map(async (issue) => {\r\n\t\t\treturn await getRepoIssueComment(\r\n\t\t\t\tissue.repo_full_name,\r\n\t\t\t\tissue.issue_number,\r\n\t\t\t\tissue.id,\r\n\t\t\t).then(\r\n\t\t\t\t(res) => {\r\n\t\t\t\t\tupdateCachedRepoIssueComments(res);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\t(err) => {\r\n\t\t\t\t\tonFailure(err);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t);\r\n\t\t}),\r\n\t);\r\n};\r\n\r\nexport const getCollections = async () => {\r\n\tconst db = await dbPromise;\r\n\treturn await db.getAll(\"collections\");\r\n};\r\nexport const getCollection = async (\r\n\tname: string,\r\n) => {\r\n\tconst db = await dbPromise;\r\n\treturn await db.get(\"collections\", name);\r\n};\r\n\r\nexport const addCollection = async (\r\n\tname: string,\r\n\tdescription: string,\r\n\trepos: string[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\treturn db.add(\"collections\", {\r\n\t\tname,\r\n\t\tdescription,\r\n\t\trepos,\r\n\t});\r\n};\r\n\r\nexport const updateCollection = async (\r\n\tname: string,\r\n\tdescription: string,\r\n\trepos: string[],\r\n) => {\r\n\tconst db = await dbPromise;\r\n\treturn db.put(\"collections\", {\r\n\t\tname,\r\n\t\tdescription,\r\n\t\trepos,\r\n\t});\r\n};\r\n","import { LoaderFunction } from \"react-router-dom\";\r\nimport { orderByString } from \"~core/sorting\";\r\nimport {\r\n\tgetCachedIssues,\r\n\tgetCachedRepos,\r\n} from \"~database/cached\";\r\nimport {\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tactiveRepos: number;\r\n\tarchivedRepos: number;\r\n\topenIssues: number;\r\n\tclosedIssues: number;\r\n\trecentRepos: RepoSchema[];\r\n\trecentIssues: RepoIssueSchema[];\r\n};\r\nexport const loaderHome: LoaderFunction =\r\n\tasync (): Promise<LoaderData> => {\r\n\t\tdocument.title = \"~\";\r\n\r\n\t\tconst repos = await getCachedRepos();\r\n\t\tconst issues = (\r\n\t\t\tawait getCachedIssues()\r\n\t\t).filter(\r\n\t\t\t({ owner_type }) => owner_type === \"User\",\r\n\t\t);\r\n\r\n\t\tconst activeRepos = repos.filter(\r\n\t\t\t({ is_archived }) => !is_archived,\r\n\t\t).length;\r\n\t\tconst archivedRepos =\r\n\t\t\trepos.length - activeRepos;\r\n\r\n\t\tconst openIssues = issues.filter(\r\n\t\t\t({ state }) => state === \"open\",\r\n\t\t).length;\r\n\t\tconst closedIssues =\r\n\t\t\tissues.length - openIssues;\r\n\r\n\t\trepos.sort(\r\n\t\t\t({ pushed_at: a }, { pushed_at: b }) =>\r\n\t\t\t\torderByString(a, b),\r\n\t\t);\r\n\t\tissues.sort(\r\n\t\t\t({ updated_at: a }, { updated_at: b }) =>\r\n\t\t\t\torderByString(a, b),\r\n\t\t);\r\n\t\tconst recentRepos = repos.slice(0, 5);\r\n\t\tconst recentIssues = issues.slice(0, 5);\r\n\r\n\t\tconst loaderData: LoaderData = {\r\n\t\t\tactiveRepos,\r\n\t\t\tarchivedRepos,\r\n\t\t\topenIssues,\r\n\t\t\tclosedIssues,\r\n\t\t\trecentIssues,\r\n\t\t\trecentRepos,\r\n\t\t};\r\n\r\n\t\treturn loaderData;\r\n\t};\r\n","import rehypeDocument from \"rehype-document\";\r\nimport rehypeKatex from \"rehype-katex\";\r\nimport rehypeSanitize from \"rehype-sanitize\";\r\nimport rehypeStringify from \"rehype-stringify\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport remarkMath from \"remark-math\";\r\nimport remarkParse from \"remark-parse\";\r\nimport remarkRehype from \"remark-rehype\";\r\nimport { unified } from \"unified\";\r\n\r\nexport const parseMarkdown = (\r\n\tcontent: string,\r\n) => {\r\n\treturn unified()\r\n\t\t.use(remarkParse, {\r\n\t\t\tfragment: true,\r\n\t\t})\r\n\t\t.use(remarkGfm)\r\n\t\t.use(remarkMath)\r\n\t\t.use(remarkRehype)\r\n\t\t.use(rehypeSanitize)\r\n\t\t.use(rehypeKatex)\r\n\t\t.use(rehypeDocument, {\r\n\t\t\tcss: \"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css\",\r\n\t\t})\r\n\t\t.use(rehypeStringify)\r\n\t\t.processSync(content.normalize())\r\n\t\t.toString()\r\n\t\t.replace(\r\n\t\t\t`<table`,\r\n\t\t\t`<div style='display: block; width: 100%; overflow-x: auto'><table`,\r\n\t\t)\r\n\t\t.replace(`</table>`, `</table></div>`);\r\n};\r\n","import {\r\n\tTypography,\r\n\tTypographyProps,\r\n} from \"@mui/material\";\r\nimport { FC, useEffect, useRef } from \"react\";\r\nimport { parseMarkdown } from \"~core/markdown\";\r\n\r\ntype MarkdownProps = Omit<\r\n\tTypographyProps,\r\n\t\"ref\"\r\n> & {\r\n\tmarkdownContent: string | undefined | null;\r\n\temptyText: string | undefined;\r\n};\r\nexport const Markdown: FC<MarkdownProps> = (\r\n\tprops,\r\n) => {\r\n\tconst {\r\n\t\tmarkdownContent: content,\r\n\t\temptyText,\r\n\t\tsx,\r\n\t\t...rest\r\n\t} = props;\r\n\r\n\tconst contentRef =\r\n\t\tuseRef<HTMLDivElement | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (\r\n\t\t\tcontent === undefined ||\r\n\t\t\tcontent === null ||\r\n\t\t\tcontentRef === null ||\r\n\t\t\tcontentRef.current === null\r\n\t\t) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst innerHtml = parseMarkdown(content);\r\n\t\tcontentRef.current.innerHTML = innerHtml;\r\n\t}, [content]);\r\n\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\t{...rest}\r\n\t\t\tref={contentRef}\r\n\t\t\tcomponent=\"div\"\r\n\t\t\tdisplay=\"block\"\r\n\t\t\twidth=\"100%\"\r\n\t\t\tsx={{\r\n\t\t\t\t...sx,\r\n\t\t\t\toverflowX: \"auto\",\r\n\t\t\t\tfontFamily: \"IBM Plex Serif\",\r\n\t\t\t\twordBreak: \"break-word\",\r\n\t\t\t\twordWrap: \"break-word\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{emptyText}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n","import {\r\n\tContainer,\r\n\tPaper,\r\n\tSxProps,\r\n\tTheme,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nimport { Markdown } from \"~components/Markdown\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n} from \"~types/schemas\";\r\n\r\ntype IssueMetaDataListProps = {\r\n\tissue: RepoIssueSchema;\r\n};\r\nconst IssueMetaData: FC<\r\n\tIssueMetaDataListProps\r\n> = (props) => {\r\n\tconst { issue } = props;\r\n\r\n\tconst normalizedCreated = normalizeDateString(\r\n\t\tissue.created_at,\r\n\t\t\"unknown\",\r\n\t);\r\n\tconst createdMsg = `on ${normalizedCreated}`;\r\n\r\n\tconst normalizedUpdated = normalizeDateString(\r\n\t\tissue.updated_at,\r\n\t);\r\n\tconst updatedMsg = `last updated: ${normalizedUpdated}`;\r\n\r\n\tconst normalizedClosed = normalizeDateString(\r\n\t\tissue.closed_at,\r\n\t\t\"never\",\r\n\t);\r\n\tconst closedMsg = `closed: ${normalizedClosed}`;\r\n\r\n\tlet msg = `${createdMsg} (${updatedMsg}, ${closedMsg})`;\r\n\treturn (\r\n\t\t<Typography\r\n\t\t\twidth=\"100%\"\r\n\t\t\tflexDirection=\"row\"\r\n\t\t\tflexWrap=\"wrap\"\r\n\t\t\tgap={0.5}\r\n\t\t\tvariant=\"subtitle1\"\r\n\t\t\tfontSize=\"small\"\r\n\t\t\tsx={{\r\n\t\t\t\tfontStyle: \"italic\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{msg}\r\n\t\t</Typography>\r\n\t);\r\n};\r\n\r\ntype IssueCommentProps = {\r\n\tcomment: RepoIssueCommentSchema;\r\n\tindex: number;\r\n};\r\nconst IssueComment: FC<IssueCommentProps> = (\r\n\tprops,\r\n) => {\r\n\tconst { index, comment } = props;\r\n\r\n\tconst normalizedCreated = normalizeDateString(\r\n\t\tcomment.created_at,\r\n\t);\r\n\tconst createdMsg = `on ${normalizedCreated}`;\r\n\r\n\tconst normalizedupdated = normalizeDateString(\r\n\t\tcomment.updated_at,\r\n\t);\r\n\tconst updatedMsg = `last updated: ${normalizedupdated}`;\r\n\r\n\tconst msg = `${createdMsg} (${updatedMsg})}`;\r\n\r\n\treturn (\r\n\t\t<Paper\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tsx={{ padding: 2 }}\r\n\t\t>\r\n\t\t\t<Typography\r\n\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\tcomponent=\"a\"\r\n\t\t\t\thref={comment.html_url}\r\n\t\t\t\tsx={{\r\n\t\t\t\t\ttextDecoration: \"none\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tComment #{index}\r\n\t\t\t</Typography>\r\n\t\t\t<Typography\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\tfontSize=\"small\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tfontStyle: \"italic\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{msg}\r\n\t\t\t</Typography>\r\n\t\t\t<Markdown\r\n\t\t\t\tmarkdownContent={\r\n\t\t\t\t\tcomment.body ?? undefined\r\n\t\t\t\t}\r\n\t\t\t\temptyText=\"This comment does not have a body or its body not is cached.\"\r\n\t\t\t/>\r\n\t\t</Paper>\r\n\t);\r\n};\r\n\r\nexport const IssueDetailsPage: FC = () => {\r\n\tconst { issue, comments } =\r\n\t\tuseLoaderData() as LoaderData;\r\n\r\n\tconst path = `~/repositories/${issue.repo_full_name}/issues/${issue.issue_number}`;\r\n\tconst breadcrumbsProps: SxProps<Theme> = {\r\n\t\tsx: {\r\n\t\t\toverflow: \"auto\",\r\n\t\t\tflexGrow: { xs: 0, sm: 1 },\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath={path}\r\n\t\t\t\t\tbreadcrumbsProps={breadcrumbsProps}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Container\r\n\t\t\t\tmaxWidth=\"sm\"\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\tpaddingY: 4,\r\n\t\t\t\t\tgap: 2,\r\n\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tsx={{ padding: 2 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tfontWeight=\"bold\"\r\n\t\t\t\t\t\tfontSize=\"x-large\"\r\n\t\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\t\thref={issue.html_url}\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\ttextDecoration: \"none\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{issue.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<IssueMetaData issue={issue} />\r\n\t\t\t\t\t<Markdown\r\n\t\t\t\t\t\tmarkdownContent={\r\n\t\t\t\t\t\t\tissue.body ?? undefined\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\temptyText=\"This issue does not have a body or its body is not cached.\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Paper>\r\n\t\t\t\t{comments.map((comment, index) => (\r\n\t\t\t\t\t<IssueComment\r\n\t\t\t\t\t\tkey={`comment-${comment.id}`}\r\n\t\t\t\t\t\tindex={index + 1}\r\n\t\t\t\t\t\tcomment={comment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Container>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router\";\r\nimport {\r\n\tgetCachedIssueComments,\r\n\tgetCachedRepoIssue,\r\n} from \"~database/cached\";\r\nimport {\r\n\tRepoIssueCommentSchema,\r\n\tRepoIssueSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tissue: RepoIssueSchema;\r\n\tcomments: RepoIssueCommentSchema[];\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\tparams,\r\n}) => {\r\n\tconst owner = params.owner;\r\n\tconst repoName = params.repo;\r\n\tconst issueNumber = params.issueNumber;\r\n\tif (\r\n\t\towner === undefined ||\r\n\t\trepoName === undefined ||\r\n\t\tissueNumber === undefined\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\tif (\r\n\t\t!Number.isSafeInteger(\r\n\t\t\tNumber.parseInt(issueNumber),\r\n\t\t)\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\r\n\tconst fullName = `${owner}/${repoName}`;\r\n\tconst issue = await getCachedRepoIssue(\r\n\t\tfullName,\r\n\t\tNumber.parseInt(issueNumber),\r\n\t);\r\n\tif (issue === undefined) {\r\n\t\tthrow new Response(\"Not found\", {\r\n\t\t\tstatus: 404,\r\n\t\t\tstatusText:\r\n\t\t\t\t\"Issue does not exist or it is not cached.\",\r\n\t\t});\r\n\t}\r\n\tdocument.title = issue.title;\r\n\tconst loaderData: LoaderData = {\r\n\t\tissue,\r\n\t\tcomments: await getCachedIssueComments(\r\n\t\t\tissue.id,\r\n\t\t),\r\n\t};\r\n\r\n\treturn loaderData;\r\n};\r\n","import { Box } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { IssueDataTable } from \"~components/IssueDataTable\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nexport const IssueListPage: FC = () => {\r\n\tconst {\r\n\t\tissues,\r\n\t\trepoOptions,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath=\"~/issues\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Box\r\n\t\t\t\tpaddingTop={2}\r\n\t\t\t\tpaddingX={2}\r\n\t\t\t>\r\n\t\t\t\t<IssueDataTable\r\n\t\t\t\t\tissues={issues}\r\n\t\t\t\t\trepoOptions={repoOptions}\r\n\t\t\t\t\ttitle={title}\r\n\t\t\t\t\townerType={ownerType}\r\n\t\t\t\t\trepoFullNames={repoFullNames}\r\n\t\t\t\t\tstate={state}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { matchSorter } from \"match-sorter\";\r\nimport {\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport const filterRepos = (\r\n\trepos: RepoSchema[],\r\n\tname: string,\r\n\ttopics: string[],\r\n\tvisibility: string,\r\n\tstatus: string,\r\n\ttopicFilterMode: string,\r\n\tproperties: string[],\r\n) => {\r\n\tlet items = [...repos];\r\n\r\n\tif (visibility === \"Private\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.is_private,\r\n\t\t);\r\n\t}\r\n\tif (visibility === \"Public\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => !item.is_private,\r\n\t\t);\r\n\t}\r\n\r\n\tif (status === \"Archived\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.is_archived,\r\n\t\t);\r\n\t}\r\n\tif (status === \"Active\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => !item.is_archived,\r\n\t\t);\r\n\t}\r\n\r\n\tif (\r\n\t\ttopics.length > 0 &&\r\n\t\ttopicFilterMode === \"Match all\"\r\n\t) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\ttopics.every((topic) => {\r\n\t\t\t\tif (item.topics === undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn item.topics.includes(topic);\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\tif (\r\n\t\ttopics.length > 0 &&\r\n\t\ttopicFilterMode === \"Match any\"\r\n\t) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\ttopics.some((topic) => {\r\n\t\t\t\tif (item.topics === undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn item.topics.includes(topic);\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\tif (properties.length > 0) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\tproperties.some(\r\n\t\t\t\t(property) =>\r\n\t\t\t\t\titem.topics !== undefined &&\r\n\t\t\t\t\titem.topics.includes(property),\r\n\t\t\t),\r\n\t\t);\r\n\t}\r\n\r\n\titems = matchSorter(items, name, {\r\n\t\tkeys: [\"full_name\"],\r\n\t});\r\n\treturn items;\r\n};\r\n\r\nexport const filterIssues = (\r\n\tissues: RepoIssueSchema[],\r\n\ttitle: string,\r\n\townerType: string,\r\n\trepoFullNames: string[],\r\n\tstate: string,\r\n) => {\r\n\tlet items = [...issues];\r\n\r\n\tif (ownerType !== \"All\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.owner_type === ownerType,\r\n\t\t);\r\n\t}\r\n\tif (repoFullNames.length > 0) {\r\n\t\titems = items.filter((item) =>\r\n\t\t\trepoFullNames.includes(item.repo_full_name),\r\n\t\t);\r\n\t}\r\n\tif (state !== \"All\") {\r\n\t\titems = items.filter(\r\n\t\t\t(item) => item.state === state,\r\n\t\t);\r\n\t}\r\n\r\n\titems = matchSorter(items, title, {\r\n\t\tkeys: [\"title\"],\r\n\t});\r\n\treturn items;\r\n};\r\n","import { LoaderFunction } from \"react-router-dom\";\r\nimport { filterIssues } from \"~core/filtering\";\r\nimport { getCachedIssues } from \"~database/index\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\nimport { RepoIssueSchema } from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\tissues: RepoIssueSchema[];\r\n\trepoOptions: GenericSelectOption<string>[];\r\n\ttitle: string;\r\n\townerType: string;\r\n\trepoFullNames: string[];\r\n\tstate: string;\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\trequest,\r\n}): Promise<LoaderData> => {\r\n\tdocument.title = \"issues\";\r\n\tlet issues = await getCachedIssues();\r\n\r\n\tconst uniqueRepoOptions = new Set(\r\n\t\tissues\r\n\t\t\t.map(({ repo_full_name }) => repo_full_name)\r\n\t\t\t.filter((value) => value.length > 0),\r\n\t);\r\n\tconst options = [...uniqueRepoOptions];\r\n\toptions.sort();\r\n\tconst repoOptions: GenericSelectOption<string>[] =\r\n\t\toptions.map((value) => ({\r\n\t\t\tlabel: value,\r\n\t\t\tvalue,\r\n\t\t}));\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\r\n\tconst repoFullNamesParam = searchParams.get(\r\n\t\t\"repoFullNames\",\r\n\t);\r\n\tlet repoFullNames: string[] = [];\r\n\tif (repoFullNamesParam !== null) {\r\n\t\trepoFullNames = repoFullNamesParam\r\n\t\t\t.normalize()\r\n\t\t\t.trim()\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((item) => item.trim())\r\n\t\t\t.filter((item) => item.length > 0);\r\n\t}\r\n\r\n\tconst title = searchParams.get(\"title\") || \"\";\r\n\r\n\tconst ownerType =\r\n\t\tsearchParams.get(\"ownerType\") ||\r\n\t\tgetIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tsearchParams.get(\"state\") ||\r\n\t\tgetIssueFilterPrefState();\r\n\r\n\tissues = filterIssues(\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t);\r\n\r\n\treturn {\r\n\t\tissues,\r\n\t\trepoOptions,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t};\r\n};\r\n","import {\r\n\tURLSearchParamsInit,\r\n\tcreateSearchParams,\r\n} from \"react-router-dom\";\r\nimport { SortRule } from \"~types/generics\";\r\n\r\nexport const sortItems = <T>(\r\n\trule: string | null,\r\n\tsortRules: SortRule<T>[],\r\n\titems: T[],\r\n) => {\r\n\tif (sortRules.length <= 0) {\r\n\t\treturn;\r\n\t}\r\n\tlet compareFn = sortRules[0].compareFn;\r\n\tif (!rule) {\r\n\t\tfor (const sortRule of sortRules) {\r\n\t\t\tif (sortRule.value === rule) {\r\n\t\t\t\tcompareFn = sortRule.compareFn;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\titems.sort(compareFn);\r\n};\r\n\r\nexport const extractFilterTags = (\r\n\tqueryString: string | null,\r\n): string[] => {\r\n\tlet filterTags: string[] = [];\r\n\tif (queryString) {\r\n\t\tfilterTags = queryString\r\n\t\t\t.normalize()\r\n\t\t\t.split(\",\");\r\n\t}\r\n\treturn filterTags;\r\n};\r\n\r\nexport const toSearchParam = (\r\n\tquery: URLSearchParamsInit,\r\n) => {\r\n\treturn createSearchParams(query).toString();\r\n};\r\n","import {\r\n\tChevronLeftRounded,\r\n\tClearRounded,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n\tBox,\r\n\tContainer,\r\n\tDivider,\r\n\tDrawer,\r\n\tIconButton,\r\n\tList,\r\n\tListItem,\r\n\tListItemText,\r\n\tStack,\r\n\tTab,\r\n\tTabs,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@mui/material\";\r\nimport { Buffer } from \"buffer\";\r\nimport { FC, ReactNode, useState } from \"react\";\r\nimport { useLoaderData } from \"react-router\";\r\nimport {\r\n\tLink,\r\n\tuseSubmit,\r\n} from \"react-router-dom\";\r\nimport { IssueDataTable } from \"~components/IssueDataTable\";\r\nimport { Markdown } from \"~components/Markdown\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { toSearchParam } from \"~core/query\";\r\nimport { toTimeStamp } from \"~core/time\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nconst REPO_METADATA_DEFINITIONS: {\r\n\tlabel: string;\r\n\trender: (repo: RepoSchema) => ReactNode;\r\n}[] = [\r\n\t{\r\n\t\tlabel: \"Description\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.description ?? \"No description\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Last pushed\",\r\n\t\trender: (repo) =>\r\n\t\t\ttoTimeStamp(repo.pushed_at, \"Never\"),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Last updated\",\r\n\t\trender: (repo) =>\r\n\t\t\ttoTimeStamp(repo.updated_at, \"Never\"),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Created\",\r\n\t\trender: (repo) =>\r\n\t\t\ttoTimeStamp(repo.created_at, \"Unknown\"),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Visibility\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Private\" : \"Public\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Status\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.is_private ? \"Archived\" : \"Active\",\r\n\t},\r\n\t{\r\n\t\tlabel: \"Links\",\r\n\t\trender: (repo) => (\r\n\t\t\t<Stack\r\n\t\t\t\tcomponent=\"span\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\tgap={1}\r\n\t\t\t>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\thref={repo.html_url}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t>\r\n\t\t\t\t\tGitHub repository\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tcomponent=\"a\"\r\n\t\t\t\t\thref={repo.homepage ?? undefined}\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t>\r\n\t\t\t\t\tHomepage\r\n\t\t\t\t</Typography>\r\n\t\t\t</Stack>\r\n\t\t),\r\n\t},\r\n\t{\r\n\t\tlabel: \"Topics\",\r\n\t\trender: (repo) =>\r\n\t\t\trepo.topics && repo.topics.length > 0 ? (\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tcomponent=\"span\"\r\n\t\t\t\t\tgap={1}\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{repo.topics.map((topic) => (\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tkey={topic}\r\n\t\t\t\t\t\t\tcomponent={Link}\r\n\t\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\t\tpathname: \"/repositories\",\r\n\t\t\t\t\t\t\t\tsearch: toSearchParam({\r\n\t\t\t\t\t\t\t\t\ttopics: topic,\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{topic}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t) : (\r\n\t\t\t\t\"No topic assigned\"\r\n\t\t\t),\r\n\t},\r\n];\r\n\r\ntype RepoDetailsPageProps = { tab: number };\r\nexport const RepoDetailsPage: FC<\r\n\tRepoDetailsPageProps\r\n> = (props) => {\r\n\tconst { tab } = props;\r\n\tconst {\r\n\t\trepoOptions,\r\n\t\trepo,\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\tconst submit = useSubmit();\r\n\tconst handleTabChange = (\r\n\t\t_: React.SyntheticEvent<Element, Event>,\r\n\t\tvalue: number,\r\n\t) => {\r\n\t\tlet path = `/repositories/${repo.full_name}`;\r\n\t\tif (value === 1) {\r\n\t\t\tpath = `${path}/issues`;\r\n\t\t}\r\n\t\tsubmit({}, { action: path, method: \"get\" });\r\n\t};\r\n\r\n\tconst [drawerOpen, setDrawerOpen] =\r\n\t\tuseState(false);\r\n\tconst toggleDrawer = () => {\r\n\t\tsetDrawerOpen(!drawerOpen);\r\n\t};\r\n\tconst closeDrawer = () => {\r\n\t\tsetDrawerOpen(false);\r\n\t};\r\n\r\n\tlet decodedReadme: string | undefined;\r\n\tif (repo.readme !== undefined) {\r\n\t\tdecodedReadme = Buffer.from(\r\n\t\t\trepo.readme,\r\n\t\t\t\"base64\",\r\n\t\t).toString();\r\n\t}\r\n\r\n\tlet path = `~/repositories/${repo.full_name}`;\r\n\tif (tab === 1) {\r\n\t\tpath = `${path}/issues`;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath={path}\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\t\t\tflexGrow: { xs: 0, sm: 1 },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tseconadaryAction={\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisableRipple\r\n\t\t\t\t\tonClick={toggleDrawer}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tflexGrow: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronLeftRounded />\r\n\t\t\t\t</IconButton>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Toolbar\r\n\t\t\t\tdisableGutters\r\n\t\t\t\tvariant=\"dense\"\r\n\t\t\t>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={tab}\r\n\t\t\t\t\tonChange={handleTabChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tvalue={0}\r\n\t\t\t\t\t\tlabel=\"Readme\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tvalue={1}\r\n\t\t\t\t\t\tlabel=\"Issues\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Toolbar>\r\n\t\t\t<Divider />\r\n\t\t\t{tab !== 1 ? (\r\n\t\t\t\t<Container\r\n\t\t\t\t\tmaxWidth=\"sm\"\r\n\t\t\t\t\tsx={{ paddingY: 4 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Markdown\r\n\t\t\t\t\t\temptyText=\"This repository does not contain a readme.\"\r\n\t\t\t\t\t\tmarkdownContent={decodedReadme}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Container>\r\n\t\t\t) : (\r\n\t\t\t\t<Box padding={2}>\r\n\t\t\t\t\t<IssueDataTable\r\n\t\t\t\t\t\trepoOptions={repoOptions}\r\n\t\t\t\t\t\tissues={issues}\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\townerType={ownerType}\r\n\t\t\t\t\t\trepoFullNames={repoFullNames}\r\n\t\t\t\t\t\tstate={state}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\t<Drawer\r\n\t\t\t\televation={0}\r\n\t\t\t\tanchor=\"right\"\r\n\t\t\t\topen={drawerOpen}\r\n\t\t\t\tonClose={closeDrawer}\r\n\t\t\t\tPaperProps={{\r\n\t\t\t\t\tsx: { width: 240 },\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Toolbar\r\n\t\t\t\t\tvariant=\"dense\"\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tflexDirection: \"row\",\r\n\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\tjustifyContent: \"space-between\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Typography fontWeight=\"bold\">\r\n\t\t\t\t\t\tMetadata\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonClick={closeDrawer}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ClearRounded />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t\t<Divider\r\n\t\t\t\t\tflexItem\r\n\t\t\t\t\tvariant=\"fullWidth\"\r\n\t\t\t\t/>\r\n\t\t\t\t<List\r\n\t\t\t\t\tdisablePadding\r\n\t\t\t\t\tdense\r\n\t\t\t\t>\r\n\t\t\t\t\t{REPO_METADATA_DEFINITIONS.map(\r\n\t\t\t\t\t\t({ label, render }) => (\r\n\t\t\t\t\t\t\t<ListItem key={label}>\r\n\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\tsecondary={render(repo)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</ListItemText>\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t)}\r\n\t\t\t\t</List>\r\n\t\t\t</Drawer>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router\";\r\nimport { filterIssues } from \"~core/filtering\";\r\nimport {\r\n\tgetCachedRepo,\r\n\tgetCachedRepoIssues,\r\n} from \"~database/cached\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\nimport {\r\n\tRepoIssueSchema,\r\n\tRepoSchema,\r\n} from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\trepo: RepoSchema;\r\n\tissues: RepoIssueSchema[];\r\n\ttitle: string;\r\n\townerType: string;\r\n\trepoFullNames: string[];\r\n\trepoOptions: GenericSelectOption<string>[];\r\n\tstate: string;\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\tparams,\r\n\trequest,\r\n}) => {\r\n\tconst owner = params.owner;\r\n\tconst repoName = params.repo;\r\n\tif (\r\n\t\towner === undefined ||\r\n\t\trepoName === undefined\r\n\t) {\r\n\t\tthrow new Response(\"\", {\r\n\t\t\tstatus: 400,\r\n\t\t\tstatusText: \"Bad requeset\",\r\n\t\t});\r\n\t}\r\n\r\n\tconst fullName = `${owner}/${repoName}`;\r\n\tlet repo = await getCachedRepo(fullName);\r\n\tif (repo === undefined) {\r\n\t\tthrow new Response(\"Not found\", {\r\n\t\t\tstatus: 404,\r\n\t\t\tstatusText: \"Repository not found in cache\",\r\n\t\t});\r\n\t}\r\n\tdocument.title = repo.name;\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\tconst title = searchParams.get(\"title\") || \"\";\r\n\tconst ownerType =\r\n\t\tsearchParams.get(\"ownerType\") ||\r\n\t\tgetIssueFilterPrefOwnerType();\r\n\tconst state =\r\n\t\tsearchParams.get(\"state\") ||\r\n\t\tgetIssueFilterPrefState();\r\n\r\n\tlet issues = await getCachedRepoIssues(\r\n\t\trepo.full_name,\r\n\t);\r\n\tconst repoFullNames: string[] = [\r\n\t\trepo.full_name,\r\n\t];\r\n\tissues = filterIssues(\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t);\r\n\r\n\tconst repoOptions: GenericSelectOption<string>[] =\r\n\t\t[\r\n\t\t\t{\r\n\t\t\t\tlabel: repo.full_name,\r\n\t\t\t\tvalue: repo.full_name,\r\n\t\t\t},\r\n\t\t];\r\n\tconst loaderData: LoaderData = {\r\n\t\trepo,\r\n\t\tissues,\r\n\t\ttitle,\r\n\t\townerType,\r\n\t\trepoFullNames,\r\n\t\tstate,\r\n\t\trepoOptions,\r\n\t};\r\n\r\n\treturn loaderData;\r\n};\r\n","import { Box } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\nimport { RepoDataTable } from \"~components/RepoDataTable\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { LoaderData } from \"./loader\";\r\n\r\nexport const RepoListPage: FC = () => {\r\n\tconst {\r\n\t\trepos,\r\n\t\ttopicOptions,\r\n\t\ttopics,\r\n\t\tname,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t\tproperties,\r\n\t} = useLoaderData() as LoaderData;\r\n\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath=\"~/repositories\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Box padding={2}>\r\n\t\t\t\t<RepoDataTable\r\n\t\t\t\t\ttopicOptions={topicOptions}\r\n\t\t\t\t\trepos={repos}\r\n\t\t\t\t\ttopics={topics}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tvisibility={visibility}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\ttopicMatchStrategy={topicMatchStrategy}\r\n\t\t\t\t\tproperties={properties}\r\n\t\t\t\t/>\r\n\t\t\t</Box>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import { LoaderFunction } from \"react-router-dom\";\r\nimport { filterRepos } from \"~core/filtering\";\r\nimport {\r\n\tgetCachedRepos,\r\n\tgetCachedTopics,\r\n} from \"~database/index\";\r\nimport {\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { GenericSelectOption } from \"~types/generics\";\r\nimport { RepoSchema } from \"~types/schemas\";\r\n\r\nexport type LoaderData = {\r\n\trepos: RepoSchema[];\r\n\ttopicOptions: GenericSelectOption<string>[];\r\n\ttopics: string[];\r\n\tname: string;\r\n\tvisibility: string;\r\n\tstatus: string;\r\n\ttopicMatchStrategy: string;\r\n\tproperties: string[];\r\n};\r\nexport const loader: LoaderFunction = async ({\r\n\trequest,\r\n}): Promise<LoaderData> => {\r\n\tdocument.title = \"repositories\";\r\n\tconst cachedTopics = await getCachedTopics();\r\n\tconst topicOptions: GenericSelectOption<string>[] =\r\n\t\tcachedTopics.map((topic) => {\r\n\t\t\treturn { label: topic, value: topic };\r\n\t\t});\r\n\r\n\tlet repos = await getCachedRepos();\r\n\r\n\tconst searchParams = new URL(request.url)\r\n\t\t.searchParams;\r\n\tconst topicsParam = searchParams.get(\"topics\");\r\n\tlet topics: string[] = [];\r\n\tif (topicsParam !== null) {\r\n\t\ttopics = topicsParam\r\n\t\t\t.normalize()\r\n\t\t\t.trim()\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((topic) => topic.trim())\r\n\t\t\t.filter((topic) => topic.length > 0);\r\n\t}\r\n\tconst propertyParam =\r\n\t\tsearchParams.get(\"properties\");\r\n\tlet properties: string[] = [];\r\n\tif (propertyParam !== null) {\r\n\t\tproperties = propertyParam\r\n\t\t\t.normalize()\r\n\t\t\t.trim()\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((topic) => topic.trim())\r\n\t\t\t.filter((topic) => topic.length > 0);\r\n\t}\r\n\r\n\tconst name = searchParams.get(\"name\") || \"\";\r\n\tconst status =\r\n\t\tsearchParams.get(\"status\") ||\r\n\t\tgetRepoFilterPrefStatus();\r\n\tconst visibility =\r\n\t\tsearchParams.get(\"visibility\") ||\r\n\t\tgetRepoFilterPrefVisibility();\r\n\tconst topicMatchStrategy =\r\n\t\tsearchParams.get(\"topicMatchStrategy\") ||\r\n\t\tgetRepoFilterPrefTopicMatchStrategy();\r\n\trepos = filterRepos(\r\n\t\trepos,\r\n\t\tname,\r\n\t\ttopics,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t\tproperties,\r\n\t);\r\n\r\n\treturn {\r\n\t\ttopicOptions,\r\n\t\trepos,\r\n\t\ttopics,\r\n\t\tname,\r\n\t\tvisibility,\r\n\t\tstatus,\r\n\t\ttopicMatchStrategy,\r\n\t\tproperties,\r\n\t};\r\n};\r\n","import {\r\n\tListItem,\r\n\tListItemText,\r\n\tStack,\r\n} from \"@mui/material\";\r\nimport { FC, ReactNode } from \"react\";\r\n\r\ntype WrappableListItemProps = {\r\n\tchildren?: ReactNode;\r\n\tprimary?: string;\r\n\tsecondary?: string;\r\n};\r\nexport const WrappableListItem: FC<\r\n\tWrappableListItemProps\r\n> = (props) => {\r\n\tconst { secondary, primary, children } = props;\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<Stack\r\n\t\t\t\twidth=\"100%\"\r\n\t\t\t\tdisplay=\"flex\"\r\n\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\tflexWrap=\"wrap\"\r\n\t\t\t\talignItems=\"start\"\r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t>\r\n\t\t\t\t<ListItemText\r\n\t\t\t\t\tprimary={primary}\r\n\t\t\t\t\tsecondary={secondary}\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: \"max(200px, 40%)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\talignItems=\"center\"\r\n\t\t\t\t\tflexDirection=\"row\"\r\n\t\t\t\t\tminWidth=\"max(200px, 25%)\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\t\t</ListItem>\r\n\t);\r\n};\r\n","import {\r\n\tButton,\r\n\tList,\r\n\tListItem,\r\n\tListSubheader,\r\n\tTextField,\r\n} from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { ChangeEvent, FC, useState } from \"react\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nexport const SettingRegionAPI: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst [\r\n\t\tpersonalAccessToken,\r\n\t\tsetPersonalAccessToken,\r\n\t] = useState(\r\n\t\tlocalStorage.getItem(\r\n\t\t\t\"personal-access-token\",\r\n\t\t) ?? \"\",\r\n\t);\r\n\r\n\tconst handlePasswordChange = (\r\n\t\tevent: ChangeEvent<\r\n\t\t\tHTMLInputElement | HTMLTextAreaElement\r\n\t\t>,\r\n\t) => {\r\n\t\tconst value = event.target.value.normalize();\r\n\t\tsetPersonalAccessToken(value);\r\n\t};\r\n\r\n\tconst commitChanges = () => {\r\n\t\tlocalStorage.setItem(\r\n\t\t\t\"personal-access-token\",\r\n\t\t\tpersonalAccessToken,\r\n\t\t);\r\n\t\tenqueueSnackbar({\r\n\t\t\tmessage: \"Updated personal access token\",\r\n\t\t\tvariant: \"info\",\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\tdisablePadding\r\n\t\t\tsubheader={\r\n\t\t\t\t<ListSubheader\r\n\t\t\t\t\tdisableGutters\r\n\t\t\t\t\tdisableSticky\r\n\t\t\t\t>\r\n\t\t\t\t\tAPI\r\n\t\t\t\t</ListSubheader>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<WrappableListItem\r\n\t\t\t\tprimary=\"Personal access token (classic)\"\r\n\t\t\t\tsecondary=\"Without repository permission, the private repositories will be invisible.\"\r\n\t\t\t>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tplaceholder=\"ghp_\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tvalue={personalAccessToken}\r\n\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t/>\r\n\t\t\t</WrappableListItem>\r\n\t\t\t<ListItem disableGutters>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisableElevation\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tonClick={commitChanges}\r\n\t\t\t\t>\r\n\t\t\t\t\tUpdate\r\n\t\t\t\t</Button>\r\n\t\t\t</ListItem>\r\n\t\t</List>\r\n\t);\r\n};\r\n","import {\r\n\tList,\r\n\tListSubheader,\r\n\tSelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { FC, useState } from \"react\";\r\nimport { StyledSelect } from \"~components/StyledSelect\";\r\nimport {\r\n\tISSUE_FILTER_OWNER_TYPE_OPTIONS,\r\n\tISSUE_FILTER_STATE_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\tgetIssueFilterPrefOwnerType,\r\n\tgetIssueFilterPrefState,\r\n\tsetIssueFilterPrefOwnerType,\r\n\tsetIssueFilterPrefState,\r\n} from \"~database/preferences\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nexport const SettingRegionIssueFilterPref: FC =\r\n\t() => {\r\n\t\tconst [ownerType, setOwnerType] = useState(\r\n\t\t\tgetIssueFilterPrefOwnerType(),\r\n\t\t);\r\n\t\tconst [state, setState] = useState(\r\n\t\t\tgetIssueFilterPrefState(),\r\n\t\t);\r\n\r\n\t\tconst handleOwnerTypeChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetIssueFilterPrefOwnerType(value);\r\n\t\t\tsetOwnerType(value);\r\n\t\t};\r\n\t\tconst handleStateChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetIssueFilterPrefState(value);\r\n\t\t\tsetState(value);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<List\r\n\t\t\t\tdisablePadding\r\n\t\t\t\tsubheader={\r\n\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\tdisableSticky\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tIssue filter preferences\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<WrappableListItem primary=\"Owner type\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={ownerType}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tISSUE_FILTER_OWNER_TYPE_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={handleOwnerTypeChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"State\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={state}\r\n\t\t\t\t\t\toptions={ISSUE_FILTER_STATE_OPTIONS}\r\n\t\t\t\t\t\tonChange={handleStateChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t</List>\r\n\t\t);\r\n\t};\r\n","import {\r\n\tList,\r\n\tListSubheader,\r\n\tSelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { FC, useState } from \"react\";\r\nimport { StyledSelect } from \"~components/StyledSelect\";\r\nimport { StyledTextField } from \"~components/StyledTextField\";\r\nimport {\r\n\tREPO_FILTER_STATUS_OPTIONS,\r\n\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS,\r\n\tREPO_FILTER_VISIBILITY_OPTIONS,\r\n} from \"~constants\";\r\nimport {\r\n\tgetRepoFilterPrefPropertyPrefix,\r\n\tgetRepoFilterPrefStatus,\r\n\tgetRepoFilterPrefTopicMatchStrategy,\r\n\tgetRepoFilterPrefVisibility,\r\n\tsetRepoFilterPrefCustomPrefix,\r\n\tsetRepoFilterPrefStatus,\r\n\tsetRepoFilterPrefTopicMatchStrategy,\r\n\tsetRepoFilterPrefVisibility,\r\n} from \"~database/preferences\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nconst DEF_MODE =\r\n\tgetRepoFilterPrefTopicMatchStrategy();\r\nconst DEF_VIS = getRepoFilterPrefVisibility();\r\nconst DEF_PREFIX =\r\n\tgetRepoFilterPrefPropertyPrefix();\r\nconst DEF_STATUS = getRepoFilterPrefStatus();\r\nexport const SettingRegionRepoFilterPref: FC =\r\n\t() => {\r\n\t\tconst [customPrefix, setCustomPrefix] =\r\n\t\t\tuseState(DEF_PREFIX);\r\n\t\tconst [mode, setMode] = useState(DEF_MODE);\r\n\t\tconst [visibility, setVisibility] =\r\n\t\t\tuseState(DEF_VIS);\r\n\t\tconst [status, setStatus] =\r\n\t\t\tuseState(DEF_STATUS);\r\n\r\n\t\tconst handleCustomPrefixChange = (\r\n\t\t\tvalue: string,\r\n\t\t) => {\r\n\t\t\tsetRepoFilterPrefCustomPrefix(value);\r\n\t\t\tsetCustomPrefix(value);\r\n\t\t};\r\n\t\tconst handleTopicMatchStrategyChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefTopicMatchStrategy(value);\r\n\t\t\tsetMode(value);\r\n\t\t};\r\n\t\tconst handleVisiblityChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefVisibility(value);\r\n\t\t\tsetVisibility(value);\r\n\t\t};\r\n\t\tconst handleStatusChange = (\r\n\t\t\tevent: SelectChangeEvent<string>,\r\n\t\t) => {\r\n\t\t\tconst value = event.target.value;\r\n\t\t\tsetRepoFilterPrefStatus(value);\r\n\t\t\tsetStatus(value);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<List\r\n\t\t\t\tdisablePadding\r\n\t\t\t\tsubheader={\r\n\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\tdisableGutters\r\n\t\t\t\t\t\tdisableSticky\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRepository filter preferences\r\n\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<WrappableListItem\r\n\t\t\t\t\tprimary=\"Prefix\"\r\n\t\t\t\t\tsecondary=\"Topics start with the prefix are treated as special properties.\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<StyledTextField\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tplaceholder=\"phospho-\"\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={customPrefix}\r\n\t\t\t\t\t\tonChange={handleCustomPrefixChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"Match strategy\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={mode}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tREPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\thandleTopicMatchStrategyChange\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"Visibility\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={visibility}\r\n\t\t\t\t\t\toptions={\r\n\t\t\t\t\t\t\tREPO_FILTER_VISIBILITY_OPTIONS\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonChange={handleVisiblityChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t\t<WrappableListItem primary=\"Status\">\r\n\t\t\t\t\t<StyledSelect\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tdisplayEmpty\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t\toptions={REPO_FILTER_STATUS_OPTIONS}\r\n\t\t\t\t\t\tonChange={handleStatusChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</WrappableListItem>\r\n\t\t\t</List>\r\n\t\t);\r\n\t};\r\n","import {\r\n\tButton,\r\n\tCircularProgress,\r\n\tList,\r\n\tListSubheader,\r\n} from \"@mui/material\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { FC, useState } from \"react\";\r\nimport { normalizeDateString } from \"~core/time\";\r\nimport {\r\n\tsyncCachedRepoIssueComments,\r\n\tsyncCachedRepoIssues,\r\n\tsyncCachedRepos,\r\n} from \"~database/cached\";\r\nimport { WrappableListItem } from \"./WrappableListItem\";\r\n\r\nconst SYNC_DETAILS: {\r\n\tkey: string;\r\n\tsuccessMsg: string;\r\n\tpromise: (\r\n\t\tonFailure: (err: any) => void,\r\n\t) => Promise<boolean[]>;\r\n}[] = [\r\n\t{\r\n\t\tkey: \"last-sync-repos\",\r\n\t\tsuccessMsg: \"repsitories\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepos(onFailure),\r\n\t},\r\n\t{\r\n\t\tkey: \"last-sync-issues\",\r\n\t\tsuccessMsg: \"issues\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepoIssues(onFailure),\r\n\t},\r\n\t{\r\n\t\tkey: \"last-sync-comments\",\r\n\t\tsuccessMsg: \"comments\",\r\n\t\tpromise: (onFailure) =>\r\n\t\t\tsyncCachedRepoIssueComments(onFailure),\r\n\t},\r\n];\r\n\r\nconst LAST_SYNC = [\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-repos\"),\r\n\t\t\"Never\",\r\n\t),\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-issues\"),\r\n\t\t\"Never\",\r\n\t),\r\n\tnormalizeDateString(\r\n\t\tlocalStorage.getItem(\"last-sync-comments\"),\r\n\t\t\"Never\",\r\n\t),\r\n];\r\n\r\nexport const SettingRegionSync: FC = () => {\r\n\tconst { enqueueSnackbar } = useSnackbar();\r\n\r\n\tconst [syncing, setSyncing] = useState([\r\n\t\tfalse,\r\n\t\tfalse,\r\n\t\tfalse,\r\n\t]);\r\n\tconst [lastSyncs, setLastSync] =\r\n\t\tuseState(LAST_SYNC);\r\n\r\n\tconst enqueueError = (err: any) => {\r\n\t\tenqueueSnackbar({\r\n\t\t\tmessage: String(err),\r\n\t\t\tvariant: \"error\",\r\n\t\t});\r\n\t\tthrow err;\r\n\t};\r\n\r\n\tconst handleSync = async (index: number) => {\r\n\t\tsetSyncing((prev) => {\r\n\t\t\tconst next = [...prev];\r\n\t\t\tnext[index] = true;\r\n\t\t\treturn next;\r\n\t\t});\r\n\r\n\t\tconst { promise, successMsg, key } =\r\n\t\t\tSYNC_DETAILS[index];\r\n\t\tconst res = await promise(enqueueError);\r\n\t\tif (res.every((r) => r)) {\r\n\t\t\tenqueueSnackbar({\r\n\t\t\t\tmessage: `Synced ${successMsg}`,\r\n\t\t\t\tvariant: \"success\",\r\n\t\t\t});\r\n\t\t\tconst timestamp = new Date(\r\n\t\t\t\tDate.now(),\r\n\t\t\t).toISOString();\r\n\t\t\tlocalStorage.setItem(key, timestamp);\r\n\t\t\tsetLastSync((prev) => {\r\n\t\t\t\tconst next = [...prev];\r\n\t\t\t\tnext[index] =\r\n\t\t\t\t\tnormalizeDateString(timestamp);\r\n\t\t\t\treturn next;\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetSyncing((prev) => {\r\n\t\t\tconst next = [...prev];\r\n\t\t\tnext[index] = false;\r\n\t\t\treturn next;\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<List\r\n\t\t\tdisablePadding\r\n\t\t\tsubheader={\r\n\t\t\t\t<ListSubheader\r\n\t\t\t\t\tdisableGutters\r\n\t\t\t\t\tdisableSticky\r\n\t\t\t\t>\r\n\t\t\t\t\tSynchronization\r\n\t\t\t\t</ListSubheader>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{SYNC_DETAILS.map(\r\n\t\t\t\t({ successMsg }, index) => (\r\n\t\t\t\t\t<WrappableListItem\r\n\t\t\t\t\t\tkey={`sync-item-${index}`}\r\n\t\t\t\t\t\tprimary={`Sync ${successMsg}`}\r\n\t\t\t\t\t\tsecondary={`Last sync: ${lastSyncs[index]}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tdisableElevation\r\n\t\t\t\t\t\t\tdisabled={syncing[index]}\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tonClick={() => handleSync(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{syncing[index] ? (\r\n\t\t\t\t\t\t\t\t<CircularProgress\r\n\t\t\t\t\t\t\t\t\tdisableShrink\r\n\t\t\t\t\t\t\t\t\tsize={28}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t`Sync ${successMsg}`\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</WrappableListItem>\r\n\t\t\t\t),\r\n\t\t\t)}\r\n\t\t</List>\r\n\t);\r\n};\r\n","import { Divider, Stack } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\nimport { StyledBreadcrumbs } from \"~components/StyledBreadcrumbs\";\r\nimport { WithAppBar } from \"~views/WithAppBar\";\r\nimport { SettingRegionAPI } from \"./SettingRegions/SettingRegionAPI\";\r\nimport { SettingRegionIssueFilterPref } from \"./SettingRegions/SettingRegionIssueFilterPref\";\r\nimport { SettingRegionRepoFilterPref } from \"./SettingRegions/SettingRegionRepoFilterPref\";\r\nimport { SettingRegionSync } from \"./SettingRegions/SettingRegionSync\";\r\n\r\nexport const SettingsPage: FC = () => {\r\n\treturn (\r\n\t\t<WithAppBar\r\n\t\t\tlocation={\r\n\t\t\t\t<StyledBreadcrumbs\r\n\t\t\t\t\tpath=\"~/settings\"\r\n\t\t\t\t\tbreadcrumbsProps={{\r\n\t\t\t\t\t\tsx: { flexGrow: 1 },\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Stack\r\n\t\t\t\tpadding={2}\r\n\t\t\t\tspacing={1}\r\n\t\t\t\tdivider={<Divider variant=\"middle\" />}\r\n\t\t\t>\r\n\t\t\t\t<SettingRegionRepoFilterPref />\r\n\t\t\t\t<SettingRegionIssueFilterPref />\r\n\t\t\t\t<SettingRegionAPI />\r\n\t\t\t\t<SettingRegionSync />\r\n\t\t\t</Stack>\r\n\t\t</WithAppBar>\r\n\t);\r\n};\r\n","import {\r\n\talpha,\r\n\tcreateTheme,\r\n} from \"@mui/material\";\r\n\r\nconst themePalette = createTheme({\r\n\tpalette: {\r\n\t\tmode: \"dark\",\r\n\t\tprimary: {\r\n\t\t\tmain: alpha(\"#00D3D0\", 0.7),\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tmain: \"#D68F3E\",\r\n\t\t},\r\n\t\tbackground: {\r\n\t\t\tdefault: \"#1B1D2D\",\r\n\t\t\tpaper: \"#1B1D2D\",\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tprimary: alpha(\"#fff\", 0.67),\r\n\t\t\tsecondary: alpha(\"#fff\", 0.5),\r\n\t\t},\r\n\t},\r\n});\r\nconst themeComponent = createTheme({\r\n\tcomponents: {\r\n\t\tMuiBreadcrumbs: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\tol: {\r\n\t\t\t\t\tflexWrap: \"nowrap\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tMuiCssBaseline: {\r\n\t\t\tstyleOverrides: {\r\n\t\t\t\t\"html\": {\r\n\t\t\t\t\tbackgroundColor:\r\n\t\t\t\t\t\tthemePalette.palette.background,\r\n\t\t\t\t},\r\n\t\t\t\t\"*\": {\r\n\t\t\t\t\tscrollbarWidth: \"thin\",\r\n\t\t\t\t},\r\n\t\t\t\t\"pre\": {\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t},\r\n\t\t\t\t\"table\": {\r\n\t\t\t\t\tminWidth: \"max-content\",\r\n\t\t\t\t\tborderSpacing: \"1rem 0.5rem\",\r\n\t\t\t\t},\r\n\t\t\t\t\"a\": {\r\n\t\t\t\t\t\"transition\": \"color 0.3s ease\",\r\n\t\t\t\t\t\"color\": alpha(\r\n\t\t\t\t\t\tthemePalette.palette.primary.main,\r\n\t\t\t\t\t\t0.78,\r\n\t\t\t\t\t),\r\n\t\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\t\tcolor: alpha(\r\n\t\t\t\t\t\t\tthemePalette.palette.secondary.main,\r\n\t\t\t\t\t\t\t0.78,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const themeComposed = createTheme({\r\n\tpalette: themePalette.palette,\r\n\tcomponents: themeComponent.components,\r\n});\r\n","import {\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n} from \"@mui/material\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport { FC } from \"react\";\r\nimport {\r\n\tRouterProvider,\r\n\tcreateHashRouter,\r\n\tredirect,\r\n} from \"react-router-dom\";\r\nimport { ErrorBoundry } from \"~pages/ErrorBoundary\";\r\nimport {\r\n\tHome,\r\n\tloaderHome,\r\n} from \"~pages/HomePage\";\r\nimport {\r\n\tIssueDetailsPage,\r\n\tloaderIssueDetailsPage,\r\n} from \"~pages/IssueDetailsPage\";\r\nimport {\r\n\tIssueListPage,\r\n\tloaderIssueListPage,\r\n} from \"~pages/IssueListPage\";\r\nimport {\r\n\tRepoDetailsPage,\r\n\tloaderRepoDetailsPage,\r\n} from \"~pages/RepoDetailsPage\";\r\nimport {\r\n\tRepoListPage,\r\n\tloaderRepoListPage,\r\n} from \"~pages/RepoListPage\";\r\nimport { SettingsPage } from \"~pages/SettingsPage/SettingsPage\";\r\nimport { themeComposed } from \"./theme\";\r\n\r\nconst router = createHashRouter(\r\n\t[\r\n\t\t{\r\n\t\t\tindex: true,\r\n\t\t\telement: <Home />,\r\n\t\t\tloader: loaderHome,\r\n\t\t\terrorElement: <ErrorBoundry />,\r\n\t\t},\r\n\t\t{\r\n\t\t\tpath: \"/\",\r\n\t\t\terrorElement: <ErrorBoundry />,\r\n\t\t\tchildren: [\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories\",\r\n\t\t\t\t\telement: <RepoListPage />,\r\n\t\t\t\t\tloader: loaderRepoListPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner\",\r\n\t\t\t\t\telement: null,\r\n\t\t\t\t\tloader: ({ params }) =>\r\n\t\t\t\t\t\tredirect(\r\n\t\t\t\t\t\t\t`/repositories/?name=${params.owner}`,\r\n\t\t\t\t\t\t),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner/:repo\",\r\n\t\t\t\t\telement: <RepoDetailsPage tab={0} />,\r\n\t\t\t\t\tloader: loaderRepoDetailsPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner/:repo/issues\",\r\n\t\t\t\t\telement: <RepoDetailsPage tab={1} />,\r\n\t\t\t\t\tloader: loaderRepoDetailsPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/repositories/:owner/:repo/issues/:issueNumber\",\r\n\t\t\t\t\telement: <IssueDetailsPage />,\r\n\t\t\t\t\tloader: loaderIssueDetailsPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/issues\",\r\n\t\t\t\t\telement: <IssueListPage />,\r\n\t\t\t\t\tloader: loaderIssueListPage,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpath: \"/settings\",\r\n\t\t\t\t\telement: <SettingsPage />,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t],\r\n\t{\r\n\t\tbasename: \"/\",\r\n\t},\r\n);\r\n\r\nexport const App: FC = () => {\r\n\treturn (\r\n\t\t<ThemeProvider theme={themeComposed}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<SnackbarProvider\r\n\t\t\t\tpreventDuplicate\r\n\t\t\t\tmaxSnack={3}\r\n\t\t\t\tautoHideDuration={1750}\r\n\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\tvertical: \"bottom\",\r\n\t\t\t\t\thorizontal: \"left\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<RouterProvider router={router} />\r\n\t\t\t</SnackbarProvider>\r\n\t\t</ThemeProvider>\r\n\t);\r\n};\r\n","import \"@fontsource/ibm-plex-serif/300.css\";\r\nimport \"@fontsource/ibm-plex-serif/400.css\";\r\nimport \"@fontsource/ibm-plex-serif/500.css\";\r\nimport \"@fontsource/ibm-plex-serif/700.css\";\r\nimport \"@fontsource/roboto/300.css\";\r\nimport \"@fontsource/roboto/400.css\";\r\nimport \"@fontsource/roboto/500.css\";\r\nimport \"@fontsource/roboto/700.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { App } from \"./App.tsx\";\r\n\r\nReactDOM.createRoot(\r\n\tdocument.getElementById(\"root\")!,\r\n).render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n);\r\n"],"names":["nav","WithAppBar","props","location","children","seconadaryAction","submit","useSubmit","drawerOpen","setDrawerOpen","useState","toggleDrawer","appBarRef","useRef","contentHeight","setContentHeight","useEffect","appBarHeight","redirectPath","path","Fragment","jsxs","Box","AppBar","Toolbar","jsx","IconButton","ListRounded","Divider","Drawer","CloseRounded","Typography","List","label","ListItem","ListItemButton","ListItemText","ErrorBoundry","status","statusText","useRouteError","Container","ISSUE_FILTER_PREF_STATE_KEY","ISSUE_FILTER_PREF_OWNER_TYPE_KEY","ISSUE_FILTER_STATE_OPTIONS","ISSUE_FILTER_OWNER_TYPE_OPTIONS","REPO_FILTER_PREF_CUSTOM_PREFIX","REPO_FILTER_PREF_TOPIC_MATCH_STRATEGY_KEY","REPO_FILTER_PREF_VISIBILITY_KEY","REPO_FILTER_PREF_STATUS_KEY","REPO_FILTER_TOPIC_MATCH_STRATEGY_OPTIONS","REPO_FILTER_VISIBILITY_OPTIONS","REPO_FILTER_STATUS_OPTIONS","orderByString","a","b","a_","b_","orderByBoolean","orderByNumber","timeSince","dateString","fallback","moment","normalizeDateString","toTimeStamp","timeAt","delta","getRepoFilterPrefPropertyPrefix","data","getRepoFilterPrefVisibility","setRepoFilterPrefVisibility","value","getRepoFilterPrefStatus","setRepoFilterPrefStatus","getRepoFilterPrefTopicMatchStrategy","setRepoFilterPrefTopicMatchStrategy","setRepoFilterPrefCustomPrefix","getIssueFilterPrefState","setIssueFilterPrefState","getIssueFilterPrefOwnerType","setIssueFilterPrefOwnerType","StyledTableHead","order","orderBy","onRequestSort","columnDefinition","createSortHandler","property","_","TableHead","TableRow","id","index","TableCell","TableSortLabel","StyledTableRow","item","render","StyledDataTable","orderingFn","items","setOrder","orderBy_","setOrderBy","handleRequestSort","items_","useMemo","orderFn","orderedItems_","TableContainer","Table","TableBody","StyledSelect","options","rest","options_","Select","MenuItem","StyledSelectMultiple","loadedOptions","disableOptions","StyledTextField","onEnter","onChange","handleKeyUp","e","handleChange","TextField","COLUMN_DEFINITION","issue","Link","capitalize","getOrderingFn","WrappableListItem","text","Stack","StyledToolbar","ownerType","repoFullNames","state","loadedTitle","itemCount","repoOptions","title","setTitle","handleSubmit","key","query","handleOwnerTypeChange","event","handleStateChange","handleRepoFullNamesChange","handleRepoFullNamesReset","filterOpen","setFilterOpen","toggleFilter","itemCountMsg","expandIcon","ExpandLessRounded","ExpandMoreRounded","FilterListRounded","Collapse","ClearRounded","IssueDataTable","disableFilter","issues","loadedRepoOptions","loadedRepoFullNames","loadedOwnerType","loadedState","repo","loadedName","topics","visibility","topicMatchStrategy","topicOptions","propertyOptions","properties","name","setName","handleNameSubmit","handleTopicMatchStrategyChange","handleStatusChange","handleVisibilityChange","handleTopicChange","handleTopicClear","handlePropertyChange","handlePropertyClear","RepoDataTable","repos","loadedTopicOptions","loadedTopicMatchStrategy","loadedStatus","loadedTopics","loadedVisibility","loadedProperties","propertyPrefix","StyledBreadcrumbs","breadcrumbsProps","typographyProps","paths","_paths","createElement","Breadcrumbs","HomePage","activeRepos","archivedRepos","closedIssues","openIssues","recentRepos","recentIssues","useLoaderData","Card","CardHeader","db1","db","repoStore","db2","dbPromise","openDB","oldVersion","getToken","token","getOctokit","Octokit","getRepos","req","full_name","created_at","updated_at","description","html_url","homepage","pushed_at","is_archived","is_private","getRepoReadMe","err","fullName","ocktokit","owner","getRepoIssues","repoId","issue_number","locked","closed_at","body","user","getRepoIssueComment","issueNumber","issueId","getCachedRepos","getCachedRepo","getCachedTopics","uniqueTopics","topic","getCachedIssues","getCachedRepoIssues","repoFullName","getCachedRepoIssue","getCachedIssueComments","updateCachedRepos","updateCachedRepoIssues","updateCachedRepoIssueComments","issueComments","comment","syncCachedRepos","onFailure","res","syncCachedRepoIssues","cachedRepos","syncCachedRepoIssueComments","cachedIssues","loaderHome","owner_type","parseMarkdown","content","unified","remarkParse","remarkGfm","remarkMath","remarkRehype","rehypeSanitize","rehypeKatex","rehypeDocument","rehypeStringify","Markdown","emptyText","sx","contentRef","innerHtml","IssueMetaData","createdMsg","updatedMsg","closedMsg","msg","IssueComment","Paper","IssueDetailsPage","comments","loader","params","repoName","IssueListPage","filterRepos","topicFilterMode","matchSorter","filterIssues","request","repo_full_name","searchParams","repoFullNamesParam","toSearchParam","createSearchParams","REPO_METADATA_DEFINITIONS","RepoDetailsPage","tab","handleTabChange","closeDrawer","decodedReadme","Buffer","ChevronLeftRounded","Tabs","Tab","RepoListPage","topicsParam","propertyParam","secondary","primary","SettingRegionAPI","enqueueSnackbar","useSnackbar","personalAccessToken","setPersonalAccessToken","handlePasswordChange","commitChanges","ListSubheader","Button","SettingRegionIssueFilterPref","setOwnerType","setState","DEF_MODE","DEF_VIS","DEF_PREFIX","DEF_STATUS","SettingRegionRepoFilterPref","customPrefix","setCustomPrefix","mode","setMode","setVisibility","setStatus","handleCustomPrefixChange","handleVisiblityChange","SYNC_DETAILS","LAST_SYNC","SettingRegionSync","syncing","setSyncing","lastSyncs","setLastSync","enqueueError","handleSync","prev","next","promise","successMsg","r","timestamp","CircularProgress","SettingsPage","themePalette","createTheme","alpha","themeComponent","themeComposed","router","createHashRouter","Home","loaderRepoListPage","redirect","loaderRepoDetailsPage","loaderIssueDetailsPage","loaderIssueListPage","App","ThemeProvider","CssBaseline","SnackbarProvider","RouterProvider","ReactDOM","React"],"mappings":"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"}